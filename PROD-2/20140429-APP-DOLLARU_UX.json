{
    "entityType": "Application",
    "name": "DOLLARU_UX",
    "enforceCompleteSnapshots": false,
    "propSheet": {"properties": []},
    "components": [
        {
            "entityType": "Component",
            "name": "DIMENSION",
            "created": 1395932999223,
            "importAutomatically": false,
            "useVfs": true,
            "active": true,
            "deleted": false,
            "defaultVersionType": "FULL",
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "envPropDefs": [
                {
                    "name": "Cst_DIM_dmcli_basedir",
                    "label": "Cst_DIM_dmcli_basedir",
                    "type": "TEXT",
                    "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_tmpdir",
                    "label": "Cst_DIM_dmcli_tmpdir",
                    "type": "TEXT",
                    "value": "\/tmp\/serena ",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_profile",
                    "label": "Cst_DIM_dmcli_profile",
                    "type": "TEXT",
                    "value": "dmprofile",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_exe",
                    "label": "Cst_DIM_dmcli_exe",
                    "type": "TEXT",
                    "value": "dmcli",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_user",
                    "label": "Cst_DIM_dmcli_user",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_pass",
                    "label": "Cst_DIM_dmcli_pass",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_dbname",
                    "label": "Cst_DIM_dmcli_dbname",
                    "type": "TEXT",
                    "value": "generali",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_dsn",
                    "label": "Cst_DIM_dmcli_dsn",
                    "type": "TEXT",
                    "value": "INSSRAR0",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_Dim_app_user",
                    "label": "Cst_Dim_app_user",
                    "type": "TEXT",
                    "value": "root",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_Dim_app_pass",
                    "label": "Cst_Dim_app_pass",
                    "type": "TEXT",
                    "value": "pbe{5nq6egRoA1loacVgZ1LQcT4PdyWR8sgZuLViIZrDyt0=}",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHHost",
                    "label": "Cst_DIM_SSHHost",
                    "type": "TEXT",
                    "value": "lr2te614.groupe.generali.fr",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SASDepot",
                    "label": "Cst_DIM_SASDepot",
                    "type": "TEXT",
                    "value": "\/products\/serena\/sas",
                    "required": true,
                    "description": ""
                }
            ],
            "versionPropDefs": [],
            "propSheetGroup": {"propSheets": [
                {
                    "name": "template",
                    "properties": []
                },
                {
                    "name": "custom",
                    "properties": [
                        {
                            "name": "lib_dim_logger",
                            "value": "function dim_logger(){\n   echo \"[`date '+%Y%m%d-%H%M%S'`][$1]$2\"\n}",
                            "description": "lib_dim_logger",
                            "secure": false
                        },
                        {
                            "name": "lib_get_bl_package_and_rename",
                            "value": "function get_bl_package_and_rename(){\n   basename=`basename $0`\n   timestamp=\"`date '+%Y%m%d%H%M%S'`_$$_${basename}\"\n   crtfile=\"${dmcli_tmpdir}\/log_${timestamp}\"\n   mkdir -p \"${dmcli_tmpdir}\" 2>\/dev\/null\n   \n   lsource_dir=$1\n   ldest_dir=$2\n   ldest_packageName=$3\n   \n   \n   dim_logger \"I\" \"get last modify backup package from ${lsource_dir}\"\n   #Rq: \n   # on fait plutot ls -ltr \"${app_depot_agent_sas}\/PKG_${app_baselineId}\/${app_projet}\/${app_folder}\" plutot que ls -ltr \"${app_depot_agent_sas}\/PKG_${app_baselineId}\/${app_projet}\/${app_folder}\/*.zip\" \n   # pour garantir que la commande n'echoue pas s'il y a bcp de fichier zip presents\n   # => ls ls -ltr ne porte donc que sur le rep de stockage, et on filtre ensuite sur le type de fichier et sur l'extension zip\n   \n   # remarque 2: cas non gere si le fichier zip contient des espaces ' ' \n   dim_logger \"D\" \"ls -ltr \\\"${lsource_dir}\\\" 2>\/dev\/null | egrep -v \\\"^d\\\" | egrep \\\"*.zip\\\" | awk '{print \\$NF}' | tail -1\"\n   lastModifyFile=`ls -ltr \"${lsource_dir}\" 2>\/dev\/null | egrep -v \"^d\" | egrep \"*.zip\" | awk '{print $NF}' | tail -1`\n   if [ $? -ne 0 ]; then dim_logger \"E\" \"Impossible de lister les fichiers ${lsource_dir}\/*.zip \"; return 1;fi\n   \n   if [[ \"$lastModifyFile\" == \"\" ]]; then echo dim_logger \"E\" \"Aucun fichier .zip n'est present dans ${lsource_dir}\/ \"; return 1;fi\n   \n   dim_logger \"D\" \"lastModifyFile=$lastModifyFile\"\n   \n   # add full path\n   lastModifyFile=\"${lsource_dir}\/${lastModifyFile}\"\n   dim_logger \"D\" \"Full path lastModifyFile=$lastModifyFile\"\n   if [ ! -f \"${lastModifyFile}\" ]; then dim_logger \"E\" \"Impossible de recuperer le dernier fichier zip dans ${lsource_dir}\/ \";return 1;fi\n   \n   dim_logger \"D\" \"lastModifyFile full path=$lastModifyFile\"\n   dim_logger \"D\" \"cp \\\"$lastModifyFile\\\" \\\"${ldest_dir}\/${ldest_packageName}\\\"\"\n   cp \"$lastModifyFile\" \"${ldest_dir}\/${ldest_packageName}\"\n   \n   if [ $? -ne 0 ]; then \n      dim_logger \"E\" \"Impossible de copier $lastModifyFile ${ldest_dir}\/${ldest_packageName}\"; return 1;\n   else\n      dim_logger \"I\" \"Mise a disposition de  \\\"${ldest_dir}\/${ldest_packageName}\\\"\" \n   fi\n   return 0\n}",
                            "description": "lib_get_bl_package_and_rename",
                            "secure": false
                        },
                        {
                            "name": "lib_get_package_with_bl",
                            "value": "function get_package_with_bl(){\nbasename=`basename $0`\ntimestamp=\"`date '+%Y%m%d%H%M%S'`_$$_${basename}\"\ncrtfile=\"${dmcli_tmpdir}\/log_${timestamp}\"\nmkdir -p \"${dmcli_tmpdir}\" 2>\/dev\/null\n\n\nvar_pkgname=$1\nvar_blname=$2\n\n\n\n\ndim_logger \"I\" \"generate a random number between 0-999\"\nrandom=`expr $RANDOM % 999`\ndim_logger \"D\" \"random=$random\"\n\ndim_logger \"I\" \"Get numBL\"\ndim_logger \"D\" \"cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user <user> -pass <password> -dbname <dbname> -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \\\"${var_pkgname}\\\" | wc -l\"\n\n\nnumBL=`cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \"${var_blname}\" | wc -l`\ndim_logger \"D\" \"numBL=$numBL\"\nif [[ \"$numBL\" == \"\" ]]; then dim_logger \"E\" \"Get numBL KO \"; rm -f \"${crtfile}\"; return 1;fi\n\n\n\ndim_logger \"I\" \"extract package with BL\"\ndim_logger \"D\" \"cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user <user> -pass <password> -dbname <dbname> -dsn ${dmcli_dsn} -cmd \\\"REL \\\\\\\"ARM:RL_${var_pkgname}_${random}\\\\\\\" \/BASELINE=\\\\\"ARM:${var_pkgname}_${numBL}\\\\\" \/DIRECTORY=\\\\\\\"${app_depot_agent_node}::${app_depot_agent_sas}\/${var_pkgname}\\\\\\\" \/NOMETADATA\\\"\"\n\n\ncd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"REL \\\"ARM:RL_${var_pkgname}_${random}\\\" \/BASELINE=\\\"ARM:${var_pkgname}_${numBL}\\\" \/DIRECTORY=\\\"${app_depot_agent_node}::${app_depot_agent_sas}\/${var_pkgname}\\\" \/NOMETADATA\" 1> ${crtfile} 2>&1\n\n\nif [ $? -ne 0 ]; then \ndim_logger \"E\" \"extract package with BL KO \";rm -f \"${crtfile}\"; return 1;\nelse\ndim_logger \"I\" \"extract package with BL OK \"; \nfi\nrm -f \"${crtfile}\";\nreturn 0\n}",
                            "description": "lib_get_package_with_bl",
                            "secure": false
                        },
                        {
                            "name": "lib_import_package_with_bl",
                            "value": "function import_package_with_bl(){\nbasename=`basename $0`\ntimestamp=\"`date '+%Y%m%d%H%M%S'`_$$_${basename}\"\ncrtfile=\"${dmcli_tmpdir}\/log_${timestamp}\"\nmkdir -p \"${dmcli_tmpdir}\" 2>\/dev\/null\n\n\n\nlpath_directory=$1\ndim_logger \"D\" \"lpath_directory=$lpath_directory\"\nlchange_doc_ids=$2\ndim_logger \"D\" \"lchange_doc_ids=$lchange_doc_ids\"\nvar_folder=$3\ndim_logger \"D\" \"var_folder=$var_folder\"\nvar_rlname=$4\ndim_logger \"D\" \"var_rlname=$var_rlname\" \n# rlname : ${p:SBM_BckPackage} (import_bck) OR RL_${p:SBM_BaselineId} (import_pkg)\nvar_pkgname=$5\ndim_logger \"D\" \"var_pkgname=$var_pkgname\" \n# ${p:SBM_BckPackage} (import_bck) OR PKG_${p:SBM_BaselineId} (import_pkg)\nvar_blname=$6\ndim_logger \"D\" \"var_blname=$var_blname\" \n# ${p:SBM_BckPackage} (import_bck) OR {p:SBM_BaselineId} (import_pkg)\n\n\n\ncd ${dmcli_basedir} \n. .\/${dmcli_profile}\n\ndim_logger \"I\" \"check folder:${lpath_directory}\\\\${var_folder}\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkfolder.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkfolder.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\" 1> ${crtfile} 2>&1\ngrep \"SUCCEEDED\" ${crtfile}\nif [ $? -ne 0 ]; then dim_logger \"E\" \"check folder KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"check package\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkpkg.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkpkg.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\" 1> ${crtfile} 2>&1\ngrep \"SUCCEEDED\" ${crtfile}\nif [ $? -ne 0 ]; then dim_logger \"E\" \"check package KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"create request\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"CC ARM LIVRAISON \/AFFECTED=(\\\"ARM:${var_folder}\\\") \/ATTRIBUTES=(Title=\\\"${var_rlname}\\\") \/WORKSET=\\\"ARM:MAIN\\\"\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"CC ARM LIVRAISON \/AFFECTED=(\\\"ARM:${var_folder}\\\") \/ATTRIBUTES=(Title=\\\"${var_rlname}\\\") \/WORKSET=\\\"ARM:MAIN\\\"\" 1> ${crtfile} 2>&1\nif [ $? -ne 0 ]; then dim_logger \"E\" \"create request KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"get number livraison\"\nnumLiv=`cat ${crtfile} | grep ARM_LIVRAISON | sed 's\/[^[:digit:]]\/\/g'`\nif [[ \"$numLiv\" == \"\" ]]; then dim_logger \"E\" \"get number livraison KO \"; rm -f \"${crtfile}\"; return 1;fi\ndim_logger \"D\" \"numLiv=$numLiv\"\n\n\n\n\ndim_logger \"I\" \"import File\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"UPLOAD \/DIRECTORY=\\\"${lpath_directory}\\\\${var_folder}\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/NOKEEP \/FORCE_CHECKIN \/RECURSIVE \/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/PART=\\\"ARM:${var_folder}\\\"\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"UPLOAD \/DIRECTORY=\\\"${lpath_directory}\\\\${var_folder}\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/NOKEEP \/FORCE_CHECKIN \/RECURSIVE \/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/PART=\\\"ARM:${var_folder}\\\"\" 1> ${crtfile} 2>&1\nif [ $? -ne 0 ]; then dim_logger \"E\" \"import File KO \"; echo \"rm -f \\\"${crtfile}\\\"\"; return 1;fi\n\ndim_logger \"I\" \"close request\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"AC ${lchange_doc_ids}_${numLiv} \/STATUS=\\\"FERME\\\"\\\"\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"AC ${lchange_doc_ids}_${numLiv} \/STATUS=\\\"FERME\\\"\"\nif [ $? -ne 0 ]; then dim_logger \"E\" \"close request KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"Get numBL\"\ndim_logger \"D\" \"cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \\\"${var_blname}\\\" | wc -l\"\nnumBL=`cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \"${var_blname}\" | wc -l`\ndim_logger \"D\" \"numBL=$numBL\"\nif [[ \"$numBL\" == \"\" ]]; then dim_logger \"E\" \"Get numBL KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"increment numBL_long\"\nnumBL_long=`echo \"${numBL} + 1\" | bc`\ndim_logger \"D\" \"numBL_long=$numBL_long\"\nif [[ \"$numBL_long\" == \"\" ]]; then echo \"Erreur durant le calcul de l'increment\"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"create baseline\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"CBL \\\"ARM:${var_pkgname}_${numBL_long}\\\" \/PART=\\\"ARM:${var_folder}\\\" \/TEMPLATE_ID=\\\"ALL_LIVRAISON\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/LEVEL=\\\"0\\\"\/TYPE=\\\"BASELINE\\\"\/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/INCLUDE_CLOSED \/SCOPE=\\\"PART\\\"\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"CBL \\\"ARM:${var_pkgname}_${numBL_long}\\\" \/PART=\\\"ARM:${var_folder}\\\" \/TEMPLATE_ID=\\\"ALL_LIVRAISON\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/LEVEL=\\\"0\\\"\/TYPE=\\\"BASELINE\\\"\/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/INCLUDE_CLOSED \/SCOPE=\\\"PART\\\"\" 1> ${crtfile} 2>&1\nif [ $? -ne 0 ]; then \ndim_logger \"E\" \"create baseline KO \"; rm -f \"${crtfile}\"; return 1;\nelse\ndim_logger \"I\" \"create baseline OK \";\nfi\nrm -f \"${crtfile}\";\n\nreturn 0\n}",
                            "description": "lib_import_package_with_bl",
                            "secure": false
                        }
                    ]
                },
                {
                    "name": "code_station",
                    "properties": [{
                        "name": "repository",
                        "value": "9e05c2a4-6aa9-4392-ad49-614631bf28db",
                        "description": "",
                        "secure": false
                    }]
                }
            ]},
            "processes": [
                {
                    "name": "GET_BL_PKG_AND_RENAME",
                    "description": "get_bl_package_and_rename",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "Var_source_dir",
                            "label": "Var_source_dir",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "Var_dest_dir",
                            "label": "Var_dest_dir",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "Var_dest_packageName",
                            "label": "Var_dest_packageName",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "40d41de51e9f9f6411bf1b620238b0",
                                "from": "get_bl_package_and_rename",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "get_bl_package_and_rename",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "40d41de51e9f9f6411bf1b620238b0",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "get_bl_package_and_rename",
                                "x": 40.5,
                                "y": 174
                            }
                        ],
                        "sizes": [],
                        "type": "graph",
                        "name": "2bad4e10-fb6a-40a0-a1e2-c4de8a54d038",
                        "children": [
                            {
                                "type": "finish",
                                "name": "40d41de51e9f9f6411bf1b620238b0",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Shell",
                                "pluginName": "Shell",
                                "pluginVersion": 4,
                                "properties": {
                                    "directoryOffset": ".",
                                    "shellInterpreter": "bash",
                                    "scriptBody": "# init variable\nVar_source_dir=\"${p:Var_source_dir}\"\nVar_dest_dir=\"${p:Var_dest_dir}\"\nVar_dest_packageName=\"${p:Var_dest_packageName}\"\n\n# Cst Env Variable\ndmcli_basedir=\"${p:environment\/Cst_DIM_dmcli_basedir}\"\ndmcli_tmpdir=\"${p:environment\/Cst_DIM_dmcli_tmpdir}\"\ndmcli_profile=\"${p:environment\/Cst_DIM_dmcli_profile}\"\ndmcli_exe=\"${p:environment\/Cst_DIM_dmcli_exe}\"\ndmcli_user=\"${p:environment\/Cst_DIM_dmcli_user}\"\ndmcli_pass=\"${p:environment\/Cst_DIM_dmcli_pass}\"\ndmcli_dbname=\"${p:environment\/Cst_DIM_dmcli_dbname}\"\ndmcli_dsn=\"${p:environment\/Cst_DIM_dmcli_dsn}\"\napp_user=\"${p:environment\/Cst_Dim_app_user}\"\napp_pass=\"${p:environment\/Cst_Dim_app_pass}\"\napp_depot_agent_node=\"${p:environment\/Cst_DIM_SSHHost}\"\napp_depot_agent_sas=\"${p:environment\/Cst_DIM_SASDepot}\"\n\n# load function\n${p:component\/lib_dim_logger}\n${p:component\/lib_import_package_with_bl}\n${p:component\/lib_get_bl_package_and_rename}\n${p:component\/lib_get_package_with_bl}\n\necho \"Show Environment\"\nset | egrep  \"^dmcli_\"\nset | egrep \"^app_\"\necho \"\"\necho \"cmd:get_bl_package_and_rename \\\"${Var_source_dir}\\\" \\\"${Var_dest_dir}\\\" \\\"${Var_dest_packageName}\\\"\"\nget_bl_package_and_rename \"${Var_source_dir}\" \"${Var_dest_dir}\" \"${Var_dest_packageName}\"\nexit $?",
                                    "runAsDaemon": "false",
                                    "outputFile": ""
                                },
                                "type": "plugin",
                                "name": "get_bl_package_and_rename",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "GET_PKG_WITH_BL",
                    "description": "get_package_with_bl",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "var_pkgname",
                            "label": "var_pkgname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_blname",
                            "label": "var_blname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "get_package_with_bl",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "74ff936d186cf3dd146b5ad4c6bb94",
                                "from": "get_package_with_bl",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "74ff936d186cf3dd146b5ad4c6bb94",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "get_package_with_bl",
                                "x": 27.5,
                                "y": 131
                            }
                        ],
                        "sizes": [
                            {
                                "name": "74ff936d186cf3dd146b5ad4c6bb94",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "get_package_with_bl",
                                "width": 190,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "87402995-c9b7-4a9f-a4c7-933f3cef7ad0",
                        "children": [
                            {
                                "type": "finish",
                                "name": "74ff936d186cf3dd146b5ad4c6bb94",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Shell",
                                "pluginName": "Shell",
                                "pluginVersion": 4,
                                "properties": {
                                    "directoryOffset": ".",
                                    "shellInterpreter": "bash",
                                    "scriptBody": "# init variable\nvar_pkgname=\"${p:var_pkgname}\"\nvar_blname=\"${p:var_blname}\"\n   \n# Cst Env Variable\ndmcli_basedir=\"${p:environment\/Cst_DIM_dmcli_basedir}\"\ndmcli_tmpdir=\"${p:environment\/Cst_DIM_dmcli_tmpdir}\"\ndmcli_profile=\"${p:environment\/Cst_DIM_dmcli_profile}\"\ndmcli_exe=\"${p:environment\/Cst_DIM_dmcli_exe}\"\ndmcli_user=\"${p:environment\/Cst_DIM_dmcli_user}\"\ndmcli_pass=\"${p:environment\/Cst_DIM_dmcli_pass}\"\ndmcli_dbname=\"${p:environment\/Cst_DIM_dmcli_dbname}\"\ndmcli_dsn=\"${p:environment\/Cst_DIM_dmcli_dsn}\"\napp_user=\"${p:environment\/Cst_Dim_app_user}\"\napp_pass=\"${p:environment\/Cst_Dim_app_pass}\"\napp_depot_agent_node=\"${p:environment\/Cst_DIM_SSHHost}\"\napp_depot_agent_sas=\"${p:environment\/Cst_DIM_SASDepot}\"\n\n# load function\n${p:component\/lib_dim_logger}\n${p:component\/lib_import_package_with_bl}\n${p:component\/lib_get_bl_package_and_rename}\n${p:component\/lib_get_package_with_bl}\n\necho \"Show Environment\"\nset | egrep  \"^dmcli_\"\nset | egrep \"^app_\"\necho \"\"\necho \"cmd:get_package_with_bl \\\"${var_pkgname}\\\" \\\"${var_blname}\\\"\"\nget_package_with_bl \"${var_pkgname} ${var_blname}\" \nexit $?",
                                    "runAsDaemon": "false",
                                    "outputFile": ""
                                },
                                "type": "plugin",
                                "name": "get_package_with_bl",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "IMP_PKG_WITH_BL",
                    "description": "import_package_with_bl",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "Var_directory",
                            "label": "Var_directory",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "Var_change_doc_ids",
                            "label": "Var_change_doc_ids",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Folder",
                            "label": "SBM_Folder",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_rlname",
                            "label": "var_rlname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_pkgname",
                            "label": "var_pkgname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_blname",
                            "label": "var_blname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "5e06097a4b13e274b4d963f81e21bb",
                                "from": "import_package_with_bl",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "import_package_with_bl",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "5e06097a4b13e274b4d963f81e21bb",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "import_package_with_bl",
                                "x": 30.5,
                                "y": 144
                            }
                        ],
                        "sizes": [
                            {
                                "name": "import_package_with_bl",
                                "width": 210,
                                "height": 60
                            },
                            {
                                "name": "5e06097a4b13e274b4d963f81e21bb",
                                "width": 80,
                                "height": 50
                            }
                        ],
                        "type": "graph",
                        "name": "244eb6ff-89a0-470b-95d1-559c4e280017",
                        "children": [
                            {
                                "type": "finish",
                                "name": "5e06097a4b13e274b4d963f81e21bb",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Shell",
                                "pluginName": "Shell",
                                "pluginVersion": 4,
                                "properties": {
                                    "directoryOffset": ".",
                                    "shellInterpreter": "bash",
                                    "scriptBody": "# init variable\n\n\n# Cst Env Variable\ndmcli_basedir=\"${p:environment\/Cst_DIM_dmcli_basedir}\"\ndmcli_tmpdir=\"${p:environment\/Cst_DIM_dmcli_tmpdir}\"\ndmcli_profile=\"${p:environment\/Cst_DIM_dmcli_profile}\"\ndmcli_exe=\"${p:environment\/Cst_DIM_dmcli_exe}\"\ndmcli_user=\"${p:environment\/Cst_DIM_dmcli_user}\"\ndmcli_pass=\"${p:environment\/Cst_DIM_dmcli_pass}\"\ndmcli_dbname=\"${p:environment\/Cst_DIM_dmcli_dbname}\"\ndmcli_dsn=\"${p:environment\/Cst_DIM_dmcli_dsn}\"\napp_user=\"${p:environment\/Cst_Dim_app_user}\"\napp_pass=\"${p:environment\/Cst_Dim_app_pass}\"\napp_depot_agent_node=\"${p:environment\/Cst_DIM_SSHHost}\"\napp_depot_agent_sas=\"${p:environment\/Cst_DIM_SASDepot}\"\n\n# load function\n${p:component\/lib_dim_logger}\n${p:component\/lib_import_package_with_bl}\n${p:component\/lib_get_bl_package_and_rename}\n${p:component\/lib_get_package_with_bl}\n\necho \"Show Environment\"\n#set | egrep  \"^dmcli_\"\n#set | egrep \"^app_\"\n\n\n\n\n\n\necho \"cmd:import_package_with_bl \\\"${p:Var_directory}\\\" \\\"${p:Var_change_doc_ids}\\\" \\\"${p:SBM_Folder}\\\" \\\"${p:var_rlname}\\\" \\\"${p:var_pkgname}\\\" \\\"${p:var_blname}\\\" \"\nimport_package_with_bl \"${p:Var_directory}\" \"${p:Var_change_doc_ids}\" \"${p:SBM_Folder}\" \"${p:var_rlname}\" \"${p:var_pkgname}\"  \"${p:var_blname}\"\nexit $?\n\n",
                                    "runAsDaemon": "false",
                                    "outputFile": ""
                                },
                                "type": "plugin",
                                "name": "import_package_with_bl",
                                "children": []
                            }
                        ]
                    }
                }
            ],
            "taskDefs": [],
            "configTemplates": [{
                "name": "lib_dimension",
                "active": false,
                "data": ""
            }]
        },
        {
            "entityType": "Component",
            "name": "DollarU",
            "created": 1395932999899,
            "importAutomatically": false,
            "useVfs": true,
            "active": true,
            "deleted": false,
            "defaultVersionType": "FULL",
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "componentTemplate": {
                "name": "DollarU-TPL",
                "description": "",
                "active": true,
                "envPropDefs": [],
                "propDefs": [],
                "properties": [
                    {
                        "name": "Cst_DIM_Depot",
                        "value": "\/products\/serena\/depot\/DOLLAR_U",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "Cst_DU_Lst_Tmp_Directories",
                        "value": "tag,bck,log,tmp,pkg",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "lib_delete_obj",
                        "value": "def int delete_obj(def String obj,def String workBaseDir, def String envScript,def String espace, def String node,def String LogFile){\n\t\/\/$DU_Script_on_remote${DU_env_s}UXEXE${DU_env_e}${DU_slash_env}uxext upr $DU_Espace NODE=$Noeud upr=$DU_Object output=\"$DU_Object\" >> $Env_Path_Current\/log\/$Nom_Log\n\tdef String objType=obj.replaceAll(\"\/.*\\$\",\"\").toLowerCase()\n\tdef String objName=obj.replaceAll(\"^.*\/\",\"\")\n\t\n\t\n\t\n\t\n\tdef exportCommand=\"\"\n\tif(objType.equals(\"upr\")){\n\t\texportCommand=\"uxdlt upr ${espace} node=${node} upr=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"ses\")){\n\t\texportCommand=\"uxdlt ses ${espace} node=${node} ses=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"rul\")){\n\t\texportCommand=\"uxdlt rul ${espace} node=${node} rul=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"class\")){\n\t\texportCommand=\"uxdlt adm  node=${node} classe=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"res\")){\n\t\texportCommand=\"uxdlt res ${espace} node=${node} res=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"appl\")){\n\t\texportCommand=\"uxdlt appl ${espace} node=${node} appl=\\\"$objName\\\"\"\n\t\t\n\t\t\n\t}\n\telse if(objType.equals(\"tsk\")){\n\t\tdef tabObjectName=objName.split(\"#\")\n\t\tif(tabObjectName.size()< 3){\n\t\t\tlogger(\"ERROR\",\"Le nom de l'objet ${obj} est invalide: une task doit etre de la forme tsk\/uproc#ses#mu\",LogFile)\n\t\t\treturn 1\n\t\t}\n\t\tdef uprocName=tabObjectName[1]\n\t\tdef sessionName=tabObjectName[0]\n\t\tdef muName=tabObjectName[2]\n\t\t\n\t\texportCommand=\"uxdlt tsk ${espace} node=${node} upr=\\\"$uprocName\\\" ses=\\\"$sessionName\\\" mu=\\\"$muName\\\"\"\n\t}\n\telse{\n\t\tlogger(\"ERROR\",\"Le type d'obj ${objType} n'est pas pris en charge\",LogFile)\n\t\treturn 1\n\t}\n\t\n\t\/\/ lancement de l'export Dollar U\n\tdef Map result=wrapper_dollarU_cmdline(workBaseDir,envScript,exportCommand)\n\t\n\tif(result[\"exitcode\"]!=0){\n\t\tlogger(\"ERROR\",\"Suppression de l'objet ${obj} : KO \\n\"+result[\"stdout\"]+\"\\n\"+result[\"stderr\"],LogFile)\n\t\treturn 1\n\t}\n\telse{\n\t\tlogger(\"INFO\",\"Suppression de l'objet ${obj} : OK\",LogFile)\n\t}\n\n\treturn 0\n}\n",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "lib_export_obj",
                        "value": "def int export_obj(def String obj,def String exportBaseDir,def String workBaseDir, def String envScript,def String espace, def String node,def String LogFile){\n\tdef String objType=obj.replaceAll(\"\/.*\\$\",\"\").toLowerCase()\n\tdef String objName=obj.replaceAll(\"^.*\/\",\"\")\n\tlogger(\"DEBUG\",\"objType=$objType\",LogFile)\n\tlogger(\"DEBUG\",\"objName=$objName\",LogFile)\n\t\n\tdef File exportDir=new File(exportBaseDir+File.separator+objType)\n\n\tif(!exportDir.isDirectory()){\n\t\tif(!exportDir.mkdirs()){\n\t\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+exportDir.getAbsolutePath(),LogFile)\n\t\t\treturn 1\n\t\t}\n\t}\n\tSystem.setProperty(\"user.dir\", exportDir.getCanonicalPath());\n\tdef exportCommand=\"\"\n\tif (objType=~ \/^opt\/){\n\t\tdef File f=new File(exportDir,objName)\n\t\tif(!f.createNewFile()){\n\t\t\tlogger(\"ERROR\",\"Impossible de creer le fichier \"+f.getAbsolutePath(),LogFile)\n\t\t\treturn 1\n\t\t}\t\n\t\telse {\n\t\t\treturn 0\n\t\t}\n\t}\n\/\/EXPORT RELATIVE PATH APRES DEPLACEMENT\n\telse if(objType.equals(\"upr\")){\n\t\texportCommand=\"uxext upr ${espace} node=${node} upr=\\\"$objName\\\" repl output=\\\"\"+objName+\"\\\"\"\n\t}\n\telse if(objType.equals(\"ses\")){\n\t\texportCommand=\"uxext ses ${espace} node=${node} ses=\\\"$objName\\\" repl output=\\\"\"+objName+\"\\\"\"\n\t}\n\telse if(objType.equals(\"rul\")){\n\t\texportCommand=\"uxext rul ${espace} node=${node} rul=\\\"$objName\\\" repl output=\\\"\"+objName+\"\\\"\"\n\t}\n\telse if(objType.equals(\"class\")){\n\t\texportCommand=\"uxext adm ${espace} node=${node} classe=\\\"$objName\\\" repl output=\\\"\"+objName+\"\\\"\"\n\t}\n\telse if(objType.equals(\"res\")){\n\t\texportCommand=\"uxext res ${espace} node=${node} res=\\\"$objName\\\" repl output=\\\"\"+objName+\"\\\"\"\n\t}\n\/\/ APPL et DOM\n\telse if(objType.equals(\"appl\")){\n\t\tlogger(\"DEBUG\",\"objtype : appl type\")\n\t\tdef File f=new File(exportDir.getCanonicalPath()+File.separator,objName)\n\t\tif(!f.createNewFile()){\n\t\t\tlogger(\"ERROR\",\"Impossible de creer le fichier \"+f.getAbsolutePath(),LogFile)\n\t\t\treturn 1\n\t\t}\n\t\telse {\n\t\t\treturn 0\n\t\t}\n\t}\n\telse if(objType.equals(\"dom\")){\n\t\tlogger(\"DEBUG\",\"objtype : dom type\")\n\t\tdef File f=new File(exportDir.getCanonicalPath(),objName)\n\t\tif(!f.createNewFile()){\n\t\t\tlogger(\"ERROR\",\"Impossible de creer le fichier \"+f.getAbsolutePath(),LogFile)\n\t\t\tSystem.exit(1)\n\t\t}\n\t\telse {\n\t\t\treturn 0\n\t\t}\n\t}\n\telse if(objType.equals(\"tsk\")){\n\t\tdef tabObjectName=objName.split(\"#\")\n\t\tprintln tabObjectName.size()\n\t\tif(tabObjectName.size()< 3){\n\t\t\tlogger(\"ERROR\",\"Le nom de l'objet ${obj} est invalide: une task doit etre de la forme tsk\/ses#upr#mu\",LogFile)\n\t\t\treturn 1\n\t\t}\n\t\tdef uprocName=tabObjectName[1]\n\t\tdef sessionName=tabObjectName[0]\n\t\tdef muName=tabObjectName[2]\n\t\tdef holdstring=\"\"\n\t\tdef shwcommand=\"uxshw tsk ${espace} node=${node} upr=\\\"$uprocName\\\" ses=\\\"$sessionName\\\" mu=\\\"*\\\"\"\n\t\tdef Map result=wrapper_dollarU_cmdline(workBaseDir,envScript,shwcommand,exportDir.getCanonicalPath())\n\n\t\tif(result[\"exitcode\"]!=0){\n\t\t\tlogger(\"ERROR\",\"impossible d'afficher le détail de ${obj} : KO \\n\"+result[\"stdout\"]+\"\\n\"+result[\"stderr\"],LogFile)\n\t\t\treturn 1\n\t\t}\n\t\telse{\n\t\t\tlogger(\"DEBUG\",\"recuperation des details de ${obj} : OK\",LogFile)\n\t\t\tif (result[\"stdout\"]=~ \/ *\\| hold\/) {\n\t\t\t\tholdstring=\"#HOLD\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\tholdstring=\"#NOHOLD\"\n\t\t\t}\n\t\t}\n\n\t\tobjName=sessionName+\"#\"+uprocName+\"#\"+muName\n\t\texportCommand=\"uxext tsk ${espace} node=${node} upr=\\\"$uprocName\\\" ses=\\\"$sessionName\\\" mu=\\\"*\\\" repl output=\\\"\"+objName+holdstring+\"\\\"\"\n\t}\n\telse{\n                               logger(\"ERROR\",\"Le type d'obj ${objType} n'est pas pris en charge\",LogFile)\n                               return 1\n                }\n                \n                \/\/ lancement de l'export Dollar U\n\t\t\t\tSystem.setProperty(\"user.dir\", exportDir.getCanonicalPath());\n\t\t\t\tlogger(\"DEBUG\",\"workBaseDir:\"+workBaseDir)\n\t\t\t\tlogger(\"DEBUG\",\"envScript:\"+envScript)\n\t\t\t\tlogger(\"DEBUG\",\"exportCommand:\"+exportCommand)\n\t\t\t\t\n                def Map result=wrapper_dollarU_cmdline(workBaseDir,envScript,exportCommand,exportDir.getCanonicalPath())\n                \n                if(result[\"exitcode\"]!=0){\n                               logger(\"ERROR\",\"export de l'objet ${obj} : KO \\\n\"+result[\"stdout\"]+\"\\\n\"+result[\"stderr\"],LogFile)\n                               return 1\n                }\n                else{\n                               logger(\"INFO\",\"export de l'objet ${obj} : OK\",LogFile)\n                }\n                return 0\n}\n",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "lib_getDependancies",
                        "value": "#!\/bin\/ksh\n#-------------------------------------------\nfunction GetDependancies {\n\t_NameObject=$(echo ${_Object}|awk -F \"\/\" '{print $2}')\n\tcase $_Type in\n\t\ttsk)\n\t\t\t_Session=${_NameObject}\n\t\t\tListDepTask\n\t\t\t;;\n\t\tses)\n\t\t\t_Session=${_NameObject}\n\t\t\tListDepSession\n\t\t\t;;\n\t\tupr) \t\n\t\t\t_Uproc=${_NameObject}\n\t\t\t_TabUproc=${_Uproc}\n\t\t\tListDepUproc\n\t\t\t;;\n\t\tclass|res|rul) echo ${_Object} >> $_ExtractTmpDepFile ;;\n\n\t\t*) \techo \"${_Type}: Type inconnu!\" ; exit 1 ;;\n\tesac\n}\n#-------------------------------------------\nfunction GetTaskStatus {\n_TaskStatus=$($UXEXE\/uxshw tsk $_Space ses=$_Session node=$_Node upr=* mu=*|awk  '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {session=$5}\n\t\t\t\t\t\t\t\t( $2 == \"hold\" ){print \"HOLD\"}\n\t\t\t\t\t\t\t\t( $2 == \"nohold\" ){print \"NOHOLD\"}\n\t\t\t\t\t\t\t\t')\n}\n#-------------------------------------------\nfunction GetTaskInfo {\n$UXEXE\/uxshw tsk $_Space ses=$_Session node=$_Node upr=* mu=*|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {session=$5}\n\t\t\t\t\t\t\t\t( $2 == \"upr\" ){uproc=$4}\n\t\t\t\t\t\t\t\t( $2 == \"mu\" ){print \"tsk\/\"session\"#\"uproc\"#\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t'\n}\n#-------------------------------------------\nfunction ListDepTask {\n_Session=$($UXEXE\/uxshw tsk $_Space ses=$_Session node=$_Node upr=* mu=*|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\tBEGIN {first=\"yes\"}\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" && first == \"yes\") {first=\"no\";print $5}\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {session=$5}\n\t\t\t\t\t\t\t\t( $2 == \"upr\" ){uproc=$4}\n\t\t\t\t\t\t\t\t( $2 == \"mu\" ){print \"tsk\/\"session\"#\"uproc\"#\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t( $2 == \"rule\" ) {rule=substr($4,3,8)\n\t\t\t\t\t\t\t\t\t\tprint \"rul\/\"rule >> outputfile }\n\t\t\t\t\t\t\t\t')\nListDepSession\n}\n#-------------------------------------------\nfunction ListDepSession {\n_TabUproc=$($UXEXE\/uxshw ses $_Space ses=$_Session node=$_Node|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {print \"ses\/\"$5 >> outputfile} \n\t\t\t\t\t\t\t\t( $2 == \"upr\" ){print $4;print \"upr\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t')\nListDepUproc\n}\n#-------------------------------------------\nfunction ListDepUproc {\nfor _uproc in $_TabUproc\ndo\n\t$UXEXE\/uxshw upr $_Space upr=$_uproc node=$_Node|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"upr\" ) {print \"upr\/\"$5 >> outputfile} \n\t\t\t\t\t\t\t\t( $2 == \"class\" && $4 == \" \" ) {print \"class\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t( $1 == \"dep\" ) {print \"upr\/\"$3 >> outputfile}\n\t\t\t\t\t\t\t\t( $1 == \"res\" ) {print \"res\/\"$3 >> outputfile}\n\t\t\t\t\t\t\t\t( $2 == \"dom\" ){print \"dom\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t( $2 == \"appl\" ){print \"appl\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t'\ndone\n}",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "lib_import_obj",
                        "value": "def int import_obj(def String obj,def String importBaseDir,def String workBaseDir, def String envScript,def String espace, def String node, def String TskUser=\"\", def String TskMu=\"\", def String TskHold=\"\",def String LogFile){\n\/\/\t$DU_Script_on_remote${DU_env_s}UXEXE${DU_env_e}${DU_slash_env}uxext upr $DU_Espace NODE=$Noeud upr=$DU_Object output=\"$DU_Object\" >> $Env_Path_Current\/log\/$Nom_Log\n\tdef String objType=obj.replaceAll(\"\/.*\\$\",\"\").toLowerCase()\n\tdef String objName=obj.replaceAll(\"^.*\/\",\"\")\n\tlogger(\"DEBUG\",\"objType=$objType\",LogFile)\n\tlogger(\"DEBUG\",\"objName=$objName\",LogFile)\n\t\n\tdef File importDir=new File(importBaseDir+File.separator+objType)\n\tlogger(\"DEBUG\",\"importDir:\"+importDir,LogFile)\n\n\tdef updateCommand=\"\"\n\tdef importCommand=\"\"\n\tdef UserTsk=\"\"\n\tif(objType.equals(\"upr\")){\n\t\timportCommand=\"uxins upr ${espace} node=${node} upr=\\\"$objName\\\" input=\\\"\"+objName+\"\\\" repl\"\n\t}\n\telse if(objType.equals(\"ses\")){\n\t\timportCommand=\"uxins ses ${espace} node=${node} ses=\\\"$objName\\\" input=\\\"\"+objName+\"\\\" repl\"\n\t}\n\telse if(objType.equals(\"rul\")){\n\t\timportCommand=\"uxins rul ${espace} node=${node} rul=\\\"$objName\\\" input=\\\"\"+objName+\"\\\" repl\"\n\t}\n\telse if(objType.equals(\"class\")){\n\t\timportCommand=\"uxins adm  node=${node} classe=\\\"$objName\\\" input=\\\"\"+objName+\"\\\" repl\"\n\t}\n\telse if(objType.equals(\"res\")){\n\t\timportCommand=\"uxins res ${espace} node=${node} res=\\\"$objName\\\" input=\\\"\"+objName+\"\\\" repl\"\n\t}\n\telse if(objType.equals(\"appl\")){\n\t\tlogger(\"WARNING\",\"Import APPL demande mais non implemente !\",LogFile)\n\t\treturn 0\n\t\t\n\t}\n\telse if(objType.equals(\"dom\")){\n\t\tlogger(\"WARNING\",\"Import DOM demande mais non implemente !\",LogFile)\n\t\treturn 0\n\t\t\n\t}\n\telse if(objType.equals(\"tsk\")){\n\t\tdef tabObjectName=objName.split(\"#\")\n\t\tif(tabObjectName.size()!= 4){\n\t\t\tlogger(\"ERROR\",\"Le nom de l'objet ${obj} est invalide: une task doit etre de la forme tsk\/uproc#ses#mu\",LogFile)\n\t\t\treturn 1\n\t\t}\n\t\tdef String muName=\"\"\n\t\tdef uprocName=tabObjectName[1]\n\t\tdef sessionName=tabObjectName[0]\n\t\tdef holdmode=tabObjectName[3]\n\t\tif (TskMu==\"\") {\n\t\t\tmuName=tabObjectName[2]\n\t\t} \n\t\telse {\n\t\t\tmuName=TskMu\n\t\t}\n\t\t\n\t\timportCommand=\"uxins tsk ${espace} node=${node} upr=\\\"$uprocName\\\" ses=\\\"$sessionName\\\" cible=\\\"$muName\\\"  HOLD input=\\\"\"+objName+\"\\\" repl\"\n\t\t\/\/ lancement de l'export Dollar U\n\t\tlogger(\"DEBUG\",\"importCommand:\"+importCommand,LogFile)\n\t\tdef Map result=wrapper_dollarU_cmdline(workBaseDir,envScript,importCommand,importDir.getCanonicalPath())\n\t\t\n\t\tif(result[\"exitcode\"]!=0){\n\t\t\tlogger(\"ERROR\",\"import de l'objet ${obj} : KO \\n\"+result[\"stdout\"]+\"\\n\"+result[\"stderr\"],LogFile)\n\t\t\treturn 1\n\t\t}\n\t\telse{\n\t\t\tlogger(\"INFO\",\"import de la tache  ${obj} en mode HOLD : OK\",LogFile)\n\t\t\tif ( TskHold != \"\" || TskUser != \"\"){\n\t\t\t\tif (TskHold != \"\") {\n\t\t\t\t\tholdmode=TskHold\n\t\t\t\t\tlogger(\"DEBUG\",\"update status task : \"+TskHold,LogFile)\n\t\t\t\t}\n\n\t\t\t\tif (TskUser != \"\") {\n\t\t\t\t\tUserTsk=\"user=\"+TskUser\n\t\t\t\t\tlogger(\"DEBUG\",\"update user task : \"+UserTsk,LogFile)\n\t\t\t\t}\n\t\t\t\tlogger(\"DEBUG\",\"lancement update\",LogFile)\n\t\t\t\tlogger(\"DEBUG\",\"UserTsk:\"+UserTsk,LogFile)\n\t\t\t\tupdateCommand=\"uxupd tsk ${espace} node=${node} upr=\\\"$uprocName\\\" ses=\\\"$sessionName\\\" mu=\\\"$muName\\\"  vupr=* TECHINF ${UserTsk} ${holdmode}\"\n\t\t\t\t\n\t\t\t\tlogger(\"DEBUG\",\"updateCommand:\"+updateCommand,LogFile)\n\t\t\t\t\/\/ lancement de l'update Dollar U\n\t\t\t\tresult=wrapper_dollarU_cmdline(workBaseDir,envScript,updateCommand,importDir.getCanonicalPath())\n\t\t\t\t\n\t\t\t\tif(result[\"exitcode\"]!=0){\n\t\t\t\t\tlogger(\"ERROR\",\"update de l'objet ${obj} : KO \\n\"+result[\"stdout\"]+\"\\n\"+result[\"stderr\"],LogFile)\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlogger(\"INFO\",\"update de la tache  ${obj} : OK\",LogFile)\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tlogger(\"ERROR\",\"Le type d'obj ${objType} n'est pas pris en charge\",LogFile)\n\t\treturn 1\n\t}\n\t\n\t\/\/ lancement de l'export Dollar U\n\tlogger(\"DEBUG\",\"importCommand:\"+importCommand,LogFile)\n\tdef Map result=wrapper_dollarU_cmdline(workBaseDir,envScript,importCommand,importDir.getCanonicalPath())\n\t\n\tif(result[\"exitcode\"]!=0){\n\t\tlogger(\"ERROR\",\"import de l'objet ${obj} : KO \\n\"+result[\"stdout\"]+\"\\n\"+result[\"stderr\"],LogFile)\n\t\treturn 1\n\t}\n\telse{\n\t\tlogger(\"INFO\",\"import de l'objet ${obj} : OK\",LogFile)\n\t}\n\n\treturn 0\n}\n",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "lib_isExist_obj",
                        "value": "def Boolean isExist_obj(def String obj,def String workBaseDir, def String envScript,def String espace, def String node,def String LogFile){\n\/\/\t$DU_Script_on_remote${DU_env_s}UXEXE${DU_env_e}${DU_slash_env}uxext upr $DU_Espace NODE=$Noeud upr=$DU_Object output=\"$DU_Object\" >> $Env_Path_Current\/log\/$Nom_Log\n\tdef String objType=obj.replaceAll(\"\/.*\\$\",\"\").toLowerCase()\n\tdef String objName=obj.replaceAll(\"^.*\/\",\"\")\n\t\n\t\n\t\n\t\n\tdef exportCommand=\"\"\n\tif(objType.equals(\"upr\")){\n\t\texportCommand=\"uxshw upr ${espace} node=${node} upr=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"ses\")){\n\t\texportCommand=\"uxshw ses ${espace} node=${node} ses=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"rul\")){\n\t\texportCommand=\"uxshw rul ${espace} node=${node} rul=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"class\")){\n\t\texportCommand=\"uxshw adm  node=${node} classe=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"res\")){\n\t\texportCommand=\"uxshw res ${espace} node=${node} res=\\\"$objName\\\"\"\n\t}\n\telse if(objType.equals(\"appl\")){\n\t\texportCommand=\"uxshw appl ${espace} node=${node} appl=\\\"$objName\\\"\"\t\t\n\t}\n\telse if(objType.equals(\"dom\")){\n\t\texportCommand=\"uxshw dom ${espace} node=${node} dom=\\\"$objName\\\"\"\t\t\n\t}\n\n\n\n\telse if(objType.equals(\"tsk\")){\n\t\tdef tabObjectName=objName.split(\"#\")\n\t\tif(tabObjectName.size()< 3){\n\t\t\tlogger(\"ERROR\",\"Le nom de l'objet ${obj} est invalide: une task doit etre de la forme tsk\/uproc#ses#mu\",LogFile)\n\t\t\treturn false\n\t\t}\n\t\tdef uprocName=tabObjectName[1]\n\t\tdef sessionName=tabObjectName[0]\n\t\tdef muName=tabObjectName[2]\n\t\t\n\t\texportCommand=\"uxshw tsk ${espace} node=${node} upr=\\\"$uprocName\\\" ses=\\\"$sessionName\\\" mu=\\\"$muName\\\"\"\n\t}\n\telse{\n\t\tlogger(\"ERROR\",\"Le type d'obj ${objType} n'est pas pris en charge\",LogFile)\n\t\treturn false\n\t}\n\t\n\t\/\/ lancement de l'export Dollar U\n\tdef Map result=wrapper_dollarU_cmdline(workBaseDir,envScript,exportCommand)\n\t\n\tif(result[\"exitcode\"]!=0){\n\t\treturn false\n\t}\n\telse{\n\t\treturn true\n\t}\n}\n",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "lib_logger",
                        "value": "def logger (def String level,def String message,def String outputFileStr=null) {\n\tdef timpeStamp=new Date().format(\"yyyyMMdd-kkmmss\")\n\tprintln \"$timpeStamp:[$level] $message\"\n\tif (outputFileStr!=null && outputFileStr !=\"\" && new File(\"$outputFileStr\").getParentFile().isDirectory()){\n\t\tdef File outputFile = new File(outputFileStr)\n\t\toutputFile<< \"$timpeStamp:[$level] $message\\n\"\n\t}\n}",
                        "description": "",
                        "secure": false
                    },
                    {
                        "name": "lib_wrapper_dollarU_cmdline",
                        "value": "def wrapper_dollarU_cmdline(def String Tmpworkdir, def String envScript,def String cmdline, def String WorkDir){\n\t\/\/def Map result=wrapper_dollarU_cmdline(workBaseDir,envScript,importCommand,importDir)\n\tdef File tempFile\n\t\tprintln \"[DEBUG] Tmpworkdir : $Tmpworkdir\"\n\t\tprintln \"[DEBUG] envScript : $envScript\"\n\t\tprintln \"[DEBUG] cmdline : $cmdline\"\n\t\tprintln \"[DEBUG] WorkDir : $WorkDir\"\t\t\n\t\n\tdef Map result=[:]\n\tresult[\"exitcode\"]=1\n\tresult[\"stderr\"]=\"\"\n\tresult[\"stdout\"]=\"Unknown\"\n\tdef command=\"\"\n\t\n\t\n\tif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\t\ttempFile=new File(Tmpworkdir+File.separator+\"myshell.cmd\")\n\t}\n\telse{\n\t\t\n\t\ttempFile=new File(Tmpworkdir+File.separator+\"myshell.sh\")\n\t}\n\t\n\tif(tempFile.exists()){\n\t\tif(! tempFile.delete()){\n\t\t\tresult[\"exitcode\"]=1\n\t\t\tresult[\"stderr\"]=\"\"\n\t\t\tresult[\"stdout\"]=\"Impossible de supprimer \"+tempFile.getAbsolutePath()\n\t\t\treturn result\n\t\t}\n\t}\n\t\n\tif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\t\tdef output = tempFile.newDataOutputStream()\n\t\toutput << \"@echo off\\r\\n\"\n\t\toutput << \"call ${envScript} > nul\\r\\n\"\n\t\toutput << \"%UXEXE%\\\\${cmdline}\\r\\n\"\n\t\toutput << \"exit \/b %ERRORLEVEL%\\r\\n\"\n\t\toutput.close()\n\t\t\n\t\tcommand=\"cmd \/c \"+tempFile.getAbsolutePath()\n\t\t\n\t\t\n\t}\n\telse{\n\t\tdef output = tempFile.newDataOutputStream()\n\t\toutput << \"${envScript} > \/dev\/null\\n\"\n\t\toutput << \"cd ${WorkDir}\\n\"\n\t\toutput << \"\\${UXEXE}\/${cmdline}\\n\"\n\t\toutput << \"exit \\$?\\n\"\n\t\toutput.close()\n\t\t\n\t\tcommand=\"sh \"+tempFile.getAbsolutePath()\n\n\t}\n\t\n\ttry{\n\t\t\n\t\t\n\t\tStringBuffer sbout = new StringBuffer()\n\t\tStringBuffer sberr = new StringBuffer()\n\t\tprintln \"[DEBUG] command : $command\"\n\t\tdef process = command.execute() \/\/ Call *execute* on the string\n\t\tdef tout = process.consumeProcessOutputStream(sbout)\n\t\tdef terr = process.consumeProcessErrorStream(sberr)\n\t\t\n\t\t process.waitFor()                               \/\/ Wait for the command to finish\n\t   \/\/ Obtain status and output\n\t\t def value = process.exitValue()\n\t\t result[\"exitcode\"]=process.exitValue()\n\t\t result[\"stderr\"]=sberr.toString()\n\t\t result[\"stdout\"]=sbout.toString()\n\t\t \n\t\t \n\t}\n\tcatch (Exception e){\n\t\tresult[\"exitcode\"]=1\n\t\tresult[\"stderr\"]=\"\"\n\t\tresult[\"stdout\"]=e.getMessage()\n\t}\n\tfinally{\n\t\t\/\/tempFile.delete()\n\t\treturn result\n\t}\n\treturn result\n\t\n}\n",
                        "description": "",
                        "secure": false
                    }
                ],
                "processes": [
                    {
                        "name": "CREATE_PACKAGE",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_Depot",
                                "label": "SBM_Depot",
                                "type": "TEXT",
                                "value": "Depot",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BaselineId",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Package",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "Folder",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "Nom_Log",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Espace",
                                "label": "SBM_Dollar_U_Espace",
                                "type": "TEXT",
                                "value": "EXP",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Noeud",
                                "label": "SBM_Noeud",
                                "type": "TEXT",
                                "value": "GFHXRTCMP1",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Script",
                                "label": "SBM_Script",
                                "type": "TEXT",
                                "value": "Z:\\\\\\\\exploit\\\\\\\\UNIV56\\\\\\\\mgr\\\\\\\\uxsetenv.bat",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "DOLLARU",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BckPackage",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Unit_PPROD",
                                "label": "SBM_Dollar_U_Unit_PPROD",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Unit_PROD",
                                "label": "SBM_Dollar_U_Unit_PROD",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_User_PPROD",
                                "label": "SBM_Dollar_U_User_PPROD",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_User_PROD",
                                "label": "SBM_Dollar_U_User_PROD",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Activation_Tache",
                                "label": "SBM_Dollar_U_Activation_Tache",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Dependances",
                                "label": "SBM_Dollar_U_Dependances",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "Create_Workspace",
                                    "from": "c7feaeb45f2ccf028866316e1b56d0",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "c7feaeb45f2ccf028866316e1b56d0",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreatePkgDescriptor",
                                    "from": "DownloadPackageDescriptorFile",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadPackageDescriptorFile",
                                    "from": "Create_Workspace",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "UploadPackage",
                                    "from": "CreatePackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "2df06d6815de2658f35f1d55db0914",
                                    "from": "UploadPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "CreatePackage",
                                    "from": "CreatePkgDescriptor",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "InitStep",
                                    "x": -284.5,
                                    "y": 60
                                },
                                {
                                    "name": "UploadPackage",
                                    "x": 155.5,
                                    "y": 580
                                },
                                {
                                    "name": "Create_Workspace",
                                    "x": -202.5,
                                    "y": 180
                                },
                                {
                                    "name": "CreatePkgDescriptor",
                                    "x": -42.5,
                                    "y": 370
                                },
                                {
                                    "name": "CreatePackage",
                                    "x": 77.5,
                                    "y": 480
                                },
                                {
                                    "name": "2df06d6815de2658f35f1d55db0914",
                                    "x": 37.5,
                                    "y": 720
                                },
                                {
                                    "name": "DownloadPackageDescriptorFile",
                                    "x": 105.5,
                                    "y": 250
                                },
                                {
                                    "name": "c7feaeb45f2ccf028866316e1b56d0",
                                    "x": 127.5,
                                    "y": 110
                                }
                            ],
                            "sizes": [
                                {
                                    "name": "UploadPackage",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "InitStep",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "DownloadPackageDescriptorFile",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "CreatePkgDescriptor",
                                    "width": 180,
                                    "height": 60
                                },
                                {
                                    "name": "Create_Workspace",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "CreatePackage",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "2df06d6815de2658f35f1d55db0914",
                                    "width": 80,
                                    "height": 50
                                },
                                {
                                    "name": "c7feaeb45f2ccf028866316e1b56d0",
                                    "width": 150,
                                    "height": 40
                                }
                            ],
                            "type": "graph",
                            "name": "ef0f3b17-de47-442c-bdd1-82728ad83a49",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "2df06d6815de2658f35f1d55db0914",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": " \/\/ load function\n ${p:component\/lib_logger}\n ${p:component\/lib_wrapper_dollarU_cmdline}\n ${p:component\/lib_export_obj}\n ${p:component\/lib_import_obj}\n ${p:component\/lib_delete_obj}\n ${p:component\/lib_isExist_obj}\n \n \n \n \n \/\/ Input SBM\n \n def String Depot=\"${p:SBM_Depot}\"\n def String BaselineId=\"${p:SBM_BaselineId}\"\n def String Package=\"${p:SBM_Package}\"\n def String Folder=\"${p:SBM_Folder}\"\n def String Nom_Log=\"${p:SBM_Nom_Log}\"\n def String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\n def String Noeud=\"${p:SBM_Noeud}\"\n def String Script=\"${p:SBM_Script}\"\n \n \/\/ Constante SRA\n def String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\n def String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\n def String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\"\n final def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n \n\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\n\nif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\n\n\/\/ Suppression et creation de Env_Path_Current\nlogger(\"INFO\",\"Suppression et creation de ${Env_Path_Current}\",LogFile)\ndef File Env_Path_CurrentFile=new File(Env_Path_Current)\nif(Env_Path_CurrentFile.isDirectory()){\n\tif(!Env_Path_CurrentFile.deleteDir()){\n\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire $Env_Path_Current\",LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\nif(!Env_Path_CurrentFile.mkdirs()){\n\tlogger(\"ERROR\",\"Impossible de creer le repertoire $Env_Path_Current\",LogFile)\n\tSystem.exit(1)\n}\n\n\/\/ Creation de repertoire temporaire\nlogger(\"INFO\",\"Creation de repertoire temporaire :${Lst_Tmp_Directories}\",LogFile)\nLst_Tmp_Directories.split(\",\").each {\n\tdef String dir=it.trim()\n\tdef File tmpDir=new File(Env_Path_CurrentFile,dir)\n\tif(!tmpDir.mkdirs()){\n\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+Env_Path_CurrentFile+File.separator+dir,LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n"
                                    },
                                    "type": "plugin",
                                    "name": "Create_Workspace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "dmsys",
                                        "sshPassword": "pbe{EEiIUp9fn3EQTZN6SWFxYFS504UZhwRF}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{RGkOWS1awFsoX0lZMHcBVIC\/OBalxvAV}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/Cst_DIM_SASDepot}\/${p:SBM_BaselineId}\/DOLLAR_U\/${p:SBM_Folder}\/${p:SBM_Package}",
                                        "localDestFile": "${p:InitStep\/Env_Path_Current}\/pkg\/${p:SBM_Package}"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadPackageDescriptorFile",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n ${p:component\/lib_logger}\n ${p:component\/lib_wrapper_dollarU_cmdline}\n ${p:component\/lib_export_obj}\n ${p:component\/lib_import_obj}\n ${p:component\/lib_delete_obj}\n ${p:component\/lib_isExist_obj}\n \n \n \n \n \/\/ Input SBM\n \n def String Depot=\"${p:SBM_Depot}\"\n def String BaselineId=\"${p:SBM_BaselineId}\"\n\/\/modifier la velur de pakxcage pour utilsation du nouveau descriptor\n def String Package=File.separator+\"tmp\"+File.separator+\"${p:SBM_Package}\"\n def String Folder=\"${p:SBM_Folder}\"\n def String Nom_Log=\"${p:SBM_Nom_Log}\"\n def String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\n def String Noeud=\"${p:SBM_Noeud}\"\n def String Script=\"${p:SBM_Script}\"\n \n \/\/ Constante SRA\n def String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\n def String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\n def String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\"\n final def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\n\nif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\n\n\n\/\/ Recuperation de la liste des objets a exporter\nlogger(\"INFO\",\"Recuperation de la liste des objets a exporter\",LogFile)\ndef listOfExportObjects=[]\n\/\/\n\/\/def File packageDescriptor=new File(Env_Path_Current+File.separator+\"pkg\"+File.separator+\"${Package}\")\ndef File packageDescriptor=new File(\"${Package}\")\ndef String packageDescriptorContent=packageDescriptor.text\npackageDescriptorContent.eachLine{ listOfExportObjects.add(it.trim())}\n\/\/ purge des doublons\nlistOfExportObjects=listOfExportObjects.unique()\nlogger(\"DEBUG\",listOfExportObjects.toString(),LogFile)\nif(listOfExportObjects.size()==0){\n\tlogger(\"ERROR\",\"Le paquet est vide\",LogFile)\n\tSystem.exit(1)\n}\n\n\n\/\/ Export de l'ensemble des objects\nlogger(\"INFO\",\"Export de l'ensemble des objects\",LogFile)\ntry{\n\tlistOfExportObjects.unique().each{\n\t\tdef String obj=it.trim()\n\t\tlogger(\"INFO\",\"Export de ${obj} \",LogFile)\n\t\tif(export_obj(obj,Env_Path_Current+File.separator+\"bck\",Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) != 0){\n\t\t\tthrow new Exception(\"Arret du processus d'export\")\n\t\t}\n\t}\n}\ncatch(Exception e){\n\tlogger(\"ERROR\",\"Le processus d'export des objets a echoué\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Export de l'ensemble des objets : OK\",LogFile)\n\n\/\/ creation du package : gzip $Env_Path_Current\/pkg\/${p:SBM_Package}.zip $Env_Path_Current\/bck\/*\nlogger(\"INFO\",\"Creation du package:\"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${p:SBM_Package}.zip\",LogFile)\ndef String zipName=\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${p:SBM_Package}.zip\"\ndef String basedir=\"${Env_Path_Current}\"+File.separator+\"bck\"\ntry {\n\tant = new AntBuilder()\n\tant.zip(destfile: zipName, basedir:basedir)\n}\ncatch (Exception e) {\n\tlogger(\"ERROR\", \"Error durant la creation du package ${zipName}:\\n ${e.message}\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Creation du package:OK\",LogFile)\n\tSystem.exit(0)\n"
                                    },
                                    "type": "plugin",
                                    "name": "CreatePackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-PutOneFileIntoRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "dmsys",
                                        "sshPassword": "pbe{UU8OTvp37EtqZ+d4Tk3qTzbI1Y+1R2yQ}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{13bUTY1JQ3Mpd9Vhal6NU2WlqeQZV08I}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "localFileStr": "${p:InitStep\/Env_Path_Current}\/pkg\/${p:SBM_Package}.zip",
                                        "remoteFileStr": "\/products\/serena\/depot\/DOLLAR_U\/${p:SBM_Projet}\/${p:SBM_Package}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "UploadPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/import Groovy CommunLib\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\nlogger(\"INFO\",\"Initialisation des variables\",null)\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+BaselineId\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+BaselineId\ndef String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=Env_Path_Current+File.separator+\"log\"+File.separator+Nom_Log\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\noutProps.setProperty(\"Env_Path_Current\",\"${Env_Path_Current}\")"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "c7feaeb45f2ccf028866316e1b56d0",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Shell",
                                    "pluginName": "Shell",
                                    "pluginVersion": 4,
                                    "properties": {
                                        "directoryOffset": ". ",
                                        "shellInterpreter": "",
                                        "scriptBody": "#\/bin\/ksh\nLogFile=\"${p:SBM_Depot}\/${p:SBM_BaselineId}\/log\/${p:SBM_Nom_Log}\"\n\necho \"`date +%Y%m%d-%H%M%S`: [INFO] chargement des fonctions \"  2>&1 | tee -a $LogFile \n#-------------------------------------------\nfunction GetDependancies {\n\t_NameObject=$(echo ${_Object}|awk -F \"\/\" '{print $2}')\n\tcase $_Type in\n\t\ttsk)\n\t\t\t_Session=${_NameObject}\n\t\t\tListDepTask\n\t\t\t;;\n\t\tses)\n\t\t\t_Session=${_NameObject}\n\t\t\tListDepSession\n\t\t\t;;\n\t\tupr) \t\n\t\t\t_Uproc=${_NameObject}\n\t\t\t_TabUproc=${_Uproc}\n\t\t\tListDepUproc\n\t\t\t;;\n\t\tclass|res|rul) echo ${_Object} >> $_ExtractTmpDepFile ;;\n\n\t\t*) \techo \"${_Type}: Type inconnu!\" ; exit 1 ;;\n\tesac\n}\n#-------------------------------------------\nfunction GetTaskStatus {\n_TaskStatus=$($UXEXE\/uxshw tsk $_Space ses=$_Session node=$_Node upr=* mu=*|awk  '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {session=$5}\n\t\t\t\t\t\t\t\t( $2 == \"hold\" ){print \"HOLD\"}\n\t\t\t\t\t\t\t\t( $2 == \"nohold\" ){print \"NOHOLD\"}\n\t\t\t\t\t\t\t\t')\n}\n#-------------------------------------------\nfunction GetTaskInfo {\n$UXEXE\/uxshw tsk $_Space ses=$_Session node=$_Node upr=* mu=*|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {session=$5}\n\t\t\t\t\t\t\t\t( $2 == \"upr\" ){uproc=$4}\n\t\t\t\t\t\t\t\t( $2 == \"mu\" ){print \"tsk\/\"session\"#\"uproc\"#\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t'\n}\n#-------------------------------------------\nfunction ListDepTask {\n_Session=$($UXEXE\/uxshw tsk $_Space ses=$_Session node=$_Node upr=* mu=*|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\tBEGIN {first=\"yes\"}\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" && first == \"yes\") {first=\"no\";print $5}\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {session=$5}\n\t\t\t\t\t\t\t\t( $2 == \"upr\" ){uproc=$4}\n\t\t\t\t\t\t\t\t( $2 == \"mu\" ){print \"tsk\/\"session\"#\"uproc\"#\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t( $2 == \"rule\" ) {rule=substr($4,3,8)\n\t\t\t\t\t\t\t\t\t\tprint \"rul\/\"rule >> outputfile }\n\t\t\t\t\t\t\t\t')\nListDepSession\n}\n#-------------------------------------------\nfunction ListDepSession {\n_TabUproc=$($UXEXE\/uxshw ses $_Space ses=$_Session node=$_Node|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"ses\" ) {print \"ses\/\"$5 >> outputfile} \n\t\t\t\t\t\t\t\t( $2 == \"upr\" ){print $4;print \"upr\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t')\nListDepUproc\n}\n#-------------------------------------------\nfunction ListDepUproc {\nfor _uproc in $_TabUproc\ndo\n\t$UXEXE\/uxshw upr $_Space upr=$_uproc node=$_Node|awk  -v outputfile=$_ExtractTmpDepFile '\n\t\t\t\t\t\t\t\t( $1 == \"ITEMS\" && $3 == \"upr\" ) {print \"upr\/\"$5 >> outputfile} \n\t\t\t\t\t\t\t\t( $2 == \"class\" && $4 == \" \" ) {print \"class\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t( $1 == \"dep\" ) {print \"upr\/\"$3 >> outputfile}\n\t\t\t\t\t\t\t\t( $1 == \"res\" ) {print \"res\/\"$3 >> outputfile}\n\t\t\t\t\t\t\t\t( $2 == \"dom\" ){print \"dom\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t\t( $2 == \"appl\" ){print \"appl\/\"$4 >> outputfile}\n\t\t\t\t\t\t\t'\ndone\n}\n# -----------------------------------\necho \"`date +%Y%m%d-%H%M%S`: [INFO] initialisation des variables et recuperation des valeurs SBM \"  2>&1 | tee -a $LogFile \n_Node=${p:SBM_Noeud}\n_Space=${p:SBM_Dollar_U_Espace}\n_DollarUDependances=${p:SBM_Dollar_U_Dependances}\n_DollarUActivationTache=${p:SBM_Dollar_U_Activation_Tache}\n_ExtractDepFile=\/tmp\/${p:SBM_Package}\n_DollarUUnitPPROD=${p:SBM_Dollar_U_Unit_PPROD}\n_DollarUUserPPROD=${p:SBM_Dollar_U_User_PPROD}\n_DollarUUnitPROD=${p:SBM_Dollar_U_Unit_PROD}\n_DollarUUserPROD=${p:SBM_Dollar_U_User_PROD}\n\n\n_Society=$(echo ${p:SBM_Script} | awk -F \"\/\" '{print $3}')\n\n\n# ---------------------------------\n[ \"${_DollarUUnitPPROD}XXX\" == \"XXX\" ] &&  _DollarUUnitPPROD=\"\"\n[ \"${_DollarUUserPPROD}XXX\" == \"XXX\" ] &&  _DollarUUserPPROD=\"\"\n[ \"${_DollarUUnitPROD}XXX\" == \"XXX\" ] &&  _DollarUUnitPROD=\"\"\n[ \"${_DollarUUserPROD}XXX\" == \"XXX\" ] &&  _DollarUUserPROD=\"\"\n# ---------------------------------\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] Society: ${_Society} - Node: ${_Node} - Space: ${_Space} \"  2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] DollarUDependances: ${_DollarUDependances} - DollarUActivationTache: ${_DollarUActivationTache} \"  2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] DollarUUnitPPROD: ${_DollarUUnitPPROD} - DollarUUserPPROD: ${_DollarUUserPPROD} \"  2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] DollarUUnitPROD: ${_DollarUUnitPROD} - DollarUUserPROD: ${_DollarUUserPROD}\"  2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] ExtractDepFile: ${_ExtractDepFile} \"  2>&1 | tee -a $LogFile\n\n# ---------------------------------\n_ExtractTmpDepFile=\"\/tmp\/ExtractTmpDepFile.$$.txt\"\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] fichier temporaire pour la recuperation des dependances : ${_ExtractTmpDepFile} \" 2>&1 | tee -a $LogFile\nif [ -f $_ExtractTmpDepFile ] ; then\n\techo \"`date +%Y%m%d-%H%M%S`: [TRACE] le fichier ${_ExtractTmpDepFile} existe - suppression \" 2>&1 | tee -a $LogFile\n\trm $_ExtractTmpDepFile\n\tif [ $? -eq 1 ]; then\n\t\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible de supprimer le fichier ${_ExtractTmpDepFile}\"  2>&1 | tee -a $LogFile\n\t\texit 1\n\tfi\nfi\n# ---------------------------------\ncase $_Society in\n\tUNIGRP) . \/unvs\/UNIGRP\/mgr\/uxsetenv ;;\n\tUNIREC|UNIPPR) . \/exploit-space\/${_Society}\/mgr\/uxsetenv ;;\nesac\n\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] Conversion Dos to Unix du fichier ${p:SBM_Package}\" 2>&1 | tee -a $LogFile\nawk '{ sub(\"\\r$\", \"\"); print }' ${p:SBM_Depot}\/${p:SBM_BaselineId}\/pkg\/${p:SBM_Package} > ${p:SBM_Depot}\/${p:SBM_BaselineId}\/pkg\/${p:SBM_Package}.unx\nif [ $? -eq 1 ]; then\n\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible de realiser la converstion Dos to Unix\"  2>&1 | tee -a $LogFile\n\texit 1\nfi\n\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] Renommage du fichier converti\" 2>&1 | tee -a $LogFile\nmv -f ${p:SBM_Depot}\/${p:SBM_BaselineId}\/pkg\/${p:SBM_Package}.unx ${p:SBM_Depot}\/${p:SBM_BaselineId}\/pkg\/${p:SBM_Package}\nif [ $? -eq 1 ]; then\n\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible de renommer ${p:SBM_Package}.unx\"  2>&1 | tee -a $LogFile\n\texit 1\nfi\n\necho \"`date +%Y%m%d-%H%M%S`: [INFO] Recuperation des objets dans ${p:SBM_Depot}\/${p:SBM_BaselineId}\/pkg\/${p:SBM_Package}\" 2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] _DollarUDependances = ${_DollarUDependances}\" 2>&1 | tee -a $LogFile\ncat ${p:SBM_Depot}\/${p:SBM_BaselineId}\/pkg\/${p:SBM_Package} | while read _Object\ndo\necho \"`date +%Y%m%d-%H%M%S`: [INFO] Traitement de ${_Object}\" 2>&1 | tee -a $LogFile\n_Type=$(echo ${_Object}|awk -F \"\/\" '{print $1}')\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] _Type = ${_Type}\" 2>&1 | tee -a $LogFile\n\t#-------------------------------------------\n# 0=Oui 1=Non\n\tif [ $_DollarUDependances -eq 1 ]\n\tthen\n\t\tif [ $_Type == \"tsk\" ]\n\t\tthen\n\t\t\t_Session=$(echo ${_Object}|awk -F \"\/\" '{print $2}')\n\t\t\tGetTaskInfo\n\t\t\tif [ $? -eq 1 ]; then\n\t\t\t\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible de recuperer les informations de la tache ${_Object}\"  2>&1 | tee -a $LogFile\n\t\t\t\texit 1\n\t\t\tfi\n\t\telse\n\t\t\techo ${_Object} >> $_ExtractTmpDepFile\n\t\t\tif [ $? -eq 1 ]; then\n\t\t\t\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible d ecrire ${_Object} dans ${_ExtractTmpDepFile}\"  2>&1 | tee -a $LogFile\n\t\t\t\texit 1\n\t\t\tfi\n\t\tfi\n\telse\necho \"`date +%Y%m%d-%H%M%S`: [INFO] Recuperation dependances ${_Object}\" 2>&1 | tee -a $LogFile\n\t\tGetDependancies\n\t\tif [ $? -eq 1 ]; then\n\t\t\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible de recuperer les dependances de ${_Object}\"  2>&1 | tee -a $LogFile\n\t\t\texit 1\n\t\tfi\n\tfi\n\t#-------------------------------------------\n\tif [ $_Type == \"tsk\" ];then\n\t\tcase $_DollarUActivationTache in\n\t\t\t\"1\") HOLDTASK=NOHOLD ;;\n\t\t\t\"2\") HOLDTASK=HOLD ;;\n\t\t\t\"0\") GetTaskStatus\n\t\t\t\tHOLDTASK=$_TaskStatus \n\t\t\t\t;;\n\t\tesac\n\n\t\tOptionPreprod=\"optPre-Production\/${_DollarUUnitPPROD}#${_DollarUUserPPROD}#${HOLDTASK}\"\n\t\tOptionProd=\"optProduction\/${_DollarUUnitPROD}#${_DollarUUserPROD}#${HOLDTASK}\"\n\telse\n\t\tOptionPreprod=\"optPre-Production\/##\"\n\t\tOptionProd=\"optProduction\/##\"\n\tfi\ndone\n#-------------------------------------------\necho \"`date +%Y%m%d-%H%M%S`: [INFO] Creation du nouveau Descriptor\"  2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] OptionPreprod : ${OptionPreprod}\"  2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] OptionProd : ${OptionProd}\"  2>&1 | tee -a $LogFile\necho $OptionPreprod >> $_ExtractTmpDepFile \nif [ $? -eq 1 ]; then\n\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible d ecrire ${OptionPreprod} \"  2>&1 | tee -a $LogFile\n\texit 1\nfi\necho $OptionProd >> $_ExtractTmpDepFile \nif [ $? -eq 1 ]; then\n\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] impossible d ecrire ${OptionProd} \"  2>&1 | tee -a $LogFile\n\texit 1\nfi\n#-------------------------------------------\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] verification unicite des elements dans ${_ExtractTmpDepFile} \"  2>&1 | tee -a $LogFile\nsort -u $_ExtractTmpDepFile -o $_ExtractDepFile\nif [ $? -eq 1 ]; then\n\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] echec de la commande sort sur le fichier ${_ExtractTmpDepFile} \"  2>&1 | tee -a $LogFile\n\techo \"`date +%Y%m%d-%H%M%S`: [ERROR] le fichier ${_ExtractDepFile} n as pas ete genere\"  2>&1 | tee -a $LogFile\n\texit 1\nfi\necho \"`date +%Y%m%d-%H%M%S`: [TRACE] suppression du fichier temporaire ${_ExtractTmpDepFile}\"  2>&1 | tee -a $LogFile\nrm $_ExtractTmpDepFile\n#-------------------------------------------\necho \" \"  2>&1 | tee -a $LogFile\necho \"`date +%Y%m%d-%H%M%S`: [INFO] Contenu du fichier descriptor genere par recuperation des dependances \"  2>&1 | tee -a $LogFile\necho \" \"  2>&1 | tee -a $LogFile\ncat $_ExtractDepFile >> $LogFile\n#-------------------------------------------\nexit 0",
                                        "runAsDaemon": "false",
                                        "outputFile": ""
                                    },
                                    "type": "plugin",
                                    "name": "CreatePkgDescriptor",
                                    "children": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "DEPLOY",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_Depot",
                                "label": "SBM_Depot",
                                "type": "TEXT",
                                "value": "Depot",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BaselineId",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Package",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "Folder",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "Nom_Log",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Espace",
                                "label": "SBM_Dollar_U_Espace",
                                "type": "TEXT",
                                "value": "EXP",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Noeud",
                                "label": "SBM_Noeud",
                                "type": "TEXT",
                                "value": "GFHXRTCMP1",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Script",
                                "label": "SBM_Script",
                                "type": "TEXT",
                                "value": "Z:\\\\\\\\exploit\\\\\\\\UNIV56\\\\\\\\mgr\\\\\\\\uxsetenv.bat",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "DOLLARU",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BckPackage",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Environnement",
                                "label": "SBM_Environnement",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "from": "DeployPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateWorSpace",
                                    "from": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadPackage",
                                    "from": "CreateWorSpace",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DeployPackage",
                                    "from": "DownloadPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "x": 0,
                                    "y": 420
                                },
                                {
                                    "name": "InitStep",
                                    "x": -254.5,
                                    "y": 70
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "x": -282.5,
                                    "y": 180
                                },
                                {
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "x": 65.5,
                                    "y": 126
                                },
                                {
                                    "name": "DeployPackage",
                                    "x": -282.5,
                                    "y": 330
                                },
                                {
                                    "name": "DownloadPackage",
                                    "x": 55.5,
                                    "y": 280
                                }
                            ],
                            "sizes": [
                                {
                                    "name": "InitStep",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "width": 150,
                                    "height": 40
                                },
                                {
                                    "name": "DeployPackage",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "DownloadPackage",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "width": 80,
                                    "height": 50
                                }
                            ],
                            "type": "graph",
                            "name": "0ed13dc2-64ac-4ccf-8ddf-e823d73617d9",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\n\n\n\n\/\/ Constante SRA\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\n\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\n\/\/ Suppression et creation de Env_Path_Current\nlogger(\"INFO\",\"Suppression et creation de ${Env_Path_Current}\",LogFile)\ndef File Env_Path_CurrentFile=new File(Env_Path_Current)\nif(Env_Path_CurrentFile.isDirectory()){\n\tif(!Env_Path_CurrentFile.deleteDir()){\n\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire $Env_Path_Current\",LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\nif(!Env_Path_CurrentFile.mkdirs()){\n\tlogger(\"ERROR\",\"Impossible de creer le repertoire $Env_Path_Current\",LogFile)\n\tSystem.exit(1)\n}\n\n\/\/ Creation de repertoire temporaire\nlogger(\"INFO\",\"Creation de repertoire temporaire :${Lst_Tmp_Directories}\",LogFile)\nLst_Tmp_Directories.split(\",\").each {\n\tdef String dir=it.trim()\n\tdef File tmpDir=new File(Env_Path_CurrentFile,dir)\n\tif(!tmpDir.mkdirs()){\n\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+Env_Path_CurrentFile+File.separator+dir,LogFile)\n\t\tSystem.exit(1)\n\t}\n}\nlogger(\"INFO\",\"Creation de repertoire temporaire :OK\")\nSystem.exit(0)\n"
                                    },
                                    "type": "plugin",
                                    "name": "CreateWorSpace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                        "sshPassword": "pbe{K2lOTf1Ql24BdEVm4W1ZXwq5O0ZziJuwCeZXJXHBYxZSjjXctkJBLan7+7N7b3BCQkebo+sJ0Cs=}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{kFnSZq9mdVy+Y4dSimhpUWiH1f0vBqVl}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/Cst_DIM_SASDepot}\/PKG_${p:SBM_BaselineId}\/DOLLAR_U\/${p:SBM_Folder}\/${SBM_Package}.zip",
                                        "localDestFile": "${p:InitStep\/Env_Path_Current}\/pkg\/${p:SBM_Package}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\n\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\n\n\n\/\/ Constante SRA\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\n\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\n\n \/\/ decompression du package\n logger(\"INFO\",\"Decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip dans \"+\"${Env_Path_Current}\"+File.separator+\"pkg\",LogFile)\n def File pkgBaseDir=new File(\"${Env_Path_Current}\"+File.separator+\"pkg\")\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",\n\t\t\t dest:pkgBaseDir,\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur durant la decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",LogFile)\n\t logger(\"ERROR\", e.getMessage(),LogFile)\n\t System.exit(1)\n }\n \n\/\/ Identification de la liste des objets a importer\n logger(\"INFO\",\"Identification de la liste des objets a sauvegarder \",LogFile)\n def ListofObjToImport=[]\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t \n\t\t if(typeName!= \"tsk\" && typeName!= \"ses\" && typeName!= \"upr\" && !(typeName=~ \/^opt\/)){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"upr\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"ses\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"tsk\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n \n \/\/modification prise en compte appl et dom\n  pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"appl\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n \n \n  pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"dom\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n\/\/modification prise en compte appl et dom\n logger(\"DEBUG\",\"Liste des objets a importer:\"+ListofObjToImport.toString(),LogFile)\n \n\/\/ --------------------------- calcul mu#user#state\n\/\/ ex : pkg\/optpre-production\/PPRUXAVC01#col_ppr1#NOHOLD\nlogger(\"DEBUG\",\"Calcul des options\",LogFile)\n\/\/ le TskUser vient de quel endroit \ndef String TskMu=\"\"\ndef String TskUser=\"\"\ndef String TskHold=\"\"\ndef String TskNode=Noeud\n\n\ndef String EnvDU=\"${p:SBM_Environnement}\".toLowerCase()\nlogger(\"DEBUG\",\"EnvDU:\"+EnvDU,LogFile)\n\n\/\/if (Script==~ \/.*UNIPPR.*\/){\n\/\/\tEnvDU=\"pre-production\"\n\/\/\tlogger(\"DEBUG\",\"EnvDU:\"+EnvDU,LogFile)\n\/\/}\n\/\/else if (Script==~ \/.*UNIPRD.*\/ ){\n\/\/\tEnvDU=\"production\"\n\/\/\tlogger(\"DEBUG\",\"EnvDU:\"+EnvDU,LogFile)\n\/\/}\n\/\/else if (Script==~ \/.*UNIGRP.*\/){\n\/\/\tEnvDU=\"unigrp\"\n\/\/\tlogger(\"DEBUG\",\"EnvDU:\"+EnvDU,LogFile)\n\/\/}\n\/\/else if (Script==~ \/.*UNIREC.*\/){\n\/\/\tEnvDU=\"recette\"\n\/\/\tlogger(\"DEBUG\",\"EnvDU:\"+EnvDU,LogFile)\n\/\/}\n\n\t\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\tdef File objFile=it\n\tdef String objName=objFile.getName()\n\tif(objName!= \"${Package}.zip\"){\n\t\tdef File parentFile=objFile.getParentFile()\n\t\tdef String typeName=parentFile.getName().toLowerCase()\n\t\tif(typeName==~ \/^opt${EnvDU}\/){\n\t\t\tdef tabObjectName=objName.split(\"#\")\n\t\t\tif(tabObjectName.size()!= 3){\n\t\t\t\tlogger(\"ERROR\",\"Le nom de l'objet ${obj} est invalide: une option doit etre de la forme env\/node#mu#hold\",LogFile)\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t\t\/\/def uprocName=tabObjectName[1]\n\t\t\tTskUser=tabObjectName[1]\n\t\t\tTskMu=tabObjectName[0]\n\t\t\tTskHold=tabObjectName[2]\n\t\t}\n\t}\n}\n\n\n\ndef String importBaseDir=Env_Path_Current+File.separator+\"pkg\"\ndef String workBaseDir=Env_Path_Current+File.separator+\"tmp\"\nlogger(\"DEBUG\",\"TskNode:\"+TskNode,LogFile)\nlogger(\"DEBUG\",\"TskMu:\"+TskMu,LogFile)\nlogger(\"DEBUG\",\"TskHold:\"+TskHold,LogFile)\nlogger(\"DEBUG\",\"TskUser:\"+TskUser,LogFile)\nlogger(\"DEBUG\",\"importBaseDir:\"+importBaseDir,LogFile)\nlogger(\"DEBUG\",\"workBaseDir:\"+workBaseDir,LogFile)\n\n\n\/\/ Import de l'ensemble des objects\nlogger(\"INFO\",\"Import de l'ensemble des objects\",LogFile)\ntry{\n\tListofObjToImport.unique().each{\n\t\tdef String obj=it.trim()\n\t\tlogger(\"INFO\",\"Import de ${obj} \",LogFile)\n\t\tif(import_obj(obj,importBaseDir,workBaseDir, Script,Dollar_U_Espace, TskNode,TskUser,TskMu,TskHold,LogFile) != 0){\n\n\t\t\tthrow new Exception(\"Arret du processus d'import\")\n\t\t}\n\t}\n}\ncatch(Exception e){\n\tlogger(\"ERROR\",\"Le processus d'import des objets a echoué\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Import de l'ensemble des objets : OK\",LogFile)\nSystem.exit(0)\n"
                                    },
                                    "type": "plugin",
                                    "name": "DeployPackage",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/import Groovy CommunLib\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\nlogger(\"INFO\",\"Initialisation des variables\",null)\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\/\/Cst_DU_Lst_Tmp_Directories=tag,bck,log,tmp,pkg\n\/\/Cst_DU_Env_Path_Linux_Basedir=\"${Depot}\/${BaselineId}\"\n\/\/Cst_DU_Env_Path_Windows_Basedir=\"Z:\\\\SERENA\\\\${BaselineId}\"\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"{p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\noutProps.setProperty(\"Env_Path_Current\",\"${Env_Path_Current}\")"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "DEPLOY_BACKUP_DELOBJ",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_Depot",
                                "label": "SBM_Depot",
                                "type": "TEXT",
                                "value": "Depot",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BaselineId",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Package",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "Folder",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "Nom_Log",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Espace",
                                "label": "SBM_Dollar_U_Espace",
                                "type": "TEXT",
                                "value": "EXP",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Noeud",
                                "label": "SBM_Noeud",
                                "type": "TEXT",
                                "value": "GFHXRTCMP1",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BckPackage",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Script",
                                "label": "SBM_Script",
                                "type": "TEXT",
                                "value": "Z:\\\\\\\\exploit\\\\\\\\UNIV56\\\\\\\\mgr\\\\\\\\uxsetenv.bat",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "DOLLARU",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "SuppressionObjetsExistants",
                                    "from": "DownloadLastRefPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadLastRefPackage",
                                    "from": "CreateWorSpace",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateWorSpace",
                                    "from": "6ca0b7e2b2497d392b0faf3c68f0cf",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "from": "SuppressionObjetsExistants",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "6ca0b7e2b2497d392b0faf3c68f0cf",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "6ca0b7e2b2497d392b0faf3c68f0cf",
                                    "x": 65.5,
                                    "y": 120
                                },
                                {
                                    "name": "DownloadLastRefPackage",
                                    "x": 125.5,
                                    "y": 280
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "x": -249.5,
                                    "y": 210
                                },
                                {
                                    "name": "InitStep",
                                    "x": -274.5,
                                    "y": 90
                                },
                                {
                                    "name": "SuppressionObjetsExistants",
                                    "x": -255.5,
                                    "y": 350
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "x": 0,
                                    "y": 420
                                }
                            ],
                            "sizes": [],
                            "type": "graph",
                            "name": "f9218f36-7a13-46ca-b31e-ef876ac332eb",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\n\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find() \n\n \n\n\/\/ DU_SETENV\n\/\/ DU_ENV_CREATE_ENV\n\/\/ DU_ENV_SET_CURRENT_ENV\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n\t\/\/****CmdAwk=\"gawk\"\n\t\/\/****Slash=\"\\\\\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n\t\/\/****CmdAwk=\"awk\"\n\t\/\/****Slash=\"\/\"\n}\n\n\/\/ Suppression et creation de Env_Path_Current\nlogger(\"INFO\",\"Suppression et creation de ${Env_Path_Current}\",LogFile)\ndef File Env_Path_CurrentFile=new File(Env_Path_Current)\nif(Env_Path_CurrentFile.isDirectory()){\n\tif(!Env_Path_CurrentFile.deleteDir()){\n\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire $Env_Path_Current\",LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\nif(!Env_Path_CurrentFile.mkdirs()){\n\tlogger(\"ERROR\",\"Impossible de creer le repertoire $Env_Path_Current\",LogFile)\n\tSystem.exit(1)\n}\n\n\/\/ Creation de repertoire temporaire\nlogger(\"INFO\",\"Creation de repertoire temporaire :${Lst_Tmp_Directories}\",LogFile)\nLst_Tmp_Directories.split(\",\").each {\n\tdef String dir=it.trim()\n\tdef File tmpDir=new File(Env_Path_CurrentFile,dir)\n\tif(!tmpDir.mkdirs()){\n\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+Env_Path_CurrentFile+File.separator+dir,LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\t\tSystem.exit(0)"
                                    },
                                    "type": "plugin",
                                    "name": "CreateWorSpace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                        "sshPassword": "pbe{+ngJb2Jj\/Gb0Wg1znWrGcDIVdwzdjb6Z4NmxDOE1jJ6NvUnjthcGFWRgVKf1\/fZLA1VfgH3cb6g=}",
                                        "sshKeyfile": "${p:environment\/Cst_DIM_SSHPrivateKey}",
                                        "sshPassphrase": "pbe{zV8lVeFa1nRqWFxhmHrvbaQsqGBZB\/Sj}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/Cst_DIM_SASDepot}\/PKG_${p:SBM_BaselineId}\/${p:SBM_Projet}\/${p:SBM_Folder}\/newPackage.zip",
                                        "localDestFile": "${p:InitStep\/Env_Path_Current}\/pkg\/${p:SBM_Package}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadLastRefPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n  ${p:component\/lib_logger}\n  ${p:component\/lib_wrapper_dollarU_cmdline}\n  ${p:component\/lib_export_obj}\n  ${p:component\/lib_import_obj}\n  ${p:component\/lib_delete_obj}\n  ${p:component\/lib_isExist_obj}\n  \n  \n  \n  \n  \/\/ Input SBM\n  \n  def String Depot=\"${p:SBM_Depot}\"\n  def String BaselineId=\"${p:SBM_BaselineId}\"\n  def String Package=\"${p:SBM_Package}\"\n  def String Folder=\"${p:SBM_Folder}\"\n  def String Nom_Log=\"${p:SBM_Nom_Log}\"\n  def String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\n  def String Noeud=\"${p:SBM_Noeud}\"\n  def String Script=\"${p:SBM_Script}\"\n  def String BckPackage=\"${p:SBM_BckPackage}\"\n  \n  \/\/ Constante SRA\n  def String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\n  def String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\n  def String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\"\n  final def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n  \n \n  \n  \/\/ DU_SETENV\n  \/\/ DU_ENV_CREATE_ENV\n  \/\/ DU_ENV_SET_CURRENT_ENV\n  logger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n  \/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\n  if (System.properties['os.name'].toLowerCase().contains('windows')) {\n\t  Env_Path_Current=\"${Env_Path_Windows}\"\n\t  \/\/****CmdAwk=\"gawk\"\n\t  \/\/****Slash=\"\\\\\"\n  }\n  else{\n\t  Env_Path_Current=\"${Env_Path_Linux}\"\n\t  \/\/****CmdAwk=\"awk\"\n\t  \/\/****Slash=\"\/\"\n  }\n\n \/\/ decompression du package\n logger(\"INFO\",\"Decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip dans \"+\"${Env_Path_Current}\"+File.separator+\"pkg\",LogFile)\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",\n\t\t\t dest:\"${Env_Path_Current}\"+File.separator+\"pkg\",\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur durant la decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",LogFile)\n\t logger(\"ERROR\", e.getMessage(),LogFile)\n\t System.exit(1)\n }\n \n\/\/ Identification de la liste des objets a supprimer\n logger(\"INFO\",\"Identification de la liste des objets a supprimer \",LogFile)\n def ListToDelete=[]\n def File pkgBaseDir=new File(\"${Env_Path_Current}\"+File.separator+\"pkg\")\n \n \/\/ Rq: identiifcation des upr et ses: les autres objets (RUL,CLASS,RES)n'ont pas besoin d'être supprimes\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"tsk\"){\n\t\t\t ListToDelete.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"ses\"){\n\t\t\t ListToDelete.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"upr\"){\n\t\t\t ListToDelete.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n \n logger(\"DEBUG\",\"Liste des objets a supprimer:\"+ListToDelete.toString(),LogFile)\n\n\n\/\/ Suppression de l'ensemble des objects\nlogger(\"INFO\",\"Suppression de l'ensemble des objects\",LogFile)\ntry{\n\tListToDelete.unique().each{\n\t\tdef String obj=it.trim()\n\t\tif(isExist_obj(obj,Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) ){\n\t\t\tlogger(\"INFO\",\"Suppression de ${obj} \",LogFile)\n\t\t\tif(delete_obj(obj,Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) != 0){\n\t\t\t\tthrow new Exception(\"Arret du processus de suppression\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlogger(\"INFO\",\"L'objet ${obj} n'existe pas ou plus\",LogFile)\n\t\t}\n\t}\n}\ncatch(Exception e){\n\tlogger(\"ERROR\",\"Le processus de suppression des objets a echoué\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Suppression de l'ensemble des objets : OK\",LogFile)\n\n\n\nSystem.exit(0)\n\n"
                                    },
                                    "type": "plugin",
                                    "name": "SuppressionObjetsExistants",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "6ca0b7e2b2497d392b0faf3c68f0cf",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/import Groovy CommunLib\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\nlogger(\"INFO\",\"Initialisation des variables\",null)\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\/\/Cst_DU_Lst_Tmp_Directories=tag,bck,log,tmp,pkg\n\/\/Cst_DU_Env_Path_Linux_Basedir=\"${Depot}\/${BaselineId}\"\n\/\/Cst_DU_Env_Path_Windows_Basedir=\"Z:\\\\SERENA\\\\${BaselineId}\"\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"{p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\noutProps.setProperty(\"Env_Path_Current\",\"${Env_Path_Current}\")"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "DEPLOY_BACKUP_IMPORTOBJ",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_Depot",
                                "label": "SBM_Depot",
                                "type": "TEXT",
                                "value": "Depot",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BaselineId",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Package",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "Folder",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "Nom_Log",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Espace",
                                "label": "SBM_Dollar_U_Espace",
                                "type": "TEXT",
                                "value": "EXP",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Noeud",
                                "label": "SBM_Noeud",
                                "type": "TEXT",
                                "value": "GFHXRTCMP1",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BckPackage",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Script",
                                "label": "SBM_Script",
                                "type": "TEXT",
                                "value": "Z:\\\\\\\\exploit\\\\\\\\UNIV56\\\\\\\\mgr\\\\\\\\uxsetenv.bat",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "DOLLARU",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "2376d4cce93d743e87e79edca1a0fe",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadBackupPackage",
                                    "from": "CreateWorSpace",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "from": "ImportBakcupedObject",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateWorSpace",
                                    "from": "2376d4cce93d743e87e79edca1a0fe",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "ImportBakcupedObject",
                                    "from": "DownloadBackupPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "DownloadBackupPackage",
                                    "x": 55.5,
                                    "y": 264
                                },
                                {
                                    "name": "ImportBakcupedObject",
                                    "x": -255.5,
                                    "y": 324
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "x": 0,
                                    "y": 420
                                },
                                {
                                    "name": "2376d4cce93d743e87e79edca1a0fe",
                                    "x": 80,
                                    "y": 140
                                },
                                {
                                    "name": "InitStep",
                                    "x": -225.5,
                                    "y": 64
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "x": -214.5,
                                    "y": 200
                                }
                            ],
                            "sizes": [],
                            "type": "graph",
                            "name": "d2c9dbc4-73be-4054-bf3f-0404998c889e",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\n\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\"\nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\/\/****def String CmdAwk=\"\"\n\/\/****def String Slash=\"\"\n\n\n\/\/ DU_SETENV\n\/\/ DU_ENV_CREATE_ENV\n\/\/ DU_ENV_SET_CURRENT_ENV\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n\t\/\/****CmdAwk=\"gawk\"\n\t\/\/****Slash=\"\\\\\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n\t\/\/****CmdAwk=\"awk\"\n\t\/\/****Slash=\"\/\"\n}\n\n\/\/ Suppression et creation de Env_Path_Current\nlogger(\"INFO\",\"Suppression et creation de ${Env_Path_Current}\",LogFile)\ndef File Env_Path_CurrentFile=new File(Env_Path_Current)\nif(Env_Path_CurrentFile.isDirectory()){\n\tif(!Env_Path_CurrentFile.deleteDir()){\n\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire $Env_Path_Current\",LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\nif(!Env_Path_CurrentFile.mkdirs()){\n\tlogger(\"ERROR\",\"Impossible de creer le repertoire $Env_Path_Current\",LogFile)\n\tSystem.exit(1)\n}\n\n\/\/ Creation de repertoire temporaire\nlogger(\"INFO\",\"Creation de repertoire temporaire :${Lst_Tmp_Directories}\",LogFile)\nLst_Tmp_Directories.split(\",\").each {\n\tdef String dir=it.trim()\n\tdef File tmpDir=new File(Env_Path_CurrentFile,dir)\n\tif(!tmpDir.mkdirs()){\n\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+Env_Path_CurrentFile+File.separator+dir,LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\t\tSystem.exit(0)"
                                    },
                                    "type": "plugin",
                                    "name": "CreateWorSpace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                        "sshPassword": "pbe{GE30X+94T2juTdlJkGjtWjzEdOvEt5xRHHihiTyLL3xJKlqqqfuTPcc1W\/aQpQg75xuzO0sHzg0=}",
                                        "sshKeyfile": "${p:environment\/Cst_DIM_SSHPrivateKey}",
                                        "sshPassphrase": "pbe{cmsdWENmsHUtdQNuolX8anvkVR34Bbh2}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/Cst_DIM_SASDepot}\/PKG_${p:SBM_BaselineId}\/${p:SBM_Projet}\/${p:SBM_Folder}\/${p:SBM_BckPackage}.zip",
                                        "localDestFile": "${p:InitStep\/Env_Path_Current}\/pkg\/${p:SBM_BckPackage}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadBackupPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n  ${p:component\/lib_logger}\n  ${p:component\/lib_wrapper_dollarU_cmdline}\n  ${p:component\/lib_export_obj}\n  ${p:component\/lib_import_obj}\n  ${p:component\/lib_delete_obj}\n  ${p:component\/lib_isExist_obj}\n  \n  \n  \n  \n  \/\/ Input SBM\n  \n  def String Depot=\"${p:SBM_Depot}\"\n  def String BaselineId=\"${p:SBM_BaselineId}\"\n  def String Package=\"${p:SBM_Package}\"\n  def String Folder=\"${p:SBM_Folder}\"\n  def String Nom_Log=\"${p:SBM_Nom_Log}\"\n  def String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\n  def String Noeud=\"${p:SBM_Noeud}\"\n  def String Script=\"${p:SBM_Script}\"\n  def String BckPackage=\"${p:SBM_BckPackage}\"\n  \n  \/\/ Constante SRA\n  def String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\n  def String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\n  def String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\"\n  final def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n  \n\n  \/\/ Init Var Process\n  def String Env_Path_Current=\"\"\n  def String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n  \/\/****def String CmdAwk=\"\"\n  \/\/****def String Slash=\"\"\n  \n  \n  \/\/ DU_SETENV\n  \/\/ DU_ENV_CREATE_ENV\n  \/\/ DU_ENV_SET_CURRENT_ENV\n  logger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n  \/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\n  if (System.properties['os.name'].toLowerCase().contains('windows')) {\n\t  Env_Path_Current=\"${Env_Path_Windows}\"\n\t  \/\/****CmdAwk=\"gawk\"\n\t  \/\/****Slash=\"\\\\\"\n  }\n  else{\n\t  Env_Path_Current=\"${Env_Path_Linux}\"\n\t  \/\/****CmdAwk=\"awk\"\n\t  \/\/****Slash=\"\/\"\n  }\n\n \n \/\/ decompression du package\n logger(\"INFO\",\"Decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${BckPackage}.zip dans \"+\"${Env_Path_Current}\"+File.separator+\"pkg\",LogFile)\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${BckPackage}.zip\",\n\t\t\t dest:\"${Env_Path_Current}\"+File.separator+\"pkg\",\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur durant la decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${BckPackage}.zip\",LogFile)\n\t logger(\"ERROR\", e.getMessage(),LogFile)\n\t System.exit(1)\n }\n \n\/\/ Identification de la liste des objets a importer\n logger(\"INFO\",\"Identification de la liste des objets a importer \",LogFile)\n def ListofObjToImport=[]\n def File pkgBaseDir=new File(\"${Env_Path_Current}\"+File.separator+\"pkg\")\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${BckPackage}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t \n\t\t if(typeName!= \"tsk\" && typeName!= \"ses\" && typeName!= \"upr\" && !(typeName=~ \/^opt\/)){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${BckPackage}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"upr\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${BckPackage}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"ses\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${BckPackage}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"tsk\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n\n \n logger(\"DEBUG\",\"Liste des objets devant être reimportes:\"+ListofObjToImport.toString(),LogFile)\n\n\n\/\/ Import de l'ensemble des objects\nlogger(\"INFO\",\"Import de l'ensemble des objects de backup\",LogFile)\ntry{\n\tListofObjToImport.unique().each{\n\t\tdef String obj=it.trim()\n\t\t\n\t\tlogger(\"INFO\",\"Import de ${obj} \",LogFile)\n\t\tif(import_obj(obj,Env_Path_Current+File.separator+\"pkg\",Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) != 0){\n\t\t\tthrow new Exception(\"Arret du processus d'import\")\n\t\t}\n\t}\n}\ncatch(Exception e){\n\tlogger(\"ERROR\",\"Le processus de restauration du package de backup des objets a echoué\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Restauration du package de backup : OK\",LogFile)\n\n\n\nSystem.exit(0)\n\n"
                                    },
                                    "type": "plugin",
                                    "name": "ImportBakcupedObject",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "2376d4cce93d743e87e79edca1a0fe",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/import Groovy CommunLib\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\nlogger(\"INFO\",\"Initialisation des variables\",null)\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\/\/Cst_DU_Lst_Tmp_Directories=tag,bck,log,tmp,pkg\n\/\/Cst_DU_Env_Path_Linux_Basedir=\"${Depot}\/${BaselineId}\"\n\/\/Cst_DU_Env_Path_Windows_Basedir=\"Z:\\\\SERENA\\\\${BaselineId}\"\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"{p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\noutProps.setProperty(\"Env_Path_Current\",\"${Env_Path_Current}\")"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "PREP_DEPLOY",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_Depot",
                                "label": "SBM_Depot",
                                "type": "TEXT",
                                "value": "Depot",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BaselineId",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Package",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "Folder",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "Nom_Log",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Espace",
                                "label": "SBM_Dollar_U_Espace",
                                "type": "TEXT",
                                "value": "EXP",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Noeud",
                                "label": "SBM_Noeud",
                                "type": "TEXT",
                                "value": "GFHXRTCMP1",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BckPackage",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Script",
                                "label": "SBM_Script",
                                "type": "TEXT",
                                "value": "Z:\\\\\\\\exploit\\\\\\\\UNIV56\\\\\\\\mgr\\\\\\\\uxsetenv.bat",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "DOLLARU",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "CreateBackupPackage",
                                    "from": "DownloadPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "UploadBackupPackage",
                                    "from": "CreateBackupPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateWorSpace",
                                    "from": "6ebe7b5131bf57decb53ab82ad4fdb",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "6ebe7b5131bf57decb53ab82ad4fdb",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadPackage",
                                    "from": "CreateWorSpace",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "from": "UploadBackupPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "InitStep",
                                    "x": -270,
                                    "y": 50
                                },
                                {
                                    "name": "6ebe7b5131bf57decb53ab82ad4fdb",
                                    "x": 105.5,
                                    "y": 102
                                },
                                {
                                    "name": "CreateBackupPackage",
                                    "x": -344.5,
                                    "y": 360
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "x": 0,
                                    "y": 420
                                },
                                {
                                    "name": "UploadBackupPackage",
                                    "x": 168.5,
                                    "y": 368
                                },
                                {
                                    "name": "DownloadPackage",
                                    "x": 65.5,
                                    "y": 220
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "x": -249.5,
                                    "y": 152
                                }
                            ],
                            "sizes": [
                                {
                                    "name": "CreateWorSpace",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "DownloadPackage",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "UploadBackupPackage",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "InitStep",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "6ebe7b5131bf57decb53ab82ad4fdb",
                                    "width": 150,
                                    "height": 40
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "width": 80,
                                    "height": 50
                                },
                                {
                                    "name": "CreateBackupPackage",
                                    "width": 260,
                                    "height": 60
                                }
                            ],
                            "type": "graph",
                            "name": "c3e0f141-fc5c-4276-8367-1d3482f39ca7",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\"\nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\/\/****def String CmdAwk=\"\"\n\/\/****def String Slash=\"\"\n\n\n\/\/ DU_SETENV\n\/\/ DU_ENV_CREATE_ENV\n\/\/ DU_ENV_SET_CURRENT_ENV\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n\t\/\/****CmdAwk=\"gawk\"\n\t\/\/****Slash=\"\\\\\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n\t\/\/****CmdAwk=\"awk\"\n\t\/\/****Slash=\"\/\"\n}\n\n\/\/ Suppression et creation de Env_Path_Current\nlogger(\"INFO\",\"Suppression et creation de ${Env_Path_Current}\",LogFile)\ndef File Env_Path_CurrentFile=new File(Env_Path_Current)\nif(Env_Path_CurrentFile.isDirectory()){\n\tif(!Env_Path_CurrentFile.deleteDir()){\n\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire $Env_Path_Current\",LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\nif(!Env_Path_CurrentFile.mkdirs()){\n\tlogger(\"ERROR\",\"Impossible de creer le repertoire $Env_Path_Current\",LogFile)\n\tSystem.exit(1)\n}\n\n\/\/ Creation de repertoire temporaire\nlogger(\"INFO\",\"Creation de repertoire temporaire :${Lst_Tmp_Directories}\",LogFile)\nLst_Tmp_Directories.split(\",\").each {\n\tdef String dir=it.trim()\n\tdef File tmpDir=new File(Env_Path_CurrentFile,dir)\n\tif(!tmpDir.mkdirs()){\n\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+Env_Path_CurrentFile+File.separator+dir,LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n"
                                    },
                                    "type": "plugin",
                                    "name": "CreateWorSpace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                        "sshPassword": "pbe{IXHNb6ZyFmzEV2NZeFqYevhygKE\/asmToX0AUz8IYriZAhGP+IgG2gm2JC9G7baKf7b1nbkEe4s=}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{6naSUFtw+HrjeM9XzmfLeqF5WQCrAqJz}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/Cst_DIM_SASDepot}\/PKG_${p:SBM_BaselineId}\/DOLLAR_U\/${p:SBM_Projet}\/${p:SBM_Package}.zip",
                                        "localDestFile": "${p:InitStep\/Env_Path_Current}\/pkg\/${p:SBM_Package}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": " \/\/ load function\n ${p:component\/lib_logger}\n ${p:component\/lib_wrapper_dollarU_cmdline}\n ${p:component\/lib_export_obj}\n ${p:component\/lib_import_obj}\n ${p:component\/lib_delete_obj}\n ${p:component\/lib_isExist_obj}\n \n \n \n \n \/\/ Input SBM\n \n def String Depot=\"${p:SBM_Depot}\"\n def String BaselineId=\"${p:SBM_BaselineId}\"\n def String Package=\"${p:SBM_Package}\"\n def String Folder=\"${p:SBM_Folder}\"\n def String Nom_Log=\"${p:SBM_Nom_Log}\"\n def String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\n def String Noeud=\"${p:SBM_Noeud}\"\n def String Script=\"${p:SBM_Script}\"\n def String BckPackage=\"${p:SBM_BckPackage}\"\n \n \/\/ Constante SRA\n def String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\n def String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\n def String Lst_Tmp_Directories=\"${p:component\/Cst_DU_Lst_Tmp_Directories}\"\n final def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n \n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\n\nif (System.properties['os.name'].toLowerCase().contains('windows')) {\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\n\n\n \/\/ decompression du package\n logger(\"INFO\",\"Decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip dans \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"bck\",LogFile)\ndef File pkgBaseDir=new File(Env_Path_Current+File.separator+\"pkg\"+File.separator+\"bck\")\nif(!pkgBaseDir.mkdirs()){\n\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+pkgBaseDir,LogFile)\n\tSystem.exit(1)\n}\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",\n\t\t\t dest:pkgBaseDir,\n\t\t\t overwrite:\"true\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur durant la decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",LogFile)\n\t logger(\"ERROR\", e.getMessage(),LogFile)\n\t System.exit(1)\n }\n \n\/\/ Identification de la liste des objets a importer\n logger(\"INFO\",\"Identification de la liste des objets a sauvegarder \",LogFile)\n def ListofObjToExport=[]\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t \n\t\t if(typeName!= \"tsk\" && typeName!= \"ses\" && typeName!= \"upr\" && !(typeName=~ \/^opt\/)){\n\t\t\t ListofObjToExport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"upr\"){\n\t\t\t ListofObjToExport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"ses\"){\n\t\t\t ListofObjToExport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"tsk\"){\n\t\t\t ListofObjToExport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n \n \/\/modification prise en compte appl et dom\n  pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"appl\"){\n\t\t\t ListofObjToExport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n \n \n  pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"dom\"){\n\t\t\t ListofObjToExport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n\/\/modification prise en compte appl et dom\n \n logger(\"DEBUG\",\"Liste des objets a sauvegarder:\"+ListofObjToExport.toString(),LogFile)\n\n\n\n\/\/ purge des doublons\nListofObjToExport=ListofObjToExport.unique()\nlogger(\"DEBUG\",ListofObjToExport.toString(),LogFile)\nif(ListofObjToExport.size()==0){\n\tlogger(\"ERROR\",\"Le paquet est vide\",LogFile)\n\tSystem.exit(1)\n}\n\n\n\/\/ Export de l'ensemble des objects\nlogger(\"INFO\",\"Export de l'ensemble des objects\",LogFile)\ntry{\n\tListofObjToExport.unique().each{\n\t\tdef String obj=it.trim()\n\t\tlogger(\"INFO\",\"Export de ${obj} \",LogFile)\n\/\/def int export_obj(objet,exportBaseDir,workBaseDir(shell),envScript,espace,node,LogFile)\n\t\tif(export_obj(obj,Env_Path_Current+File.separator+\"bck\",Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) != 0){\n\t\t\tthrow new Exception(\"Arret du processus d'export\")\n\t\t}\n\t}\n}\ncatch(Exception e){\n\tlogger(\"WARN\",\"Le processus d'export des objets a echoué\",LogFile)\n\tlogger(\"WARN\",\"Le l objet n existe peut etre pas sur l'environnement cible du deploiement\",LogFile)\n\n}\n\nlogger(\"INFO\",\"Export des objets existants allant etre remplace : termine \",LogFile)\n\n\/\/ creation du package : gzip $Env_Path_Current\/tmp\/${p:SBM_BckPackage}.zip $Env_Path_Current\/bck\/*\nlogger(\"INFO\",\"Creation du package:\"+\"${Env_Path_Current}\"+File.separator+\"tmp\"+File.separator+\"${p:SBM_BckPackage}.zip\",LogFile)\ndef String zipName=\"${Env_Path_Current}\"+File.separator+\"tmp\"+File.separator+\"${p:SBM_BckPackage}.zip\"\ndef String basedir=\"${Env_Path_Current}\"+File.separator+\"bck\"\ntry {\n\tant = new AntBuilder()\n\tant.zip(destfile: zipName, basedir:basedir)\n}\ncatch (Exception e) {\n\tlogger(\"ERROR\", \"Error durant la creation du package ${zipName}:\\n ${e.message}\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Creation du package:OK\",LogFile)\n\tSystem.exit(0)"
                                    },
                                    "type": "plugin",
                                    "name": "CreateBackupPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-PutOneFileIntoRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                        "sshPassword": "pbe{wnHhSrJXZlsPSedixHRGVRG1TZmMhim3M+Np1y221Gw5OShIBJpczSflaTlSLQckY\/jFv2P\/CGw=}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{J1XCdGZRN2ULcSVydVH0ej8u+QSZDrVs}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "localFileStr": "${p:InitStep\/Env_Path_Current}\/tmp\/${p:SBM_BckPackage}.zip",
                                        "remoteFileStr": "${p:component\/Cst_DIM_Depot}\/${p:SBM_Projet}\/${p:SBM_BckPackage}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "UploadBackupPackage",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "6ebe7b5131bf57decb53ab82ad4fdb",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/import Groovy CommunLib\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\nlogger(\"INFO\",\"Initialisation des variables\",null)\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\/\/Cst_DU_Lst_Tmp_Directories=tag,bck,log,tmp,pkg\n\/\/Cst_DU_Env_Path_Linux_Basedir=\"${Depot}\/${BaselineId}\"\n\/\/Cst_DU_Env_Path_Windows_Basedir=\"Z:\\\\SERENA\\\\${BaselineId}\"\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows=\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"{p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\noutProps.setProperty(\"Env_Path_Current\",\"${Env_Path_Current}\")"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "UPT_BIGRAMME",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_Depot",
                                "label": "SBM_Depot",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Dollar_U_Espace",
                                "label": "SBM_Dollar_U_Espace",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Noeud",
                                "label": "SBM_Noeud",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Script",
                                "label": "SBM_Script",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "from": "CreateBackupPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateBackupPackage",
                                    "from": "DownloadPackageDescriptorFile",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateWorSpace",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadPackageDescriptorFile",
                                    "from": "CreateWorSpace",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "CreateWorSpace",
                                    "x": -104.5,
                                    "y": 80
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "x": 0,
                                    "y": 420
                                },
                                {
                                    "name": "CreateBackupPackage",
                                    "x": -92.5,
                                    "y": 264
                                },
                                {
                                    "name": "DownloadPackageDescriptorFile",
                                    "x": 14.5,
                                    "y": 182
                                }
                            ],
                            "sizes": [],
                            "type": "graph",
                            "name": "8def876e-566e-46fa-93ec-a46af27882b8",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\/\/Cst_DU_Lst_Tmp_Directories=tag,bck,log,tmp,pkg\n\/\/Cst_DU_Env_Path_Linux_Basedir=\"${Depot}\/${BaselineId}\"\n\/\/Cst_DU_Env_Path_Windows_Basedir=\"Z:\\\\SERENA\\\\${BaselineId}\"\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows==\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"{p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\n\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\n\/\/ Suppression et creation de Env_Path_Current\nlogger(\"INFO\",\"Suppression et creation de ${Env_Path_Current}\",LogFile)\ndef File Env_Path_CurrentFile=new File(Env_Path_Current)\nif(Env_Path_CurrentFile.isDirectory()){\n\tif(!Env_Path_CurrentFile.deleteDir()){\n\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire $Env_Path_Current\",LogFile)\n\t\tSystem.exit(1)\n\t}\n}\n\nif(!Env_Path_CurrentFile.mkdirs()){\n\tlogger(\"ERROR\",\"Impossible de creer le repertoire $Env_Path_Current\",LogFile)\n\tSystem.exit(1)\n}\n\n\/\/ Creation de repertoire temporaire\nlogger(\"INFO\",\"Creation de repertoire temporaire :${Lst_Tmp_Directories}\",LogFile)\nLst_Tmp_Directories.split(\",\").each {\n\tdef String dir=it.trim()\n\tdef File tmpDir=new File(Env_Path_CurrentFile,dir)\n\tif(!tmpDir.mkdirs()){\n\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire \"+Env_Path_CurrentFile+File.separator+dir,LogFile)\n\t\tSystem.exit(1)\n\t}\n}\nlogger(\"INFO\",\"Creation de repertoire temporaire :OK\" \nSystem.exit(0)"
                                    },
                                    "type": "plugin",
                                    "name": "CreateWorSpace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "Hostname or IPAddress",
                                        "sshPort": "22",
                                        "sshUser": "remoteUser",
                                        "sshPassword": "pbe{bk5qaAhoS1nMYBJqwVEsVNfL1ZFld1NR}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{sG\/4ZqhKZ2bHTc9Qo2RSeLJ22zvVrYMF}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "false",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "\/path\/of\/remoteFile",
                                        "localDestFile": "\/path\/of\/localFile or lecteur:\\path\\of\\localFile"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadPackageDescriptorFile",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\n\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\/\/Cst_DU_Lst_Tmp_Directories=tag,bck,log,tmp,pkg\n\/\/Cst_DU_Env_Path_Linux_Basedir=\"${Depot}\/${BaselineId}\"\n\/\/Cst_DU_Env_Path_Windows_Basedir=\"Z:\\\\SERENA\\\\${BaselineId}\"\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows==\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"{p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\n\/\/ decompression du package\n logger(\"INFO\",\"Decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip dans \"+\"${Env_Path_Current}\"+File.separator+\"pkg\",LogFile)\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",\n\t\t\t dest:\"${Env_Path_Current}\"+File.separator+\"pkg\",\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur durant la decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",LogFile)\n\t logger(\"ERROR\", e.getMessage(),LogFile)\n\t System.exit(1)\n }\n \n\/\/ Identification de la liste des objets a importer\n logger(\"INFO\",\"Identification de la liste des objets devant etre importes \",LogFile)\n def ListofObjToImport=[]\n def File pkgBaseDir=new File(\"${Env_Path_Current}\"+File.separator+\"pkg\")\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName!= \"tsk\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"tsk\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n logger(\"DEBUG\",\"Liste des objets devant etre importes:\"+ListofObjToImport.toString(),LogFile)\n\n\n\/\/ Import de l'ensemble des objects\nlogger(\"INFO\",\"Backup via un export de l'ensemble des objects deja existant devant etre reimportes\",LogFile)\ntry{\n\tListofObjToImport.unique().each{\n\t\tdef String obj=it.trim()\n\t\t\n\t\tif(isExist_obj(obj,Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) ){\n\t\t\tlogger(\"INFO\",\"Backup de ${obj} \",LogFile)\n\t\t\tif(export_obj(obj,Env_Path_Current+File.separator+\"bck\",Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) != 0){\n\t\t\t\tthrow new Exception(\"Arret du processus d'import\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlogger(\"INFO\",\"L'objet ${obj} n'existe pas encore\",LogFile)\n\t\t}\n\t}\n}\ncatch(Exception e){\n\tlogger(\"ERROR\",\"Le processus de backup via export dollarU des objets a echoué\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Backup de l'ensemble des objets : OK\",LogFile)\n\n\/\/ creation du package : gzip $Env_Path_Current\/pkg\/$BckPackage.zip $Env_Path_Current\/bck\/*\n logger(\"INFO\",\"Creation du package de backup:\"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${BckPackage}.zip\",LogFile)\n def String zipName=\"${Env_Path_Current}\"+File.separator+\"tmp\"+File.separator+\"${BckPackage}.zip\"\n def String basedir=\"${Env_Path_Current}\"+File.separator+\"bck\"\n try {\n\t ant = new AntBuilder()\n\t ant.zip(destfile: zipName, basedir:basedir)\n }\n catch (Exception e) {\n\t logger(\"ERROR\", \"Error durant la creation du package ${zipName}:\\n ${e.message}\",LogFile)\n\t System.exit(1)\n }\n\n logger(\"INFO\",\"Creation du package de backup:OK\"\n \nSystem.exit(0)\n\n"
                                    },
                                    "type": "plugin",
                                    "name": "CreateBackupPackage",
                                    "children": [],
                                    "preconditionScript": "\n\/\/ load function\n${p:component\/lib_logger}\n${p:component\/lib_wrapper_dollarU_cmdline}\n${p:component\/lib_export_obj}\n${p:component\/lib_import_obj}\n${p:component\/lib_delete_obj}\n${p:component\/lib_isExist_obj}\n\n\n\n\n\/\/ Input SBM\n\ndef String Depot=\"${p:SBM_Depot}\"\ndef String BaselineId=\"${p:SBM_BaselineId}\"\ndef String Package=\"${p:SBM_Package}\"\ndef String Folder=\"${p:SBM_Folder}\"\ndef String Nom_Log=\"${p:SBM_Nom_Log}\"\ndef String Dollar_U_Espace=\"${p:SBM_Dollar_U_Espace}\"\ndef String Noeud=\"${p:SBM_Noeud}\"\ndef String Script=\"${p:SBM_Script}\"\ndef String BckPackage=\"${p:SBM_BckPackage}\"\n\n\/\/ Constante SRA\n\/\/Cst_DU_Lst_Tmp_Directories=tag,bck,log,tmp,pkg\n\/\/Cst_DU_Env_Path_Linux_Basedir=\"${Depot}\/${BaselineId}\"\n\/\/Cst_DU_Env_Path_Windows_Basedir=\"Z:\\\\SERENA\\\\${BaselineId}\"\ndef String Env_Path_Linux=\"${p:environment\/Cst_DU_Env_Path_Linux_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Env_Path_Windows==\"${p:environment\/Cst_DU_Env_Path_Windows_Basedir}\"+File.separator+\"${BaselineId}\"\ndef String Lst_Tmp_Directories=\"{p:component\/Cst_DU_Lst_Tmp_Directories}\" \nfinal def Boolean isWindows = (System.getProperty('os.name') =~ \/(?i)windows\/).find()\n\n\/\/ Init Var Process\ndef String Env_Path_Current=\"\"\ndef String LogFile=\"$Env_Path_Current\"+File.separator+\"log\"+File.separator+Nom_Log\n\nlogger(\"INFO\",\"DU_ENV_SET_CURRENT_ENV\")\n\/\/****def String Env_Path=\"${Depot}\/${BaselineId}\"\nif(isWindows){\n\tEnv_Path_Current=\"${Env_Path_Windows}\"\n}\nelse{\n\tEnv_Path_Current=\"${Env_Path_Linux}\"\n}\n\n\/\/ decompression du package\n logger(\"INFO\",\"Decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip dans \"+\"${Env_Path_Current}\"+File.separator+\"pkg\",LogFile)\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",\n\t\t\t dest:\"${Env_Path_Current}\"+File.separator+\"pkg\",\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur durant la decompression du package \"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${Package}.zip\",LogFile)\n\t logger(\"ERROR\", e.getMessage(),LogFile)\n\t System.exit(1)\n }\n \n\/\/ Identification de la liste des objets a importer\n logger(\"INFO\",\"Identification de la liste des objets devant etre importes \",LogFile)\n def ListofObjToImport=[]\n def File pkgBaseDir=new File(\"${Env_Path_Current}\"+File.separator+\"pkg\")\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName!= \"tsk\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n pkgBaseDir.eachFileRecurse(groovy.io.FileType.FILES){\n\t \n\t def File objFile=it\n\t def String objName=objFile.getName()\n\t if(objName!= \"${Package}.zip\"){\n\t\t def File parentFile=objFile.getParentFile()\n\t\t def String typeName=parentFile.getName().toLowerCase()\n\t\t if(typeName== \"tsk\"){\n\t\t\t ListofObjToImport.add(typeName+\"\/\"+\"$objName\")\n\t\t }\n\t }\n\t \n }\n logger(\"DEBUG\",\"Liste des objets devant etre importes:\"+ListofObjToImport.toString(),LogFile)\n\n\n\/\/ Import de l'ensemble des objects\nlogger(\"INFO\",\"Backup via un export de l'ensemble des objects deja existant devant etre reimportes\",LogFile)\ntry{\n\tListofObjToImport.unique().each{\n\t\tdef String obj=it.trim()\n\t\t\n\t\tif(isExist_obj(obj,Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) ){\n\t\t\tlogger(\"INFO\",\"Backup de ${obj} \",LogFile)\n\t\t\tif(export_obj(obj,Env_Path_Current+File.separator+\"bck\",Env_Path_Current+File.separator+\"tmp\", Script,Dollar_U_Espace, Noeud,LogFile) != 0){\n\t\t\t\tthrow new Exception(\"Arret du processus d'import\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlogger(\"INFO\",\"L'objet ${obj} n'existe pas encore\",LogFile)\n\t\t}\n\t}\n}\ncatch(Exception e){\n\tlogger(\"ERROR\",\"Le processus de backup via export dollarU des objets a echoué\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"Backup de l'ensemble des objets : OK\",LogFile)\n\n\/\/ creation du package : gzip $Env_Path_Current\/pkg\/$BckPackage.zip $Env_Path_Current\/bck\/*\nlogger(\"INFO\",\"Creation du package de backup:\"+\"${Env_Path_Current}\"+File.separator+\"pkg\"+File.separator+\"${BckPackage}.zip\",LogFile)\ndef String zipName=\"${Env_Path_Current}\"+File.separator+\"tmp\"+File.separator+\"${BckPackage}.zip\"\ndef String basedir=\"${Env_Path_Current}\"+File.separator+\"bck\"\ntry {\n\tant = new AntBuilder()\n\tant.zip(destfile: zipName, basedir:basedir)\n}\ncatch (Exception e) {\n\tlogger(\"ERROR\", \"Error durant la creation du package ${zipName}:\\n ${e.message}\",LogFile)\n\tSystem.exit(1)\n}\n\nlogger(\"INFO\",\"PREP DEPLOY:OK\",LogFile)\n  \n \n \n \nSystem.exit(0)"
                                }
                            ]
                        }
                    }
                ]
            },
            "envPropDefs": [
                {
                    "name": "Cst_DIM_SSHHost",
                    "label": "Cst_DIM_SSHHost",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPort",
                    "label": "Cst_DIM_SSHPort",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHUser",
                    "label": "Cst_DIM_SSHUser",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassword",
                    "label": "Cst_DIM_SSHPassword",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPrivateKey",
                    "label": "Cst_DIM_SSHPrivateKey",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SASDepot",
                    "label": "Cst_DIM_SASDepot",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassPhrase",
                    "label": "Cst_DIM_SSHPassPhrase",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHTrust",
                    "label": "Cst_DIM_SSHTrust",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DU_Env_Path_Linux_Basedir",
                    "label": "Cst_DU_Env_Path_Linux_Basedir",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DU_Env_Path_Windows_Basedir",
                    "label": "Cst_DU_Env_Path_Windows_Basedir",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                }
            ],
            "versionPropDefs": [],
            "propSheetGroup": {"propSheets": [
                {
                    "name": "template",
                    "properties": []
                },
                {
                    "name": "code_station",
                    "properties": [{
                        "name": "repository",
                        "value": "5e58ab26-82be-471b-85dc-53eb89342820",
                        "description": "",
                        "secure": false
                    }]
                },
                {
                    "name": "custom",
                    "properties": []
                }
            ]},
            "processes": [],
            "taskDefs": [],
            "configTemplates": []
        },
        {
            "entityType": "Component",
            "name": "SBM_LOGS",
            "created": 1395933002869,
            "importAutomatically": false,
            "useVfs": true,
            "active": true,
            "deleted": false,
            "defaultVersionType": "FULL",
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "envPropDefs": [
                {
                    "name": "Cst_DIM_SSHHost",
                    "label": "Cst_DIM_SSHHost",
                    "type": "TEXT",
                    "value": "lr2te614.groupe.generali.fr",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPort",
                    "label": "Cst_DIM_SSHPort",
                    "type": "TEXT",
                    "value": "22",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHUser",
                    "label": "Cst_DIM_SSHUser",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassword",
                    "label": "Cst_DIM_SSHPassword",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPrivateKey",
                    "label": "Cst_DIM_SSHPrivateKey",
                    "type": "TEXT",
                    "value": "~\/.ssh\/id_rsa",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassPhrase",
                    "label": "Cst_DIM_SSHPassPhrase",
                    "type": "TEXT",
                    "value": " ",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHTrust",
                    "label": "Cst_DIM_SSHTrust",
                    "type": "CHECKBOX",
                    "value": "true",
                    "required": true,
                    "description": ""
                }
            ],
            "versionPropDefs": [],
            "propSheetGroup": {"propSheets": [
                {
                    "name": "code_station",
                    "properties": [{
                        "name": "repository",
                        "value": "83d40597-352b-47f3-b308-715a73c58f93",
                        "description": "",
                        "secure": false
                    }]
                },
                {
                    "name": "template",
                    "properties": []
                },
                {
                    "name": "custom",
                    "properties": [
                        {
                            "name": "Cst_Agent_Pwd",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Agent_User",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_SBM_LogDir",
                            "value": "D:\\\\\\\\products\\\\\\\\LOG_NOLIO\\\\\\\\",
                            "description": "",
                            "secure": false
                        }
                    ]
                }
            ]},
            "processes": [
                {
                    "name": "DOLLARU_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "TransfertLog",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "70f775e4bd8de0d86b5be902f6f89e",
                                "from": "TransfertLog",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "70f775e4bd8de0d86b5be902f6f89e",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "TransfertLog",
                                "x": -53,
                                "y": 199
                            }
                        ],
                        "sizes": [
                            {
                                "name": "70f775e4bd8de0d86b5be902f6f89e",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "TransfertLog",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "0628afd3-c940-4da2-9816-2febab67c491",
                        "children": [
                            {
                                "type": "finish",
                                "name": "70f775e4bd8de0d86b5be902f6f89e",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "deploy",
                                    "sshPassword": "pbe{UU3xTFVVmUnBVJBL4XoqZzbBt5CQmZ4n}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{SGnedoBlK2n3ZrpjEmEfa3tJWwy1k+49}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "true",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:SBM_BaselineId}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "TransfertLog",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "DSTAGE_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [{
                        "name": "SBM_Nom_Log",
                        "label": "SBM_Nom_Log",
                        "type": "TEXT",
                        "required": true,
                        "description": ""
                    }],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "from": "Log Transfert Unix to LogNolio",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "Log Transfert Unix to LogNolio",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "x": 0,
                                "y": 430
                            },
                            {
                                "name": "Log Transfert Unix to LogNolio",
                                "x": -120,
                                "y": 180
                            }
                        ],
                        "sizes": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Log Transfert Unix to LogNolio",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "df37a9df-de81-476f-94ff-9032b00a49c9",
                        "children": [
                            {
                                "type": "finish",
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                    "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                    "sshUser": "${p:component\/Cst_Agent_User}",
                                    "sshPassword": "pbe{4XJ4Y1BaiHKnYZ10iF41ZXeYxAoqiFlGvLE8hsAM\/jwE5H3AM8eEoc7LLFshSyZF}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{eHj8Su9cs1qgT3lITGECaSRNAISCclC+}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "\/tmp\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "Log Transfert Unix to LogNolio",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "DSTAGE_LOGS_BCK",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [{
                        "name": "SBM_BckPackage",
                        "label": "SBM_BckPackage",
                        "type": "TEXT",
                        "required": true,
                        "description": ""
                    }],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert BCK to LogNolio",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "from": "Transfert BCK to LogNolio",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "x": 0,
                                "y": 430
                            },
                            {
                                "name": "Transfert BCK to LogNolio",
                                "x": -120,
                                "y": 290
                            }
                        ],
                        "sizes": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert BCK to LogNolio",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "e4ed5ecc-18ef-45c2-a057-4ed4390e4580",
                        "children": [
                            {
                                "type": "finish",
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                    "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                    "sshUser": "${p:component\/Cst_Agent_User}",
                                    "sshPassword": "pbe{tU2dS+NkY2WwUQ95jVIgYyTi\/d9oXA6Iil6n\/7RkLCRxayu8sFCIgZw6oSWwKI2T}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{WEvMVS1IT1eWSR1woHY+Xk2sg+C+RvCV}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "\/tmp\/${p:SBM_BckPackage}.zip",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_BckPackage}.zip"
                                },
                                "type": "plugin",
                                "name": "Transfert BCK to LogNolio",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "EAIV8_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "EAI_TempBaseDir",
                            "label": "EAI_TempBaseDir",
                            "type": "TEXT",
                            "value": "\/tmp\/serena",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "RemoveLog",
                                "from": "GetLogFile",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "GetReportFromEAIV8",
                                "from": "GetReportName",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "RemoveLog",
                                "from": "GetReportFromEAIV8",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "GetReportName",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "be1abfb5a8aa5c6399ee624490c78a",
                                "from": "RemoveLog",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "GetLogFile",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "be1abfb5a8aa5c6399ee624490c78a",
                                "x": 0,
                                "y": 650
                            },
                            {
                                "name": "GetReportFromEAIV8",
                                "x": 150,
                                "y": 360
                            },
                            {
                                "name": "GetLogFile",
                                "x": -370.5,
                                "y": 160
                            },
                            {
                                "name": "RemoveLog",
                                "x": -100,
                                "y": 540
                            },
                            {
                                "name": "GetReportName",
                                "x": 180,
                                "y": 210
                            }
                        ],
                        "sizes": [
                            {
                                "name": "RemoveLog",
                                "width": 280,
                                "height": 60
                            },
                            {
                                "name": "GetLogFile",
                                "width": 310,
                                "height": 60
                            },
                            {
                                "name": "GetReportName",
                                "width": 280,
                                "height": 60
                            },
                            {
                                "name": "GetReportFromEAIV8",
                                "width": 310,
                                "height": 60
                            },
                            {
                                "name": "be1abfb5a8aa5c6399ee624490c78a",
                                "width": 80,
                                "height": 50
                            }
                        ],
                        "type": "graph",
                        "name": "3b4e6773-8a89-4b4a-b838-af057c34eb4a",
                        "children": [
                            {
                                "type": "finish",
                                "name": "be1abfb5a8aa5c6399ee624490c78a",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{NHefcTVTXWbQbZpwZE+Gdndb3ut06PtBWV\/uYOekc9EpubgoQF6XKA==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{nWEAc5xY+24aZ3NuP3MyWbsldDQhVmMO}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:EAI_TempBaseDir}\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "GetLogFile",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "postProcessingScript": "a3ce6558-98b7-4202-b3db-76af3558be94",
                                "commandName": "SSH-RemoteCmdLineExecution",
                                "pluginName": "SSH",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{l1+PeBJoF2sZXw9Kg23zcp6lHISSBQl+H0UbdVyd+wPfko7YIm17Mg==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{wW1uS3VY3G06bwpUy15QbRCjN4TfVh5F}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshTimeout": "0",
                                    "sshUsepty": "false",
                                    "cmdline": "LogFileName=\"${p:EAI_TempBaseDir}\/${p:SBM_Nom_Log}\"\necho \"LogFileName:${LogFileName}\"\n\n#EAI_WEBMETHOD_LOG=$(cat ${LogFileName} | awk '\/Deploy Deployment Candidate\\]\/,\/.xml\/' | grep -v 'Deploy Deployment Candidate' | grep -v 'INFO' | sed -e 's\/^.*:\/\/g' -e 's\/ \/\/g' | awk '{print $0}')\n#if [[ -z $EAI_WEBMETHOD_LOG ]] ; then  \n#\tEAI_WEBMETHOD_LOG=$(cat ${LogFileName} | awk '\/Simulate Deployment Candidate\\]\/,\/.xml\/' | grep -v 'Simulate Deployment Candidate' | grep -v 'INFO' | sed -e 's\/^.*:\/\/g' -e 's\/ \/\/g' | awk '{print $0}')\n#fi\n\nEAI_WEBMETHOD_LOG=$(grep -i '.*report.*.xml' ${LogFileName} | tr -d ' ' )\necho \"EAI_WEBMETHOD_LOG=$EAI_WEBMETHOD_LOG\"",
                                    "sshSuccesReturnCodeStr": "0",
                                    "sshOutput": "",
                                    "sshAppend": "false",
                                    "sshVerbose": "false",
                                    "silenceMode": "false",
                                    "optionStoreOutProp": "false"
                                },
                                "type": "plugin",
                                "name": "GetReportName",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{9V9QdAxJLE7iTQFkYEnUUtsKed8bHQGBK6nfDQo9sAPR1dAC2j2EEg==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{43MsU9dyYFHXSuZjEnqCYAHgTHuUnOvd}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:GetReportName\/Var_EAI_WEBMETHOD_LOG}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}.html"
                                },
                                "type": "plugin",
                                "name": "GetReportFromEAIV8",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SSH-RemoteCmdLineExecution",
                                "pluginName": "SSH",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:component\/Cst_Agent_User}",
                                    "sshPassword": "pbe{QlnsXUN02luHao5vZG9sYZQTWjF8mZqn2ZwdkwDpA48+MXCXP9v8q+ad43lkwSyR}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{2VejeMtsWUuHWKJwi3EWXbxnG+18VLn\/}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshTimeout": "0",
                                    "sshUsepty": "false",
                                    "cmdline": "rm  ${p:EAI_TempBaseDir}\/${p:SBM_Nom_Log} 2>\/dev\/null",
                                    "sshSuccesReturnCodeStr": "0",
                                    "sshOutput": "",
                                    "sshAppend": "false",
                                    "sshVerbose": "false",
                                    "silenceMode": "false",
                                    "optionStoreOutProp": "false"
                                },
                                "type": "plugin",
                                "name": "RemoveLog",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "JND_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "GetLogsFromJnd",
                                "from": "InitStep",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "2ccdb601284a1b118164565ed7a31e",
                                "from": "GetLogsFromJnd",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "InitStep",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "GetLogsFromJnd",
                                "x": -97.5,
                                "y": 300
                            },
                            {
                                "name": "InitStep",
                                "x": -71.5,
                                "y": 119
                            },
                            {
                                "name": "2ccdb601284a1b118164565ed7a31e",
                                "x": 0,
                                "y": 445
                            }
                        ],
                        "sizes": [
                            {
                                "name": "2ccdb601284a1b118164565ed7a31e",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "InitStep",
                                "width": 210,
                                "height": 60
                            },
                            {
                                "name": "GetLogsFromJnd",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "618f7107-cbc1-41f2-a636-b24b0fe04213",
                        "children": [
                            {
                                "type": "finish",
                                "name": "2ccdb601284a1b118164565ed7a31e",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{RVG\/an93aHWOUBh1Nnr0UFZ6AGv6r7T6xwPJtqekBUL1NYOE\/rzk+w==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{RHKbb9pirVdbYkZjdXBZaetxHionCavY}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:InitStep\/Nom_Projet}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "GetLogsFromJnd",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Run Groovy Script",
                                "pluginName": "GroovyAdvance",
                                "pluginVersion": 2,
                                "properties": {"scriptBody": "def myRegEx = \/(.*)-$\/\ndef String tmpSBM_Projet=\"${p:SBM_Projet}\"\nmatcher = ( tmpSBM_Projet =~ myRegEx )\nif (matcher.matches()) {\n\ttmpSBM_Projet=matcher[0][1]\n}\noutProps.setProperty(\"Nom_Projet\",\"${tmpSBM_Projet}\")\n"},
                                "type": "plugin",
                                "name": "InitStep",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "ORA_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            },
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [],
                        "type": "graph",
                        "name": "f8a3d03b-076c-4f7b-ab02-94c064c50866",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{E05TeBRoLXhcTblXuUujXP1vzxYW35cQRageeHVYgQz1BFNwyjcBUQ==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{\/GdXTTFPplsGbN5162nWTg\/7EA902ExP}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:SBM_Projet}\/${p:SBM_BaselineId}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "ORA_LOGS_SQL",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            }
                        ],
                        "sizes": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert Logs",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "db00e652-0e05-4a8e-bdb2-9a539f8a52d2",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{k28AbaZzOGSxY3RL92ZDSq2mqSTqMNfBQDKe1gklfgHE\/qv\/HUH1RA==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{VElsX41WM2SGU81wfmBdSNrReGB3bTCQ}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:SBM_Projet}\/${p:SBM_BaselineId}\/log\/${p:SBM_Nom_Log}.zip",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}.zip"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "SYB_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SybLogFileName",
                            "label": "SybLogFileName",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            }
                        ],
                        "sizes": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert Logs",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "c9b94cde-cfbc-47ad-bfcc-8bc813398dbc",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{IHj+TPxRe3NuZhB4R3YzVgOcizxK\/SQx0sbXPb\/IQALy3AOTZZm3rA==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{a0llcx5lznZdazx5plADSk5+x92XSpJA}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SybLogFileName}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "SYB_LOGS_SQL",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SybLogFileName",
                            "label": "SybLogFileName",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            },
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert Logs",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "3ced2c08-16d0-4d41-b762-4f7ee1e93585",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{EFG3VkxcWVPeYllrpGGeWeKrRMpR9Ul98KfQmbfjiE4gACDudsnfZg==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{jVcwXLVZQV39ZX5rp3XQXEbtoxTDcpg7}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SybLogFileName}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}.zip"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "WSTOOLS_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_BATCH_RemoteServer",
                            "label": "SBM_BATCH_RemoteServer",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BATCH_Login",
                            "label": "SBM_BATCH_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BATCH_Password",
                            "label": "SBM_BATCH_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "ef05e3d27b0b003bcb10aac3083df5",
                                "from": "TransfertLog",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "TransfertLog",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "TransfertLog",
                                "x": -22,
                                "y": 192
                            },
                            {
                                "name": "ef05e3d27b0b003bcb10aac3083df5",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [
                            {
                                "name": "ef05e3d27b0b003bcb10aac3083df5",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "TransfertLog",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "edd5fc4b-eb64-4dc3-8416-16e11f1fadeb",
                        "children": [
                            {
                                "type": "finish",
                                "name": "ef05e3d27b0b003bcb10aac3083df5",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_BATCH_RemoteServer}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_BATCH_Login}",
                                    "sshPassword": "pbe{UktVXXpT\/G2qeKNRC3heYes\/fEliN4evmkwO\/CI13\/FL\/PSkIHFUvQ==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{nGpQVIVVC2fVVhltQWDfZVBZpVl0KAFh}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "true",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_BATCH_BatchRoot}\/${p:SBM_Projet}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "TransfertLog",
                                "children": []
                            }
                        ]
                    }
                }
            ],
            "taskDefs": [],
            "configTemplates": []
        }
    ],
    "environments": [
        {
            "name": "DOLLARU_UX-REC",
            "color": "#da70d6",
            "requireApprovals": false,
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "order": 1,
            "active": true,
            "propSheet": {"properties": []},
            "componentEnvironmentMappings": [
                {
                    "componentName": "DollarU",
                    "resource": "ar1te124"
                },
                {
                    "componentName": "DIMENSION",
                    "resource": "lr2te614"
                },
                {
                    "componentName": "SBM_LOGS",
                    "resource": "dsi-w2358appv0"
                }
            ],
            "componentPropSheets": [
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_NETWORK_NODE",
                            "value": "lr2te425.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_basedir",
                            "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dbname",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dsn",
                            "value": "INSSRAP0",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_exe",
                            "value": "dmcli",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_pass",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_profile",
                            "value": "dmprofile",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_tmpdir",
                            "value": "\/tmp\/serena",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_user",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_agent_node_depot",
                            "value": "serverdim",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_pass",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_user",
                            "value": "root",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_sas_depot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DIMENSION"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": " ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DU_Env_Path_Linux_Basedir",
                            "value": "${p:SBM_Depot}",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DU_Env_Path_Windows_Basedir",
                            "value": "${p:SBM_Depot}",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DollarU"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": " ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "SBM_LOGS"
                }
            ]
        },
        {
            "name": "DOLLARU_UX-PPROD",
            "color": "#9932cc",
            "requireApprovals": false,
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "order": 2,
            "active": true,
            "propSheet": {"properties": []},
            "componentEnvironmentMappings": [
                {
                    "componentName": "DollarU",
                    "resource": "ar1te124"
                },
                {
                    "componentName": "DIMENSION",
                    "resource": "lr2te614"
                },
                {
                    "componentName": "SBM_LOGS",
                    "resource": "dsi-w2358appv0"
                }
            ],
            "componentPropSheets": [
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_NETWORK_NODE",
                            "value": "lr2te425.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_basedir",
                            "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dbname",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dsn",
                            "value": "INSSRAP0",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_exe",
                            "value": "dmcli",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_pass",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_profile",
                            "value": "dmprofile",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_tmpdir",
                            "value": "\/tmp\/serena",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_user",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_agent_node_depot",
                            "value": "serverdim",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_pass",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_user",
                            "value": "root",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_sas_depot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DIMENSION"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": " ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DU_Env_Path_Linux_Basedir",
                            "value": "${p:SBM_Depot}",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DU_Env_Path_Windows_Basedir",
                            "value": "${p:SBM_Depot}",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DollarU"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": " ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "SBM_LOGS"
                }
            ]
        },
        {
            "name": "DOLLARU_UX-PROD",
            "color": "#800080",
            "requireApprovals": false,
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "order": 3,
            "active": true,
            "propSheet": {"properties": []},
            "componentEnvironmentMappings": [
                {
                    "componentName": "SBM_LOGS",
                    "resource": "dsi-w2358appv0"
                },
                {
                    "componentName": "DIMENSION",
                    "resource": "lr2te614"
                }
            ],
            "componentPropSheets": [
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_NETWORK_NODE",
                            "value": "lr2te425.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_basedir",
                            "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dbname",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dsn",
                            "value": "INSSRAR0",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_exe",
                            "value": "dmcli",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_pass",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_profile",
                            "value": "dmprofile",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_tmpdir",
                            "value": "\/tmp\/serena",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_user",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_agent_node_depot",
                            "value": "serverdim",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_pass",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_user",
                            "value": "root",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_sas_depot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DIMENSION"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": " ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DU_Env_Path_Linux_Basedir",
                            "value": "${p:SBM_Depot}",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DU_Env_Path_Windows_Basedir",
                            "value": "${p:SBM_Depot}",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DollarU"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": " ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "SBM_LOGS"
                }
            ]
        }
    ],
    "processes": [
        {
            "name": "LOG",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "c06f9a34a0d0774c69659d3b2f7bf9",
                        "from": "1078c238e7a61dca25e440dfba92ef",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "1078c238e7a61dca25e440dfba92ef",
                        "type": "ALWAYS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "c06f9a34a0d0774c69659d3b2f7bf9",
                        "x": 0,
                        "y": 420
                    },
                    {
                        "name": "1078c238e7a61dca25e440dfba92ef",
                        "x": -112,
                        "y": 215
                    }
                ],
                "sizes": [
                    {
                        "name": "c06f9a34a0d0774c69659d3b2f7bf9",
                        "width": 80,
                        "height": 50
                    },
                    {
                        "name": "1078c238e7a61dca25e440dfba92ef",
                        "width": 160,
                        "height": 60
                    }
                ],
                "type": "graph",
                "name": "06a476c5-4d60-4fc7-91fd-065259856282",
                "children": [
                    {
                        "type": "finish",
                        "name": "c06f9a34a0d0774c69659d3b2f7bf9",
                        "children": []
                    },
                    {
                        "componentName": "SBM_LOGS",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "1078c238e7a61dca25e440dfba92ef",
                        "children": [{
                            "componentName": "SBM_LOGS",
                            "componentProcessName": "DOLLARU_LOGS",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Login": "${p:component\/Cst_Agent_User}",
                                "SBM_Server": "${p:SBM_Server}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Depot": "${p:SBM_Depot}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Password": "${p:component\/Cst_Agent_Pwd}"
                            },
                            "type": "componentProcess",
                            "name": "Log to LogNolio",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": []
        },
        {
            "name": "DEPLOY_BACKUP",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "e5ab3a6ad4d38b9d4424744c091698",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "9a6108f9b914b054a2ee6da925da01",
                        "from": "e5ab3a6ad4d38b9d4424744c091698",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "74e1f86f2dbefec3a9f5f1ffa73bbe",
                        "from": "9a6108f9b914b054a2ee6da925da01",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "5f916307a4167d1e518ed338099027",
                        "from": "f8f1d6771eb980d6c6768386834769",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "f8f1d6771eb980d6c6768386834769",
                        "from": "74e1f86f2dbefec3a9f5f1ffa73bbe",
                        "type": "SUCCESS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "e5ab3a6ad4d38b9d4424744c091698",
                        "x": 98,
                        "y": 111
                    },
                    {
                        "name": "f8f1d6771eb980d6c6768386834769",
                        "x": -214.5,
                        "y": 394
                    },
                    {
                        "name": "5f916307a4167d1e518ed338099027",
                        "x": -17.5,
                        "y": 530
                    },
                    {
                        "name": "74e1f86f2dbefec3a9f5f1ffa73bbe",
                        "x": 62,
                        "y": 310
                    },
                    {
                        "name": "9a6108f9b914b054a2ee6da925da01",
                        "x": -155,
                        "y": 195
                    }
                ],
                "sizes": [
                    {
                        "name": "74e1f86f2dbefec3a9f5f1ffa73bbe",
                        "width": 140,
                        "height": 60
                    },
                    {
                        "name": "9a6108f9b914b054a2ee6da925da01",
                        "width": 230,
                        "height": 60
                    },
                    {
                        "name": "5f916307a4167d1e518ed338099027",
                        "width": 80,
                        "height": 50
                    },
                    {
                        "name": "f8f1d6771eb980d6c6768386834769",
                        "width": 230,
                        "height": 60
                    },
                    {
                        "name": "e5ab3a6ad4d38b9d4424744c091698",
                        "width": 150,
                        "height": 60
                    }
                ],
                "type": "graph",
                "name": "90ec9ede-b422-4d57-b3b6-563beeb6166d",
                "children": [
                    {
                        "type": "finish",
                        "name": "5f916307a4167d1e518ed338099027",
                        "children": []
                    },
                    {
                        "componentName": "DollarU",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "9a6108f9b914b054a2ee6da925da01",
                        "children": [{
                            "componentName": "DollarU",
                            "componentProcessName": "DEPLOY_BACKUP_DELOBJ",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Dollar_U_Espace": "${p:SBM_Dollar_U_Espace}",
                                "SBM_Noeud": "${p:SBM_Noeud}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Depot": "${p:SBM_Depot}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Script": "${p:SBM_Script}",
                                "SBM_Package": "${p:SBM_Package}"
                            },
                            "type": "componentProcess",
                            "name": "DeployBackup-DeleteObject",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DollarU",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "f8f1d6771eb980d6c6768386834769",
                        "children": [{
                            "componentName": "DollarU",
                            "componentProcessName": "DEPLOY_BACKUP_IMPORTOBJ",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Dollar_U_Espace": "${p:SBM_Dollar_U_Espace}",
                                "SBM_Noeud": "${p:SBM_Noeud}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Depot": "${p:SBM_Depot}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Script": "${p:SBM_Script}",
                                "SBM_Package": "${p:SBM_Package}"
                            },
                            "type": "componentProcess",
                            "name": "DeployBackup-ImportObject",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "e5ab3a6ad4d38b9d4424744c091698",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "GET_BL_PKG_AND_RENAME",
                            "allowFailure": false,
                            "properties": {
                                "Var_dest_packageName": "newPackage.zip",
                                "Var_dest_dir": "${p:environment\/Cst_Dim_sas_depot}\/PKG_${p:SBM_BaselineId}\/${p:SBM_Projet}\/${p:SBM_Folder}",
                                "Var_source_dir": "${p:environment\/Cst_Dim_sas_depot}\/PKG_${p:SBM_BaselineId}\/${p:SBM_Projet}\/${p:SBM_Folder}"
                            },
                            "type": "componentProcess",
                            "name": "GetLastRefPkg",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "74e1f86f2dbefec3a9f5f1ffa73bbe",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "GET_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "var_pkgname": "${p:SBM_BckPackage}",
                                "var_blname": "${p:SBM_BckPackage}"
                            },
                            "type": "componentProcess",
                            "name": "GetBackPkg",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": [
                {
                    "name": "SBM_Depot",
                    "label": "SBM_Depot",
                    "type": "TEXT",
                    "value": "Depot",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BaselineId",
                    "label": "SBM_BaselineId",
                    "type": "TEXT",
                    "value": "BaselineId",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Package",
                    "label": "SBM_Package",
                    "type": "TEXT",
                    "value": "Package",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Folder",
                    "label": "SBM_Folder",
                    "type": "TEXT",
                    "value": "Folder",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Nom_Log",
                    "label": "SBM_Nom_Log",
                    "type": "TEXT",
                    "value": "Nom_Log",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Dollar_U_Espace",
                    "label": "SBM_Dollar_U_Espace",
                    "type": "TEXT",
                    "value": "EXP",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Noeud",
                    "label": "SBM_Noeud",
                    "type": "TEXT",
                    "value": "GFHXRTCMP1",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Script",
                    "label": "SBM_Script",
                    "type": "TEXT",
                    "value": "Z:\\\\exploit\\\\UNIV56\\\\mgr\\\\uxsetenv.bat",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BckPackage",
                    "label": "SBM_BckPackage",
                    "type": "TEXT",
                    "value": "BckPackage",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Projet",
                    "label": "SBM_Projet",
                    "type": "TEXT",
                    "value": "DOLLARU",
                    "required": true,
                    "description": ""
                }
            ]
        },
        {
            "name": "PREP_DEPLOY",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "e5edb77714b2d6fb56b92e33462549",
                        "from": "567e556c369ea04542793f464a9d83",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "4b1dd487cc4457ac36af219661bad7",
                        "from": "e5edb77714b2d6fb56b92e33462549",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "9aec44625691dccbfc5e407b03c52d",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "567e556c369ea04542793f464a9d83",
                        "from": "9aec44625691dccbfc5e407b03c52d",
                        "type": "SUCCESS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "567e556c369ea04542793f464a9d83",
                        "x": -60,
                        "y": 270
                    },
                    {
                        "name": "4b1dd487cc4457ac36af219661bad7",
                        "x": 0,
                        "y": 420
                    },
                    {
                        "name": "9aec44625691dccbfc5e407b03c52d",
                        "x": -265,
                        "y": 80
                    },
                    {
                        "name": "e5edb77714b2d6fb56b92e33462549",
                        "x": -325,
                        "y": 352
                    }
                ],
                "sizes": [
                    {
                        "name": "4b1dd487cc4457ac36af219661bad7",
                        "width": 80,
                        "height": 50
                    },
                    {
                        "name": "9aec44625691dccbfc5e407b03c52d",
                        "width": 160,
                        "height": 60
                    },
                    {
                        "name": "567e556c369ea04542793f464a9d83",
                        "width": 140,
                        "height": 60
                    },
                    {
                        "name": "e5edb77714b2d6fb56b92e33462549",
                        "width": 170,
                        "height": 60
                    }
                ],
                "type": "graph",
                "name": "1d931b90-f427-44ab-848c-072450a711ad",
                "children": [
                    {
                        "type": "finish",
                        "name": "4b1dd487cc4457ac36af219661bad7",
                        "children": []
                    },
                    {
                        "componentName": "DollarU",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "567e556c369ea04542793f464a9d83",
                        "children": [{
                            "componentName": "DollarU",
                            "componentProcessName": "PREP_DEPLOY",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Dollar_U_Espace": "${p:SBM_Dollar_U_Espace}",
                                "SBM_Noeud": "${p:SBM_Noeud}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Depot": "${p:SBM_Depot}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Script": "${p:SBM_Script}",
                                "SBM_Package": "${p:SBM_Package}"
                            },
                            "type": "componentProcess",
                            "name": "PrepDeploy",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "9aec44625691dccbfc5e407b03c52d",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "GET_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "var_pkgname": "PKG_${p:SBM_BaselineId}",
                                "var_blname": "${p:SBM_BaselineId}"
                            },
                            "type": "componentProcess",
                            "name": "GetPkgFromDim",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "e5edb77714b2d6fb56b92e33462549",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "IMP_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "Var_change_doc_ids": "ARM_LIVRAISON",
                                "var_pkgname": "${p:SBM_BckPackage}",
                                "var_blname": "${p:SBM_BckPackage}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "Var_directory": "DOLLAR_U",
                                "var_rlname": "${p:SBM_BckPackage}"
                            },
                            "type": "componentProcess",
                            "name": "ImportBckPackage",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": [
                {
                    "name": "SBM_Depot",
                    "label": "SBM_Depot",
                    "type": "TEXT",
                    "value": "Depot",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BaselineId",
                    "label": "SBM_BaselineId",
                    "type": "TEXT",
                    "value": "BaselineId",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Package",
                    "label": "SBM_Package",
                    "type": "TEXT",
                    "value": "Package",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Folder",
                    "label": "SBM_Folder",
                    "type": "TEXT",
                    "value": "Folder",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Nom_Log",
                    "label": "SBM_Nom_Log",
                    "type": "TEXT",
                    "value": "Nom_Log",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Dollar_U_Espace",
                    "label": "SBM_Dollar_U_Espace",
                    "type": "TEXT",
                    "value": "EXP",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Noeud",
                    "label": "SBM_Noeud",
                    "type": "TEXT",
                    "value": "GFHXRTCMP1",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Script",
                    "label": "SBM_Script",
                    "type": "TEXT",
                    "value": "Z:\\\\exploit\\\\UNIV56\\\\mgr\\\\uxsetenv.bat",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BckPackage",
                    "label": "SBM_BckPackage",
                    "type": "TEXT",
                    "value": "BckPackage",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Projet",
                    "label": "SBM_Projet",
                    "type": "TEXT",
                    "value": "DOLLARU",
                    "required": true,
                    "description": ""
                }
            ]
        },
        {
            "name": "CREATE_PACKAGE",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "293004d91428534979718aa95345cb",
                        "from": "54a4924375b01b4d3b6b1be23ede6a",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "54a4924375b01b4d3b6b1be23ede6a",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "28d4d85f6507b838565be46113a2db",
                        "from": "293004d91428534979718aa95345cb",
                        "type": "SUCCESS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "28d4d85f6507b838565be46113a2db",
                        "x": 0,
                        "y": 420
                    },
                    {
                        "name": "293004d91428534979718aa95345cb",
                        "x": -163,
                        "y": 280
                    },
                    {
                        "name": "54a4924375b01b4d3b6b1be23ede6a",
                        "x": -324.5,
                        "y": 120
                    }
                ],
                "sizes": [
                    {
                        "name": "293004d91428534979718aa95345cb",
                        "width": 160,
                        "height": 60
                    },
                    {
                        "name": "54a4924375b01b4d3b6b1be23ede6a",
                        "width": 150,
                        "height": 60
                    },
                    {
                        "name": "28d4d85f6507b838565be46113a2db",
                        "width": 80,
                        "height": 50
                    }
                ],
                "type": "graph",
                "name": "4d571ca3-8eb1-43be-af2a-8c465ff776c0",
                "children": [
                    {
                        "type": "finish",
                        "name": "28d4d85f6507b838565be46113a2db",
                        "children": []
                    },
                    {
                        "componentName": "DollarU",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "54a4924375b01b4d3b6b1be23ede6a",
                        "children": [{
                            "componentName": "DollarU",
                            "componentProcessName": "CREATE_PACKAGE",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Dollar_U_User_PPROD": "${p:SBM_Dollar_U_User_PPROD}",
                                "SBM_Dollar_U_User_PROD": "${p:SBM_Dollar_U_User_PROD}",
                                "SBM_Dollar_U_Unit_PROD": "${p:SBM_Dollar_U_Unit_PROD}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Noeud": "${p:SBM_Noeud}",
                                "SBM_Dollar_U_Espace": "${p:SBM_Dollar_U_Espace}",
                                "SBM_Dollar_U_Dependances": "${p:SBM_Dollar_U_Dependances}",
                                "SBM_Dollar_U_Unit_PPROD": "${p:SBM_Dollar_U_Unit_PPROD}",
                                "SBM_Depot": "${p:SBM_Depot}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Script": "${p:SBM_Script}",
                                "SBM_Package": "${p:SBM_Package}",
                                "SBM_Dollar_U_Activation_Tache": "${p:SBM_Dollar_U_Activation_Tache}"
                            },
                            "type": "componentProcess",
                            "name": "CreatePackage",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "293004d91428534979718aa95345cb",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "IMP_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "Var_change_doc_ids": "ARM_LIVRAISON",
                                "var_pkgname": "PKG_${p:SBM_BaselineId}",
                                "var_blname": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "Var_directory": "DOLLAR_U",
                                "var_rlname": "RL_${p:SBM_BaselineId}"
                            },
                            "type": "componentProcess",
                            "name": "ImportPackage",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": [
                {
                    "name": "SBM_Depot",
                    "label": "SBM_Depot",
                    "type": "TEXT",
                    "value": "Depot",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BaselineId",
                    "label": "SBM_BaselineId",
                    "type": "TEXT",
                    "value": "BaselineId",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Package",
                    "label": "SBM_Package",
                    "type": "TEXT",
                    "value": "Package",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Folder",
                    "label": "SBM_Folder",
                    "type": "TEXT",
                    "value": "Folder",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Nom_Log",
                    "label": "SBM_Nom_Log",
                    "type": "TEXT",
                    "value": "Nom_Log",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Dollar_U_Espace",
                    "label": "SBM_Dollar_U_Espace",
                    "type": "TEXT",
                    "value": "EXP",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Noeud",
                    "label": "SBM_Noeud",
                    "type": "TEXT",
                    "value": "GFHXRTCMP1",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Script",
                    "label": "SBM_Script",
                    "type": "TEXT",
                    "value": "Z:\\\\exploit\\\\UNIV56\\\\mgr\\\\uxsetenv.bat",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BckPackage",
                    "label": "SBM_BckPackage",
                    "type": "TEXT",
                    "value": "BckPackage",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Projet",
                    "label": "SBM_Projet",
                    "type": "TEXT",
                    "value": "DOLLARU",
                    "required": true,
                    "description": ""
                }
            ]
        },
        {
            "name": "DEPLOY",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "9dacd03aba27b681ffda6671710029",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "c3f33a95372cfa402491d27d61f3d7",
                        "from": "13e4958ddb9fb534cc62a1077994d8",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "13e4958ddb9fb534cc62a1077994d8",
                        "from": "9dacd03aba27b681ffda6671710029",
                        "type": "SUCCESS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "9dacd03aba27b681ffda6671710029",
                        "x": 159,
                        "y": 145
                    },
                    {
                        "name": "13e4958ddb9fb534cc62a1077994d8",
                        "x": -265.5,
                        "y": 247
                    },
                    {
                        "name": "c3f33a95372cfa402491d27d61f3d7",
                        "x": 0,
                        "y": 420
                    }
                ],
                "sizes": [
                    {
                        "name": "c3f33a95372cfa402491d27d61f3d7",
                        "width": 80,
                        "height": 50
                    },
                    {
                        "name": "9dacd03aba27b681ffda6671710029",
                        "width": 150,
                        "height": 60
                    },
                    {
                        "name": "13e4958ddb9fb534cc62a1077994d8",
                        "width": 160,
                        "height": 60
                    }
                ],
                "type": "graph",
                "name": "4de05cc1-c629-4631-b23c-5aedef4c8a55",
                "children": [
                    {
                        "type": "finish",
                        "name": "c3f33a95372cfa402491d27d61f3d7",
                        "children": []
                    },
                    {
                        "componentName": "DollarU",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "13e4958ddb9fb534cc62a1077994d8",
                        "children": [{
                            "componentName": "DollarU",
                            "componentProcessName": "DEPLOY",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Environnement": "${p:SBM_Environnement}",
                                "SBM_Dollar_U_Espace": "${p:SBM_Dollar_U_Espace}",
                                "SBM_Noeud": "${p:SBM_Noeud}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Depot": "${p:SBM_Depot}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Script": "${p:SBM_Script}",
                                "SBM_Package": "${p:SBM_Package}"
                            },
                            "type": "componentProcess",
                            "name": "DeployPackage",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "9dacd03aba27b681ffda6671710029",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "GET_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "var_pkgname": "PKG_${p:SBM_BaselineId}",
                                "var_blname": "${p:SBM_BaselineId}"
                            },
                            "type": "componentProcess",
                            "name": "GetPkgWithBL",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": [
                {
                    "name": "SBM_Depot",
                    "label": "SBM_Depot",
                    "type": "TEXT",
                    "value": "Depot",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BaselineId",
                    "label": "SBM_BaselineId",
                    "type": "TEXT",
                    "value": "BaselineId",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Package",
                    "label": "SBM_Package",
                    "type": "TEXT",
                    "value": "Package",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Folder",
                    "label": "SBM_Folder",
                    "type": "TEXT",
                    "value": "Folder",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Nom_Log",
                    "label": "SBM_Nom_Log",
                    "type": "TEXT",
                    "value": "Nom_Log",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Dollar_U_Espace",
                    "label": "SBM_Dollar_U_Espace",
                    "type": "TEXT",
                    "value": "EXP",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Noeud",
                    "label": "SBM_Noeud",
                    "type": "TEXT",
                    "value": "GFHXRTCMP1",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Script",
                    "label": "SBM_Script",
                    "type": "TEXT",
                    "value": "Z:\\\\exploit\\\\UNIV56\\\\mgr\\\\uxsetenv.bat",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BckPackage",
                    "label": "SBM_BckPackage",
                    "type": "TEXT",
                    "value": "BckPackage",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Projet",
                    "label": "SBM_Projet",
                    "type": "TEXT",
                    "value": "DOLLARU",
                    "required": true,
                    "description": ""
                }
            ]
        }
    ],
    "taskDefs": []
}