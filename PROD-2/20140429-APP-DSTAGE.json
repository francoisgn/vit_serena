{
    "entityType": "Application",
    "name": "DSTAGE",
    "enforceCompleteSnapshots": false,
    "propSheet": {"properties": []},
    "components": [
        {
            "entityType": "Component",
            "name": "DIMENSION",
            "created": 1395932999223,
            "importAutomatically": false,
            "useVfs": true,
            "active": true,
            "deleted": false,
            "defaultVersionType": "FULL",
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "envPropDefs": [
                {
                    "name": "Cst_DIM_dmcli_basedir",
                    "label": "Cst_DIM_dmcli_basedir",
                    "type": "TEXT",
                    "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_tmpdir",
                    "label": "Cst_DIM_dmcli_tmpdir",
                    "type": "TEXT",
                    "value": "\/tmp\/serena ",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_profile",
                    "label": "Cst_DIM_dmcli_profile",
                    "type": "TEXT",
                    "value": "dmprofile",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_exe",
                    "label": "Cst_DIM_dmcli_exe",
                    "type": "TEXT",
                    "value": "dmcli",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_user",
                    "label": "Cst_DIM_dmcli_user",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_pass",
                    "label": "Cst_DIM_dmcli_pass",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_dbname",
                    "label": "Cst_DIM_dmcli_dbname",
                    "type": "TEXT",
                    "value": "generali",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_dmcli_dsn",
                    "label": "Cst_DIM_dmcli_dsn",
                    "type": "TEXT",
                    "value": "INSSRAR0",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_Dim_app_user",
                    "label": "Cst_Dim_app_user",
                    "type": "TEXT",
                    "value": "root",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_Dim_app_pass",
                    "label": "Cst_Dim_app_pass",
                    "type": "TEXT",
                    "value": "pbe{5nq6egRoA1loacVgZ1LQcT4PdyWR8sgZuLViIZrDyt0=}",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHHost",
                    "label": "Cst_DIM_SSHHost",
                    "type": "TEXT",
                    "value": "lr2te614.groupe.generali.fr",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SASDepot",
                    "label": "Cst_DIM_SASDepot",
                    "type": "TEXT",
                    "value": "\/products\/serena\/sas",
                    "required": true,
                    "description": ""
                }
            ],
            "versionPropDefs": [],
            "propSheetGroup": {"propSheets": [
                {
                    "name": "template",
                    "properties": []
                },
                {
                    "name": "custom",
                    "properties": [
                        {
                            "name": "lib_dim_logger",
                            "value": "function dim_logger(){\n   echo \"[`date '+%Y%m%d-%H%M%S'`][$1]$2\"\n}",
                            "description": "lib_dim_logger",
                            "secure": false
                        },
                        {
                            "name": "lib_get_bl_package_and_rename",
                            "value": "function get_bl_package_and_rename(){\n   basename=`basename $0`\n   timestamp=\"`date '+%Y%m%d%H%M%S'`_$$_${basename}\"\n   crtfile=\"${dmcli_tmpdir}\/log_${timestamp}\"\n   mkdir -p \"${dmcli_tmpdir}\" 2>\/dev\/null\n   \n   lsource_dir=$1\n   ldest_dir=$2\n   ldest_packageName=$3\n   \n   \n   dim_logger \"I\" \"get last modify backup package from ${lsource_dir}\"\n   #Rq: \n   # on fait plutot ls -ltr \"${app_depot_agent_sas}\/PKG_${app_baselineId}\/${app_projet}\/${app_folder}\" plutot que ls -ltr \"${app_depot_agent_sas}\/PKG_${app_baselineId}\/${app_projet}\/${app_folder}\/*.zip\" \n   # pour garantir que la commande n'echoue pas s'il y a bcp de fichier zip presents\n   # => ls ls -ltr ne porte donc que sur le rep de stockage, et on filtre ensuite sur le type de fichier et sur l'extension zip\n   \n   # remarque 2: cas non gere si le fichier zip contient des espaces ' ' \n   dim_logger \"D\" \"ls -ltr \\\"${lsource_dir}\\\" 2>\/dev\/null | egrep -v \\\"^d\\\" | egrep \\\"*.zip\\\" | awk '{print \\$NF}' | tail -1\"\n   lastModifyFile=`ls -ltr \"${lsource_dir}\" 2>\/dev\/null | egrep -v \"^d\" | egrep \"*.zip\" | awk '{print $NF}' | tail -1`\n   if [ $? -ne 0 ]; then dim_logger \"E\" \"Impossible de lister les fichiers ${lsource_dir}\/*.zip \"; return 1;fi\n   \n   if [[ \"$lastModifyFile\" == \"\" ]]; then echo dim_logger \"E\" \"Aucun fichier .zip n'est present dans ${lsource_dir}\/ \"; return 1;fi\n   \n   dim_logger \"D\" \"lastModifyFile=$lastModifyFile\"\n   \n   # add full path\n   lastModifyFile=\"${lsource_dir}\/${lastModifyFile}\"\n   dim_logger \"D\" \"Full path lastModifyFile=$lastModifyFile\"\n   if [ ! -f \"${lastModifyFile}\" ]; then dim_logger \"E\" \"Impossible de recuperer le dernier fichier zip dans ${lsource_dir}\/ \";return 1;fi\n   \n   dim_logger \"D\" \"lastModifyFile full path=$lastModifyFile\"\n   dim_logger \"D\" \"cp \\\"$lastModifyFile\\\" \\\"${ldest_dir}\/${ldest_packageName}\\\"\"\n   cp \"$lastModifyFile\" \"${ldest_dir}\/${ldest_packageName}\"\n   \n   if [ $? -ne 0 ]; then \n      dim_logger \"E\" \"Impossible de copier $lastModifyFile ${ldest_dir}\/${ldest_packageName}\"; return 1;\n   else\n      dim_logger \"I\" \"Mise a disposition de  \\\"${ldest_dir}\/${ldest_packageName}\\\"\" \n   fi\n   return 0\n}",
                            "description": "lib_get_bl_package_and_rename",
                            "secure": false
                        },
                        {
                            "name": "lib_get_package_with_bl",
                            "value": "function get_package_with_bl(){\nbasename=`basename $0`\ntimestamp=\"`date '+%Y%m%d%H%M%S'`_$$_${basename}\"\ncrtfile=\"${dmcli_tmpdir}\/log_${timestamp}\"\nmkdir -p \"${dmcli_tmpdir}\" 2>\/dev\/null\n\n\nvar_pkgname=$1\nvar_blname=$2\n\n\n\n\ndim_logger \"I\" \"generate a random number between 0-999\"\nrandom=`expr $RANDOM % 999`\ndim_logger \"D\" \"random=$random\"\n\ndim_logger \"I\" \"Get numBL\"\ndim_logger \"D\" \"cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user <user> -pass <password> -dbname <dbname> -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \\\"${var_pkgname}\\\" | wc -l\"\n\n\nnumBL=`cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \"${var_blname}\" | wc -l`\ndim_logger \"D\" \"numBL=$numBL\"\nif [[ \"$numBL\" == \"\" ]]; then dim_logger \"E\" \"Get numBL KO \"; rm -f \"${crtfile}\"; return 1;fi\n\n\n\ndim_logger \"I\" \"extract package with BL\"\ndim_logger \"D\" \"cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user <user> -pass <password> -dbname <dbname> -dsn ${dmcli_dsn} -cmd \\\"REL \\\\\\\"ARM:RL_${var_pkgname}_${random}\\\\\\\" \/BASELINE=\\\\\"ARM:${var_pkgname}_${numBL}\\\\\" \/DIRECTORY=\\\\\\\"${app_depot_agent_node}::${app_depot_agent_sas}\/${var_pkgname}\\\\\\\" \/NOMETADATA\\\"\"\n\n\ncd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"REL \\\"ARM:RL_${var_pkgname}_${random}\\\" \/BASELINE=\\\"ARM:${var_pkgname}_${numBL}\\\" \/DIRECTORY=\\\"${app_depot_agent_node}::${app_depot_agent_sas}\/${var_pkgname}\\\" \/NOMETADATA\" 1> ${crtfile} 2>&1\n\n\nif [ $? -ne 0 ]; then \ndim_logger \"E\" \"extract package with BL KO \";rm -f \"${crtfile}\"; return 1;\nelse\ndim_logger \"I\" \"extract package with BL OK \"; \nfi\nrm -f \"${crtfile}\";\nreturn 0\n}",
                            "description": "lib_get_package_with_bl",
                            "secure": false
                        },
                        {
                            "name": "lib_import_package_with_bl",
                            "value": "function import_package_with_bl(){\nbasename=`basename $0`\ntimestamp=\"`date '+%Y%m%d%H%M%S'`_$$_${basename}\"\ncrtfile=\"${dmcli_tmpdir}\/log_${timestamp}\"\nmkdir -p \"${dmcli_tmpdir}\" 2>\/dev\/null\n\n\n\nlpath_directory=$1\ndim_logger \"D\" \"lpath_directory=$lpath_directory\"\nlchange_doc_ids=$2\ndim_logger \"D\" \"lchange_doc_ids=$lchange_doc_ids\"\nvar_folder=$3\ndim_logger \"D\" \"var_folder=$var_folder\"\nvar_rlname=$4\ndim_logger \"D\" \"var_rlname=$var_rlname\" \n# rlname : ${p:SBM_BckPackage} (import_bck) OR RL_${p:SBM_BaselineId} (import_pkg)\nvar_pkgname=$5\ndim_logger \"D\" \"var_pkgname=$var_pkgname\" \n# ${p:SBM_BckPackage} (import_bck) OR PKG_${p:SBM_BaselineId} (import_pkg)\nvar_blname=$6\ndim_logger \"D\" \"var_blname=$var_blname\" \n# ${p:SBM_BckPackage} (import_bck) OR {p:SBM_BaselineId} (import_pkg)\n\n\n\ncd ${dmcli_basedir} \n. .\/${dmcli_profile}\n\ndim_logger \"I\" \"check folder:${lpath_directory}\\\\${var_folder}\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkfolder.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkfolder.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\" 1> ${crtfile} 2>&1\ngrep \"SUCCEEDED\" ${crtfile}\nif [ $? -ne 0 ]; then dim_logger \"E\" \"check folder KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"check package\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkpkg.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"REXEC \/NETWORK_NODE=${app_depot_agent_node} \/TEMPLATE=checkpkg.template \/nobatch \/user=${app_user} \/password=${app_pass} \/parameters=(PROJET=${lpath_directory}\/${var_folder})\" 1> ${crtfile} 2>&1\ngrep \"SUCCEEDED\" ${crtfile}\nif [ $? -ne 0 ]; then dim_logger \"E\" \"check package KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"create request\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"CC ARM LIVRAISON \/AFFECTED=(\\\"ARM:${var_folder}\\\") \/ATTRIBUTES=(Title=\\\"${var_rlname}\\\") \/WORKSET=\\\"ARM:MAIN\\\"\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"CC ARM LIVRAISON \/AFFECTED=(\\\"ARM:${var_folder}\\\") \/ATTRIBUTES=(Title=\\\"${var_rlname}\\\") \/WORKSET=\\\"ARM:MAIN\\\"\" 1> ${crtfile} 2>&1\nif [ $? -ne 0 ]; then dim_logger \"E\" \"create request KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"get number livraison\"\nnumLiv=`cat ${crtfile} | grep ARM_LIVRAISON | sed 's\/[^[:digit:]]\/\/g'`\nif [[ \"$numLiv\" == \"\" ]]; then dim_logger \"E\" \"get number livraison KO \"; rm -f \"${crtfile}\"; return 1;fi\ndim_logger \"D\" \"numLiv=$numLiv\"\n\n\n\n\ndim_logger \"I\" \"import File\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"UPLOAD \/DIRECTORY=\\\"${lpath_directory}\\\\${var_folder}\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/NOKEEP \/FORCE_CHECKIN \/RECURSIVE \/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/PART=\\\"ARM:${var_folder}\\\"\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"UPLOAD \/DIRECTORY=\\\"${lpath_directory}\\\\${var_folder}\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/NOKEEP \/FORCE_CHECKIN \/RECURSIVE \/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/PART=\\\"ARM:${var_folder}\\\"\" 1> ${crtfile} 2>&1\nif [ $? -ne 0 ]; then dim_logger \"E\" \"import File KO \"; echo \"rm -f \\\"${crtfile}\\\"\"; return 1;fi\n\ndim_logger \"I\" \"close request\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"AC ${lchange_doc_ids}_${numLiv} \/STATUS=\\\"FERME\\\"\\\"\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"AC ${lchange_doc_ids}_${numLiv} \/STATUS=\\\"FERME\\\"\"\nif [ $? -ne 0 ]; then dim_logger \"E\" \"close request KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"Get numBL\"\ndim_logger \"D\" \"cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \\\"${var_blname}\\\" | wc -l\"\nnumBL=`cd ${dmcli_basedir};. .\/${dmcli_profile};${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd 'LSBL' | grep \"${var_blname}\" | wc -l`\ndim_logger \"D\" \"numBL=$numBL\"\nif [[ \"$numBL\" == \"\" ]]; then dim_logger \"E\" \"Get numBL KO \"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"increment numBL_long\"\nnumBL_long=`echo \"${numBL} + 1\" | bc`\ndim_logger \"D\" \"numBL_long=$numBL_long\"\nif [[ \"$numBL_long\" == \"\" ]]; then echo \"Erreur durant le calcul de l'increment\"; rm -f \"${crtfile}\"; return 1;fi\n\ndim_logger \"I\" \"create baseline\"\ndim_logger \"D\" \"${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \\\"CBL \\\"ARM:${var_pkgname}_${numBL_long}\\\" \/PART=\\\"ARM:${var_folder}\\\" \/TEMPLATE_ID=\\\"ALL_LIVRAISON\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/LEVEL=\\\"0\\\"\/TYPE=\\\"BASELINE\\\"\/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/INCLUDE_CLOSED \/SCOPE=\\\"PART\\\"\\\" 1> ${crtfile} 2>&1\"\n${dmcli_exe} -user ${dmcli_user} -pass ${dmcli_pass} -dbname ${dmcli_dbname} -dsn ${dmcli_dsn} -cmd \"CBL \\\"ARM:${var_pkgname}_${numBL_long}\\\" \/PART=\\\"ARM:${var_folder}\\\" \/TEMPLATE_ID=\\\"ALL_LIVRAISON\\\" \/WORKSET=\\\"ARM:MAIN\\\" \/LEVEL=\\\"0\\\"\/TYPE=\\\"BASELINE\\\"\/CHANGE_DOC_IDS=(${lchange_doc_ids}_${numLiv}) \/INCLUDE_CLOSED \/SCOPE=\\\"PART\\\"\" 1> ${crtfile} 2>&1\nif [ $? -ne 0 ]; then \ndim_logger \"E\" \"create baseline KO \"; rm -f \"${crtfile}\"; return 1;\nelse\ndim_logger \"I\" \"create baseline OK \";\nfi\nrm -f \"${crtfile}\";\n\nreturn 0\n}",
                            "description": "lib_import_package_with_bl",
                            "secure": false
                        }
                    ]
                },
                {
                    "name": "code_station",
                    "properties": [{
                        "name": "repository",
                        "value": "9e05c2a4-6aa9-4392-ad49-614631bf28db",
                        "description": "",
                        "secure": false
                    }]
                }
            ]},
            "processes": [
                {
                    "name": "GET_BL_PKG_AND_RENAME",
                    "description": "get_bl_package_and_rename",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "Var_source_dir",
                            "label": "Var_source_dir",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "Var_dest_dir",
                            "label": "Var_dest_dir",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "Var_dest_packageName",
                            "label": "Var_dest_packageName",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "40d41de51e9f9f6411bf1b620238b0",
                                "from": "get_bl_package_and_rename",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "get_bl_package_and_rename",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "40d41de51e9f9f6411bf1b620238b0",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "get_bl_package_and_rename",
                                "x": 40.5,
                                "y": 174
                            }
                        ],
                        "sizes": [],
                        "type": "graph",
                        "name": "2bad4e10-fb6a-40a0-a1e2-c4de8a54d038",
                        "children": [
                            {
                                "type": "finish",
                                "name": "40d41de51e9f9f6411bf1b620238b0",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Shell",
                                "pluginName": "Shell",
                                "pluginVersion": 4,
                                "properties": {
                                    "directoryOffset": ".",
                                    "shellInterpreter": "bash",
                                    "scriptBody": "# init variable\nVar_source_dir=\"${p:Var_source_dir}\"\nVar_dest_dir=\"${p:Var_dest_dir}\"\nVar_dest_packageName=\"${p:Var_dest_packageName}\"\n\n# Cst Env Variable\ndmcli_basedir=\"${p:environment\/Cst_DIM_dmcli_basedir}\"\ndmcli_tmpdir=\"${p:environment\/Cst_DIM_dmcli_tmpdir}\"\ndmcli_profile=\"${p:environment\/Cst_DIM_dmcli_profile}\"\ndmcli_exe=\"${p:environment\/Cst_DIM_dmcli_exe}\"\ndmcli_user=\"${p:environment\/Cst_DIM_dmcli_user}\"\ndmcli_pass=\"${p:environment\/Cst_DIM_dmcli_pass}\"\ndmcli_dbname=\"${p:environment\/Cst_DIM_dmcli_dbname}\"\ndmcli_dsn=\"${p:environment\/Cst_DIM_dmcli_dsn}\"\napp_user=\"${p:environment\/Cst_Dim_app_user}\"\napp_pass=\"${p:environment\/Cst_Dim_app_pass}\"\napp_depot_agent_node=\"${p:environment\/Cst_DIM_SSHHost}\"\napp_depot_agent_sas=\"${p:environment\/Cst_DIM_SASDepot}\"\n\n# load function\n${p:component\/lib_dim_logger}\n${p:component\/lib_import_package_with_bl}\n${p:component\/lib_get_bl_package_and_rename}\n${p:component\/lib_get_package_with_bl}\n\necho \"Show Environment\"\nset | egrep  \"^dmcli_\"\nset | egrep \"^app_\"\necho \"\"\necho \"cmd:get_bl_package_and_rename \\\"${Var_source_dir}\\\" \\\"${Var_dest_dir}\\\" \\\"${Var_dest_packageName}\\\"\"\nget_bl_package_and_rename \"${Var_source_dir}\" \"${Var_dest_dir}\" \"${Var_dest_packageName}\"\nexit $?",
                                    "runAsDaemon": "false",
                                    "outputFile": ""
                                },
                                "type": "plugin",
                                "name": "get_bl_package_and_rename",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "GET_PKG_WITH_BL",
                    "description": "get_package_with_bl",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "var_pkgname",
                            "label": "var_pkgname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_blname",
                            "label": "var_blname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "get_package_with_bl",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "74ff936d186cf3dd146b5ad4c6bb94",
                                "from": "get_package_with_bl",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "74ff936d186cf3dd146b5ad4c6bb94",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "get_package_with_bl",
                                "x": 27.5,
                                "y": 131
                            }
                        ],
                        "sizes": [
                            {
                                "name": "74ff936d186cf3dd146b5ad4c6bb94",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "get_package_with_bl",
                                "width": 190,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "87402995-c9b7-4a9f-a4c7-933f3cef7ad0",
                        "children": [
                            {
                                "type": "finish",
                                "name": "74ff936d186cf3dd146b5ad4c6bb94",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Shell",
                                "pluginName": "Shell",
                                "pluginVersion": 4,
                                "properties": {
                                    "directoryOffset": ".",
                                    "shellInterpreter": "bash",
                                    "scriptBody": "# init variable\nvar_pkgname=\"${p:var_pkgname}\"\nvar_blname=\"${p:var_blname}\"\n   \n# Cst Env Variable\ndmcli_basedir=\"${p:environment\/Cst_DIM_dmcli_basedir}\"\ndmcli_tmpdir=\"${p:environment\/Cst_DIM_dmcli_tmpdir}\"\ndmcli_profile=\"${p:environment\/Cst_DIM_dmcli_profile}\"\ndmcli_exe=\"${p:environment\/Cst_DIM_dmcli_exe}\"\ndmcli_user=\"${p:environment\/Cst_DIM_dmcli_user}\"\ndmcli_pass=\"${p:environment\/Cst_DIM_dmcli_pass}\"\ndmcli_dbname=\"${p:environment\/Cst_DIM_dmcli_dbname}\"\ndmcli_dsn=\"${p:environment\/Cst_DIM_dmcli_dsn}\"\napp_user=\"${p:environment\/Cst_Dim_app_user}\"\napp_pass=\"${p:environment\/Cst_Dim_app_pass}\"\napp_depot_agent_node=\"${p:environment\/Cst_DIM_SSHHost}\"\napp_depot_agent_sas=\"${p:environment\/Cst_DIM_SASDepot}\"\n\n# load function\n${p:component\/lib_dim_logger}\n${p:component\/lib_import_package_with_bl}\n${p:component\/lib_get_bl_package_and_rename}\n${p:component\/lib_get_package_with_bl}\n\necho \"Show Environment\"\nset | egrep  \"^dmcli_\"\nset | egrep \"^app_\"\necho \"\"\necho \"cmd:get_package_with_bl \\\"${var_pkgname}\\\" \\\"${var_blname}\\\"\"\nget_package_with_bl \"${var_pkgname} ${var_blname}\" \nexit $?",
                                    "runAsDaemon": "false",
                                    "outputFile": ""
                                },
                                "type": "plugin",
                                "name": "get_package_with_bl",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "IMP_PKG_WITH_BL",
                    "description": "import_package_with_bl",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "Var_directory",
                            "label": "Var_directory",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "Var_change_doc_ids",
                            "label": "Var_change_doc_ids",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Folder",
                            "label": "SBM_Folder",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_rlname",
                            "label": "var_rlname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_pkgname",
                            "label": "var_pkgname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "var_blname",
                            "label": "var_blname",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "5e06097a4b13e274b4d963f81e21bb",
                                "from": "import_package_with_bl",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "import_package_with_bl",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "5e06097a4b13e274b4d963f81e21bb",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "import_package_with_bl",
                                "x": 30.5,
                                "y": 144
                            }
                        ],
                        "sizes": [
                            {
                                "name": "import_package_with_bl",
                                "width": 210,
                                "height": 60
                            },
                            {
                                "name": "5e06097a4b13e274b4d963f81e21bb",
                                "width": 80,
                                "height": 50
                            }
                        ],
                        "type": "graph",
                        "name": "244eb6ff-89a0-470b-95d1-559c4e280017",
                        "children": [
                            {
                                "type": "finish",
                                "name": "5e06097a4b13e274b4d963f81e21bb",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Shell",
                                "pluginName": "Shell",
                                "pluginVersion": 4,
                                "properties": {
                                    "directoryOffset": ".",
                                    "shellInterpreter": "bash",
                                    "scriptBody": "# init variable\n\n\n# Cst Env Variable\ndmcli_basedir=\"${p:environment\/Cst_DIM_dmcli_basedir}\"\ndmcli_tmpdir=\"${p:environment\/Cst_DIM_dmcli_tmpdir}\"\ndmcli_profile=\"${p:environment\/Cst_DIM_dmcli_profile}\"\ndmcli_exe=\"${p:environment\/Cst_DIM_dmcli_exe}\"\ndmcli_user=\"${p:environment\/Cst_DIM_dmcli_user}\"\ndmcli_pass=\"${p:environment\/Cst_DIM_dmcli_pass}\"\ndmcli_dbname=\"${p:environment\/Cst_DIM_dmcli_dbname}\"\ndmcli_dsn=\"${p:environment\/Cst_DIM_dmcli_dsn}\"\napp_user=\"${p:environment\/Cst_Dim_app_user}\"\napp_pass=\"${p:environment\/Cst_Dim_app_pass}\"\napp_depot_agent_node=\"${p:environment\/Cst_DIM_SSHHost}\"\napp_depot_agent_sas=\"${p:environment\/Cst_DIM_SASDepot}\"\n\n# load function\n${p:component\/lib_dim_logger}\n${p:component\/lib_import_package_with_bl}\n${p:component\/lib_get_bl_package_and_rename}\n${p:component\/lib_get_package_with_bl}\n\necho \"Show Environment\"\n#set | egrep  \"^dmcli_\"\n#set | egrep \"^app_\"\n\n\n\n\n\n\necho \"cmd:import_package_with_bl \\\"${p:Var_directory}\\\" \\\"${p:Var_change_doc_ids}\\\" \\\"${p:SBM_Folder}\\\" \\\"${p:var_rlname}\\\" \\\"${p:var_pkgname}\\\" \\\"${p:var_blname}\\\" \"\nimport_package_with_bl \"${p:Var_directory}\" \"${p:Var_change_doc_ids}\" \"${p:SBM_Folder}\" \"${p:var_rlname}\" \"${p:var_pkgname}\"  \"${p:var_blname}\"\nexit $?\n\n",
                                    "runAsDaemon": "false",
                                    "outputFile": ""
                                },
                                "type": "plugin",
                                "name": "import_package_with_bl",
                                "children": []
                            }
                        ]
                    }
                }
            ],
            "taskDefs": [],
            "configTemplates": [{
                "name": "lib_dimension",
                "active": false,
                "data": ""
            }]
        },
        {
            "entityType": "Component",
            "name": "DSTAGE",
            "created": 1395933043260,
            "importAutomatically": false,
            "useVfs": true,
            "active": true,
            "deleted": false,
            "defaultVersionType": "FULL",
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "componentTemplate": {
                "name": "DSTAGE-TPL",
                "description": "",
                "active": true,
                "envPropDefs": [],
                "propDefs": [],
                "properties": [{
                    "name": "lib_logger",
                    "value": "def logger (def String level,def String message,def String outputFileStr=null) {\n\tdef timpeStamp=new Date().format(\"yyyyMMdd-kkmmss\")\n\tprintln \"$timpeStamp:[$level] $message\"\n\tif (outputFileStr!=null && outputFileStr !=\"\" && new File(\"$outputFileStr\").getParentFile().isDirectory()){\n\t\tdef File outputFile = new File(outputFileStr)\n\t\toutputFile<< \"$timpeStamp:[$level] $message\\n\"\n\t}\n}",
                    "description": "",
                    "secure": false
                }],
                "processes": [
                    {
                        "name": "BACKUPFULL",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BaselineId",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Package",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "Folder",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "Nom_Log",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "DOLLARU",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BckPackage",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Password",
                                "label": "SBM_Password",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Login",
                                "label": "SBM_Login",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server",
                                "label": "SBM_Target_Server",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server2",
                                "label": "SBM_Target_Server2",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server3",
                                "label": "SBM_Target_Server3",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Environnement",
                                "label": "SBM_Environnement",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "2df06d6815de2658f35f1d55db0914",
                                    "from": "UploadPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreatePackage",
                                    "from": "DownloadPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "Create_Workspace",
                                    "from": "c7feaeb45f2ccf028866316e1b56d0",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "UploadPackage",
                                    "from": "CreatePackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "c7feaeb45f2ccf028866316e1b56d0",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadPackage",
                                    "from": "Create_Workspace",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "CreatePackage",
                                    "x": -7.5,
                                    "y": 360
                                },
                                {
                                    "name": "Create_Workspace",
                                    "x": -202.5,
                                    "y": 180
                                },
                                {
                                    "name": "UploadPackage",
                                    "x": 155.5,
                                    "y": 450
                                },
                                {
                                    "name": "DownloadPackage",
                                    "x": 105.5,
                                    "y": 250
                                },
                                {
                                    "name": "2df06d6815de2658f35f1d55db0914",
                                    "x": -12.5,
                                    "y": 550
                                },
                                {
                                    "name": "InitStep",
                                    "x": -284.5,
                                    "y": 60
                                },
                                {
                                    "name": "c7feaeb45f2ccf028866316e1b56d0",
                                    "x": 127.5,
                                    "y": 110
                                }
                            ],
                            "sizes": [
                                {
                                    "name": "DownloadPackage",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "c7feaeb45f2ccf028866316e1b56d0",
                                    "width": 150,
                                    "height": 40
                                },
                                {
                                    "name": "InitStep",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "2df06d6815de2658f35f1d55db0914",
                                    "width": 80,
                                    "height": 50
                                },
                                {
                                    "name": "Create_Workspace",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "CreatePackage",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "UploadPackage",
                                    "width": 310,
                                    "height": 60
                                }
                            ],
                            "type": "graph",
                            "name": "7b9ca59f-652c-457c-8ae5-c8492f3bee6e",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "2df06d6815de2658f35f1d55db0914",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/------------- Create WorkSpace\n\n\/\/-------------Chargement des variables\n\n\/\/chargement des libs\n${p:lib_logger}\n\nfileSep=File.separator\n\/\/ recuperation des variables inputs SBM\ndef SBM_Nom_Log=\"${p:SBM_Nom_Log}\"\ndef SBM_BckPackage=\"${p:SBM_BckPackage}\"\ndef SBM_Projet=\"${p:SBM_Projet}\"\ndef SBM_Password=\"${p:SBM_Password}\"\ndef SBM_Folder=\"${p:SBM_Folder}\"\ndef SBM_Package=\"${p:SBM_Package}\"\ndef SBM_BaselineId=\"${p:SBM_BaselineId}\"\ndef SBM_Login=\"${p:SBM_Login}\"\ndef SBM_Target_Server=\"${p:SBM_Target_Server}\"\ndef SBM_Target_Server2=\"${p:SBM_Target_Server2}\"\ndef SBM_Target_Server3=\"${p:SBM_Target_Server3}\"\ndef SBM_Environnement=\"${p:SBM_Environnement}\"\n\n\/\/ recuperation des constantes environnement\ndef VAR_CST_DSTAGE_tmp_directories=\"${p:environment\/CST_DSTAGE_tmp_directories}\"\ndef VAR_CST_DSTAGE_Root_Directory=\"${p:environment\/CST_DSTAGE_Root_Directory}\"\ndef VAR_CST_DSTAGE_ArboDisque_Files=\"${p:environment\/CST_DSTAGE_ArboDisque_Files}\"\ndef VAR_CST_DSTAGE_NAS_Folders=\"${p:environment\/CST_DSTAGE_NAS_Folders}\"\ndef VAR_CST_DSTAGE_M_Folders=\"${p:environment\/CST_DSTAGE_M_Folders}\"\ndef VAR_CST_DSTAGE_IsTool_Path=\"${p:environment\/CST_DSTAGE_IsTool_Path}\"\ndef VAR_CST_DSTAGE_Port_Domaine=\"${p:environment\/CST_DSTAGE_Port_Domaine}\"\ndef VAR_CST_DIM_SASDepot=\"${p:environment\/CST_DIM_SASDepot}\"\ndef VAR_CST_Nas_Projet_Path=\"${p:environment\/CST_Nas_Projet_Path}\"\ndef VAR_CST_DSTAGE_Environnement=\"${p:environment\/CST_DSTAGE_Environnement}\"\n\n\/\/ recuperation des variables environnement\ndef VAR_DSTAGE_TargetServerList=\"${p:InitStep\/VAR_DSTAGE_TargetServerList}\"\ndef VAR_DSTAGE_Fichiers_Manuels_Directory=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Manuels_Directory}\"\ndef VAR_DSTAGE_Fichiers_Sortie=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Sortie}\"\ndef VAR_DSTAGE_Fichiers_Temporaires=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Temporaires}\"\ndef VAR_DSTAGE_Fichiers_Stockage=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Stockage}\"\ndef VAR_DSTAGE_Fichiers_Sql=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Sql}\"\ndef VAR_DSTAGE_Fichiers_Init=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Init}\"\ndef VAR_DSTAGE_Fichiers_Hashcode1=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Hashcode1}\"\ndef VAR_DSTAGE_Fichiers_Instance_Temporaires1=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Instance_Temporaires1}\"\ndef VAR_DSTAGE_Compte_Rendu1=\"${p:InitStep\/VAR_DSTAGE_Compte_Rendu1}\"\ndef VAR_DSTAGE_Master1=\"${p:InitStep\/VAR_DSTAGE_Master1}\"\ndef VAR_DSTAGE_TR=\"${p:InitStep\/VAR_DSTAGE_TR}\"\ndef VAR_DSTAGE_Fichiers_Validation1=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Validation1}\"\ndef VAR_DSTAGE_backupfull_file=\"${p:InitStep\/VAR_DSTAGE_backupfull_file}\"\ndef VAR_DSTAGE_Nas_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_Nas_Target_Folder}\"\ndef VAR_DSTAGE_Fichiers_Master=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Master}\"\ndef VAR_DSTAGE_Fichiers_TR=\"${p:InitStep\/VAR_DSTAGE_Fichiers_TR}\"\ndef VAR_DSTAGE_Fichiers_Validation=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Validation}\"\ndef VAR_DSTAGE_M_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_M_Target_Folder}\"\ndef VAR_DSTAGE_Workspace=\"${p:InitStep\/VAR_DSTAGE_Workspace}\"\ndef VAR_DSTAGE_LogFileName=\"${p:InitStep\/VAR_DSTAGE_LogFileName}\"\n\n\/\/-------------Chargement des variables\n\n\n\/****************\n * STEP : Creation du workspace\n * ************\/\nfileSep=File.separator\n\ndef dPathWorkspaceFile=new File(VAR_DSTAGE_Workspace)\n\nlogger(\"INFO\",\"\\n------------\\nGestion initial du workspace:${VAR_DSTAGE_Workspace} \\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\nif(dPathWorkspaceFile.isDirectory()){\n\tlogger(\"INFO\",\"Un workspace ($VAR_DSTAGE_Workspace) existe deja\",\"$VAR_DSTAGE_LogFileName\");\n\tif (new File(\"$VAR_DSTAGE_Workspace${fileSep}tag${fileSep}${VAR_DSTAGE_backupfull_file}\").isFile()){\n\t\tlogger(\"INFO\",\" Le full backfile (tag${fileSep}${VAR_DSTAGE_backupfull_file}) existe deja. Suppression partiel du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\t\tdef pathPkgDir=\"$VAR_DSTAGE_Workspace${fileSep}pkg\"\n\t\tdef dPathPkgDir=new File(\"$VAR_DSTAGE_Workspace${fileSep}pkg\")\n\t\t\n\t\tlogger(\"INFO\",\"Suppression de $pathPkgDir si le repertoire existe\",\"$VAR_DSTAGE_LogFileName\");\n\t\tif(dPathPkgDir.isDirectory()){\n\t\t\tif(!dPathPkgDir.deleteDir()){\n\t\t\t\tlogger(\"ERROR\",\" Impossible de supprimer le repertoire ${pathPkgDir}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tlogger(\"INFO\",\"Le full backfile tag${fileSep}${VAR_DSTAGE_backupfull_file}) n'existe pas. Suppression complet du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\t\tif(!dPathWorkspaceFile.deleteDir()){\n\t\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire ${VAR_DSTAGE_Workspace}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\tSystem.exit(1)\n\t\t}\n\t\t\n\t\t\n\t}\n}\n\nlogger(\"INFO\",\"Creation des sous repertoires du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\/\/ loop sur chaque sous directory a creer\nVAR_CST_DSTAGE_tmp_directories.split(\"\\\\|\").each{ it->\n\tdef String dirName=it.trim()\n\tif (dirName != \"\" ){\n\t\tFile dir=new File(\"${VAR_DSTAGE_Workspace}${fileSep}${dirName}\")\n\t\tif(!dir.isDirectory()){\n\t\t\tif(!dir.mkdirs()){\n\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le sous repertoire :\"+dir.getAbsolutePath(),\"$VAR_DSTAGE_LogFileName\");\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlogger(\"INFO\",\"Creation du sous repertoire :${dirName}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlogger(\"INFO\",\"Le sous repertoire :${dirName} existe deja\",\"$VAR_DSTAGE_LogFileName\");\n\t\t}\n\t}\n}\n"
                                    },
                                    "type": "plugin",
                                    "name": "Create_Workspace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "dmsys",
                                        "sshPassword": "pbe{+HprcTJMsW2cVj1okFgVcAn1VT8aUduz}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{+FR2S811dGLnYEp5QVtqTASwtS4bQpd2}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/CST_DIM_SASDepot}\/${p:SBM_BaselineId}\/DATASTAGE\/${p:SBM_Folder}\/${p:SBM_Package}",
                                        "localDestFile": "${p:InitStep\/VAR_DSTAGE_Workspace}\\\\pkg\\\\${p:SBM_Package}"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ ---------------------- Create PAckage\n\n\/\/-------------Chargement des variables\n\n\/\/chargement des libs\n${p:lib_logger}\n\nfileSep=File.separator\n\/\/ recuperation des variables inputs SBM\ndef SBM_Nom_Log=\"${p:SBM_Nom_Log}\"\ndef SBM_BckPackage=\"${p:SBM_BckPackage}\"\ndef SBM_Projet=\"${p:SBM_Projet}\"\ndef SBM_Password=\"${p:SBM_Password}\"\ndef SBM_Folder=\"${p:SBM_Folder}\"\ndef SBM_Package=\"${p:SBM_Package}\"\ndef SBM_BaselineId=\"${p:SBM_BaselineId}\"\ndef SBM_Login=\"${p:SBM_Login}\"\ndef SBM_Target_Server=\"${p:SBM_Target_Server}\"\ndef SBM_Target_Server2=\"${p:SBM_Target_Server2}\"\ndef SBM_Target_Server3=\"${p:SBM_Target_Server3}\"\ndef SBM_Environnement=\"${p:SBM_Environnement}\"\n\n\/\/ recuperation des constantes environnement\ndef VAR_CST_DSTAGE_tmp_directories=\"${p:environment\/CST_DSTAGE_tmp_directories}\"\ndef VAR_CST_DSTAGE_Root_Directory=\"${p:environment\/CST_DSTAGE_Root_Directory}\"\ndef VAR_CST_DSTAGE_ArboDisque_Files=\"${p:environment\/CST_DSTAGE_ArboDisque_Files}\"\ndef VAR_CST_DSTAGE_NAS_Folders=\"${p:environment\/CST_DSTAGE_NAS_Folders}\"\ndef VAR_CST_DSTAGE_M_Folders=\"${p:environment\/CST_DSTAGE_M_Folders}\"\ndef VAR_CST_DSTAGE_IsTool_Path=\"${p:environment\/CST_DSTAGE_IsTool_Path}\"\ndef VAR_CST_DSTAGE_Port_Domaine=\"${p:environment\/CST_DSTAGE_Port_Domaine}\"\ndef VAR_CST_DIM_SASDepot=\"${p:environment\/CST_DIM_SASDepot}\"\ndef VAR_CST_Nas_Projet_Path=\"${p:environment\/CST_Nas_Projet_Path}\"\ndef VAR_CST_DSTAGE_Environnement=\"${p:environment\/CST_DSTAGE_Environnement}\"\n\n\/\/ recuperation des variables environnement\ndef VAR_DSTAGE_TargetServerList=\"${p:InitStep\/VAR_DSTAGE_TargetServerList}\"\ndef VAR_DSTAGE_Fichiers_Manuels_Directory=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Manuels_Directory}\"\ndef VAR_DSTAGE_Fichiers_Sortie=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Sortie}\"\ndef VAR_DSTAGE_Fichiers_Temporaires=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Temporaires}\"\ndef VAR_DSTAGE_Fichiers_Stockage=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Stockage}\"\ndef VAR_DSTAGE_Fichiers_Sql=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Sql}\"\ndef VAR_DSTAGE_Fichiers_Init=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Init}\"\ndef VAR_DSTAGE_Fichiers_Hashcode1=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Hashcode1}\"\ndef VAR_DSTAGE_Fichiers_Instance_Temporaires1=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Instance_Temporaires1}\"\ndef VAR_DSTAGE_Compte_Rendu1=\"${p:InitStep\/VAR_DSTAGE_Compte_Rendu1}\"\ndef VAR_DSTAGE_Master1=\"${p:InitStep\/VAR_DSTAGE_Master1}\"\ndef VAR_DSTAGE_TR=\"${p:InitStep\/VAR_DSTAGE_TR}\"\ndef VAR_DSTAGE_Fichiers_Validation1=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Validation1}\"\ndef VAR_DSTAGE_backupfull_file=\"${p:InitStep\/VAR_DSTAGE_backupfull_file}\"\ndef VAR_DSTAGE_Nas_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_Nas_Target_Folder}\"\ndef VAR_DSTAGE_Fichiers_Master=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Master}\"\ndef VAR_DSTAGE_Fichiers_TR=\"${p:InitStep\/VAR_DSTAGE_Fichiers_TR}\"\ndef VAR_DSTAGE_Fichiers_Validation=\"${p:InitStep\/VAR_DSTAGE_Fichiers_Validation}\"\ndef VAR_DSTAGE_M_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_M_Target_Folder}\"\ndef VAR_DSTAGE_Workspace=\"${p:InitStep\/VAR_DSTAGE_Workspace}\"\ndef VAR_DSTAGE_LogFileName=\"${p:InitStep\/VAR_DSTAGE_LogFileName}\"\n\n\/\/-------------Chargement des variables\n\n \/****************\n  * STEP: decompression et Controle du package \n  ****************\/\n\n \nlogger(\"INFO\",\"\\n------------\\ndecompression du package\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n logger(\"INFO\",\"Extraction du fichier zip \\\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}\\\"\",\"$VAR_DSTAGE_LogFileName\")\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}\",\n\t\t\t dest:\"${VAR_DSTAGE_Workspace}${fileSep}pkg\",\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur dans l'extraction du fichier zip \\\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}\\\"\",\"$VAR_DSTAGE_LogFileName\")\n\t logger(\"ERROR\", e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t System.exit(1)\n }\n \n \/\/ Recuperation du Parent-SubDirectory\n \/\/ => recherche du premier repertoire present dans ${VAR_DSTAGE_Workspace}${fileSep}pkg different de ^bck.*\\$\n  def String pkgParentSubDirectory=\"\"\n try{\n\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg\").eachDir {\n\t\t def File sdir=it\n\t\t pkgParentSubDirectory=sdir.getName()\n\t\t \/\/ !!!! Parent-SubDirectory trouve : on force l'arret de la boucle!!!!\n\t\t throw new Exception(\"Parent-SubDirectory trouve\")\n\t }\n\t \n }\n catch(Exception e){\n\t \/\/ Parent-SubDirectory trouve\n\t logger(\"DEBUG\",\"pkgParentSubDirectory=$pkgParentSubDirectory\",\"$VAR_DSTAGE_LogFileName\")\n }\n if(pkgParentSubDirectory==\"\"){\n\t logger(\"ERROR\",\"Impossible de trouver un sous repertoire dans${VAR_DSTAGE_Workspace}${fileSep}pkg\",\"$VAR_DSTAGE_LogFileName\")\n\t System.exit(1)\n }\n \n \n \n\n \/****************\n  * STEP: Backup FULL\n  ****************\/\n\n \n \n\/**********\n * ????????????\n * Pour moi, ce test est unitil, il faut sauvegarder qquoiqu'il arrive\n *\n *\/\n\/\/ recherche du fichier ISX a importer\nlogger(\"INFO\",\"recherche du fichier ISX a importer\",\"$VAR_DSTAGE_LogFileName\")\n\/\/$Dstage_Job=$('find -name $VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory *.isx')\ndef pathIsxFile=\"\"\ntry{\n\tnew File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\").eachFile  {\n\t\tdef File f=it\n\t\tif(f.isFile() && f.getName() =~ \"^.*\\\\.isx\\$\"){\n\t\t\tpathIsxFile=f.getName()\n\t\t\t\/\/arret de la loop\n\t\t\tthrow new Exception(\"ISX trouve\")\n\t\t}\n   }\n}\ncatch(Exception e){\n\t\/\/ iSX trouve\n}\nif(pathIsxFile==\"\"){\n\tlogger(\"WARN\",\"Aucun ISX n'a pas etre localise ds ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\",\"$VAR_DSTAGE_LogFileName\")\n\n}\nelse{\n\tlogger(\"INFO\",\"L'ISX a impoter a ete identifie:  pkg${fileSep}${pkgParentSubDirectory}${fileSep}$pathIsxFile\",\"$VAR_DSTAGE_LogFileName\")\n}\n\n \n logger(\"INFO\",\"\\n------------\\nLancement du backup Full\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n VAR_DSTAGE_TargetServerList.split(\"\\\\|\").each{\n\t def String targetServerInst=it.trim()\n\t logger(\"INFO\",\"Lancement du backup Full pour l'instance ${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t \n\t \n\t \n\t \n\t \/\/ copy et formatage du fichier model istool permettant l'export isx\n\t \/\/  cp $VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory\/istool_backup_full.txt $VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory\/istool_backup_full_$Current_Server.txt\n\t logger(\"INFO\",\"Formatage du template istool permettant l'export isx : pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_full_${targetServerInst}.txt\",\"$VAR_DSTAGE_LogFileName\")\n\t def Map transco=[:]\n\t transco[\"[HOST]\"]=\"${targetServerInst}\"\n\t transco[\"[FICARC]\"]=\"${SBM_BckPackage}\"\n\t transco[\"[PROJET]\"]=\"${SBM_Projet}\"\n\t transco[\"[PWD]\"]=\"${SBM_Password}\"\n\t transco[\"[USER]\"]=\"${SBM_Login}\"\n\t \n\t \n\t def File tplIstoolBackup=new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_full.txt\")\n\t if(!tplIstoolBackup.isFile()){\n\t\t logger(\"ERROR\",\"Le template istools permettant l'export ISX n'ets pas accessible: ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_full.txt\",\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t \n\t def String srcTextData = tplIstoolBackup.text\n\t transco.each {key, value ->\n\t\t srcTextData=srcTextData.replace(key, value)\n\t }\n\t \n\t \/\/\n\t def destDataInputStream = new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_full_${targetServerInst}.txt\").newDataOutputStream()\n\t destDataInputStream << srcTextData\n\t destDataInputStream.close()\n\/\/\t logger(\"DEBUG\",\"Transco Result :pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_full_${targetServerInst}.txt:\\n-----------------\\n\"+ new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_full_${targetServerInst}.txt\").text+\"-----------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n\t \n\t \n\t \n\t \/\/ Creation du sous repertoire de backup ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\n\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\").isDirectory()){\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\")){\n\t\t\t logger(\"ERROR\",\"Impossible de creer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t else{\n\t\t\t logger(\"INFO\",\"Creation du sous repertoire bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\").mkdirs()){\n\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t }\n\t }\n\t else{\n\t\t \n\t\t logger(\"WARN\",\"Le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst} existe deja.Suppression et re creation de ce dernier...\",\"$VAR_DSTAGE_LogFileName\")\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\").deleteDir()){\n\t\t\t logger(\"ERROR\",\"Impossible de supprimer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\").mkdirs()){\n\t\t\t logger(\"ERROR\",\"Impossible de creer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t \n\t }\n\t \n\t \/\/ Reproduction de l'arborescense de sous repertoires contenu dans le package pour le sous repertoires de bck du target server $targetServerInst\n\t logger(\"INFO\",\"Reproduction de l'arborescense de sous repertoires contenu dans le package pour le sous repertoires de bck du target server $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t def baseAbsolutePath=new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\").getAbsolutePath()\n\t logger(\"DEBUG\",\"recursively each directory in : ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\",\"$VAR_DSTAGE_LogFileName\")\n\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\").eachFileRecurse(groovy.io.FileType.DIRECTORIES) {\n\t\t def String dirAbsolutePath=it.getAbsolutePath()\n\t\t def String dirRelativePath=dirAbsolutePath.replace(\"${baseAbsolutePath}${fileSep}\", \"\")\n\n\t\t logger(\"TRACE\",\"Creation de bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${dirRelativePath}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${dirRelativePath}\").mkdirs()){\n\t\t\t logger(\"ERROR\",\"Impossible de creer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${dirRelativePath}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t \n\t }\n\t \n\n\t \/\/ export ISX\n\t try{\n\t\t def command = \"\"\"cmd \/c ${VAR_CST_DSTAGE_IsTool_Path} -script ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_full_${targetServerInst}.txt\"\"\"\/\/ Create the String\n\t\t logger(\"INFO\",\"Export Partiel des ISX\",\"$VAR_DSTAGE_LogFileName\")\n\t\t logger(\"INFO\",\"cmd:${command}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t\t StringBuffer sbout = new StringBuffer()\n\t\t StringBuffer sberr = new StringBuffer()\n\t\t \/\/ lancement de la commandline dans un thread en background\n\t\t def process = command.execute(null, new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\")) \/\/ Call *execute* on the string\n\t\t \/\/ Rq: il est preferable d'utiliser des StringBuffer pour ne pas saturer les buffers de sortie du thread en chrage de la cmmande\n\t\t \/\/ et d'appeler la method consumeProcessOutputStream et consumeProcessErrorStream\n\t\t def tout = process.consumeProcessOutputStream(sbout)\n\t\t def terr = process.consumeProcessErrorStream(sberr)\n\t\t \/\/ attente de termainison du thread\n\t\t  process.waitFor()                               \/\/ Wait for the command to finish\n\t\t\/\/ Obtain status and output\n\t\t  def value = process.exitValue()\n\n\t\t  logger(\"TRACE\",\"return code: ${value}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t  if(value==0){\n\t\t\t   logger(\"TRACE\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t   logger(\"TRACE\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t   logger(\"INF0\",\"export ISX du $targetServerInst reussie\",\"$VAR_DSTAGE_LogFileName\")\n\t\t  }\n\t\t  else{\n\t\t\t  \n\t\t\t  logger(\"ERROR\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  logger(\"ERROR\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  logger(\"ERROR\",\"echec de l'export ISX du $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  System.exit(1)\n\t\t  }\n\t }\n\t catch (Exception e){\n\t\t logger(\"ERROR\",e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t\t  \n\n\t \n }\/\/ end loop for each TargetServer\n \n \/****\n  * STEP\n  * \n  ****\/\n \/\/  creation d'un fichier TAG marquant la presence d'un export FULL\n logger(\"INF0\",\" creation d'un fichier TAG marquant la presence d'un export FULL: tag${fileSep}${VAR_DSTAGE_backupfull_file}\",\"$VAR_DSTAGE_LogFileName\")\n \n def tagFile= new File(\"$VAR_DSTAGE_Workspace${fileSep}tag${fileSep}${VAR_DSTAGE_backupfull_file}\")\n if(!tagFile.isFile()){\n\t if(!tagFile.createNewFile()){\n\t\t logger(\"ERROR\",\"Impossible de creer le fichier TAG : $VAR_DSTAGE_Workspace${fileSep}tag${fileSep}${VAR_DSTAGE_backupfull_file} \",\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }else{\n\t \tlogger(\"INFO\",\"=> Creation du fichier TAG : tag${fileSep}${VAR_DSTAGE_backupfull_file} reussi \",\"$VAR_DSTAGE_LogFileName\")\n\t }\n }\n else{\n \tlogger(\"INFO\",\"Le fichier TAG : $VAR_DSTAGE_Workspace${fileSep}tag${fileSep}${VAR_DSTAGE_backupfull_file} existe deja \",\"$VAR_DSTAGE_LogFileName\")\n }\n \n \/\/ Fin du backup Full\n \n \n\n\/\/ Generation d'un package de backup\nlogger(\"INFO\",\"\\n------------\\nGeneration d'un package de backup tmp${fileSep}${SBM_BckPackage}.zip de bck${fileSep}\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\ndef String zipName=\"${VAR_DSTAGE_Workspace}${fileSep}tmp${fileSep}${SBM_BckPackage}.zip\"\ndef String basedir=\"${VAR_DSTAGE_Workspace}\"\ntry {\n\tant = new AntBuilder()\n\tant.zip(destfile: zipName, basedir:basedir,includes:\"bck\/**\")\n}\ncatch (Exception e) {\n\tlogger(\"ERROR\", \"Error durant la creation du package de backup tmp${fileSep}${SBM_BckPackage}:\\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\tSystem.exit(1)\n}\n"
                                    },
                                    "type": "plugin",
                                    "name": "CreatePackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-PutOneFileIntoRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "dmsys",
                                        "sshPassword": "pbe{8HVnZG9e7XIZWYVY42\/qbpbWkI9Q92L+}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{wVStSMdX4Ey8XIl6T3DhXJAbfWb107cE}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "localFileStr": "${p:InitStep\/VAR_DSTAGE_Workspace}\/tmp\/${p:SBM_BckPackage}.zip",
                                        "remoteFileStr": "\/products\/serena\/depot\/DATASTAGE\/${p:SBM_Folder}\/${p:SBM_BckPackage}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "UploadPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ --------------- InitStep\n\n\/\/chargement des libs\n${p:lib_logger}\n\n\/\/ pas de $LogFileName - le fichier peut ne pas exister\nfileSep=File.separator\n\n\/\/ input SBM\nlogger(\"TRACE\",\"Chargement des inputs SBM\")\n\n\n\n\/\/  Env. Cst \nlogger(\"TRACE\",\"Chargement constantes d'environnement\")\n\n\n\n\/\/ VARIABLES\nlogger(\"TRACE\",\"Chargement variables\")\n\/\/ definition des variables necessaires au calcul des OutProps\ndef VarL_DSTAGE_Fichiers_Manuels_Directory=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\"\ndef VarL_DSTAGE_Fichiers_Sortie=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\"\ndef VarL_DSTAGE_Fichiers_Temporaires=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\"\ndef VarL_DSTAGE_Fichiers_Stockage=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\"\ndef VarL_DSTAGE_Fichiers_Sql=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\"\ndef VarL_DSTAGE_Fichiers_Init=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\"\ndef VarL_DSTAGE_Fichiers_Master=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VarL_DSTAGE_Fichiers_TR=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR}\"\ndef VarL_DSTAGE_Fichiers_Validation=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VarL_DSTAGE_Workspace=\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\"\n\n\/\/ variable en OutProps\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Manuels_Directory\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Sortie\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Temporaires\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Stockage\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Sql\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Init\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Hashcode1\",\"DS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_hashcodes\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Instance_Temporaires1\",\"DS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_temporaires\")\noutProps.setProperty(\"VAR_DSTAGE_Compte_Rendu1\",\"Masters${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Compte Rendu\")\noutProps.setProperty(\"VAR_DSTAGE_Master1\",\"Masters${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\")\noutProps.setProperty(\"VAR_DSTAGE_TR\",\"Masters${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Validation1\",\"Masters${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\")\noutProps.setProperty(\"VAR_DSTAGE_backupfull_file\",\"backupfull_${p:SBM_BckPackage}.txt\")\noutProps.setProperty(\"VAR_DSTAGE_Nas_Target_Folder\",\"${VarL_DSTAGE_Fichiers_Manuels_Directory}|${VarL_DSTAGE_Fichiers_Sortie}|${VarL_DSTAGE_Fichiers_Temporaires}|${VarL_DSTAGE_Fichiers_Init}|${VarL_DSTAGE_Fichiers_Sql}|${VarL_DSTAGE_Fichiers_Stockage}\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Master\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_TR\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Validation\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\")\noutProps.setProperty(\"VAR_DSTAGE_M_Target_Folder\",\"${VarL_DSTAGE_Fichiers_Master}|${VarL_DSTAGE_Fichiers_TR}|${VarL_DSTAGE_Fichiers_Validation}\")\noutProps.setProperty(\"VAR_DSTAGE_Workspace\",\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\")\noutProps.setProperty(\"VAR_DSTAGE_LogFileName\",\"${VarL_DSTAGE_Workspace}${fileSep}${fileSep}log${fileSep}${fileSep}${p:SBM_Nom_Log}\")\n\t\n\/\/ liste des serveurs cibles\n\/\/ Combien de SBM_Target_Server necessaire? \nlogger(\"INFO\",\"Calcul dynamique de la liste des Targets serveurs\")\ndef VarL_DSTAGE_TargetServerTab=[]\nif(\"${p:SBM_Target_Server}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server} \")\n\t\n}\nif(\"${p:SBM_Target_Server2}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server2}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server2} \")\n\t\n}\nif(\"${p:SBM_Target_Server3}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server3}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server3} \")\n}\n\ndef VarL_DSTAGE_TargetServerList=\"\"\nVarL_DSTAGE_TargetServerTab.each{\n\tif(VarL_DSTAGE_TargetServerList == \"\"){ VarL_DSTAGE_TargetServerList=it.trim()}else{VarL_DSTAGE_TargetServerList=VarL_DSTAGE_TargetServerList+'|'+it.trim()}\n}\n\n\/\/ out Properties target server list\noutProps.setProperty(\"VAR_DSTAGE_TargetServerList\",\"${VarL_DSTAGE_TargetServerList}\")"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "c7feaeb45f2ccf028866316e1b56d0",
                                    "children": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "DEPLOY",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BL_PROJET_INITIAL_30.10.2013_15.21.51_9470",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Projet_Initial_WAP-6037_0.zip",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "DATASTAGE",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "BL_PROJET_INITIAL_30.10.2013_15.21.51_9470.txt",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "Projet_Initial",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BCK_PROJET_INITIAL_30.10.2013_15.21.51_9470.zip",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Password",
                                "label": "SBM_Password",
                                "type": "TEXT",
                                "value": "mypassword",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Login",
                                "label": "SBM_Login",
                                "type": "TEXT",
                                "value": "MyLogin",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server",
                                "label": "SBM_Target_Server",
                                "type": "TEXT",
                                "value": "Server1",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server2",
                                "label": "SBM_Target_Server2",
                                "type": "TEXT",
                                "value": "Server2",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server3",
                                "label": "SBM_Target_Server3",
                                "type": "TEXT",
                                "value": "Server3",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Environnement",
                                "label": "SBM_Environnement",
                                "type": "TEXT",
                                "value": "Recette",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "from": "BckPackageSCPtoDimSrv",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "BckPackageSCPtoDimSrv",
                                    "from": "DeployPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateWorSpace",
                                    "from": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadPackage",
                                    "from": "CreateWorSpace",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DeployPackage",
                                    "from": "DownloadPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "DownloadPackage",
                                    "x": 60.5,
                                    "y": 280
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "x": 105.5,
                                    "y": 560
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "x": -277.5,
                                    "y": 180
                                },
                                {
                                    "name": "DeployPackage",
                                    "x": -277.5,
                                    "y": 330
                                },
                                {
                                    "name": "InitStep",
                                    "x": -330,
                                    "y": 70
                                },
                                {
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "x": 70.5,
                                    "y": 126
                                },
                                {
                                    "name": "BckPackageSCPtoDimSrv",
                                    "x": 60.5,
                                    "y": 430
                                }
                            ],
                            "sizes": [
                                {
                                    "name": "DeployPackage",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "BckPackageSCPtoDimSrv",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "width": 80,
                                    "height": 50
                                },
                                {
                                    "name": "DownloadPackage",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "width": 150,
                                    "height": 40
                                },
                                {
                                    "name": "InitStep",
                                    "width": 260,
                                    "height": 60
                                }
                            ],
                            "type": "graph",
                            "name": "88d9ced1-4189-4864-93bb-89bb6331d9ce",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/chargement des libs\n${p:lib_logger}\n\nfileSep=File.separator\n\/\/ recuperation des variables inputs SBM\ndef SBM_Nom_Log=\"${p:SBM_Nom_Log}\"\ndef SBM_BckPackage=\"${p:SBM_BckPackage}\"\ndef SBM_Projet=\"${p:SBM_Projet}\"\ndef SBM_Password=\"${p:SBM_Password}\"\ndef SBM_Folder=\"${p:SBM_Folder}\"\ndef SBM_Package=\"${p:SBM_Package}\"\ndef SBM_BaselineId=\"${p:SBM_BaselineId}\"\ndef SBM_Login=\"${p:SBM_Login}\"\ndef SBM_Target_Server=\"${p:SBM_Target_Server}\"\ndef SBM_Target_Server2=\"${p:SBM_Target_Server2}\"\ndef SBM_Target_Server3=\"${p:SBM_Target_Server3}\"\ndef SBM_Environnement=\"${p:SBM_Environnement}\"\n\n\/\/ recuperation des constantes environnement\ndef VAR_CST_DSTAGE_tmp_directories=\"${p:environment\/CST_DSTAGE_tmp_directories}\"\ndef VAR_CST_DSTAGE_Root_Directory=\"${p:environment\/CST_DSTAGE_Root_Directory}\"\ndef VAR_CST_DSTAGE_ArboDisque_Files=\"${p:environment\/CST_DSTAGE_ArboDisque_Files}\"\ndef VAR_CST_DSTAGE_NAS_Folders=\"${p:environment\/CST_DSTAGE_NAS_Folders}\"\ndef VAR_CST_DSTAGE_M_Folders=\"${p:environment\/CST_DSTAGE_M_Folders}\"\ndef VAR_CST_DSTAGE_IsTool_Path=\"${p:environment\/CST_DSTAGE_IsTool_Path}\"\ndef VAR_CST_DSTAGE_Port_Domaine=\"${p:environment\/CST_DSTAGE_Port_Domaine}\"\ndef VAR_CST_DIM_SASDepot=\"${p:environment\/CST_DIM_SASDepot}\"\ndef VAR_CST_Nas_Projet_Path=\"${p:environment\/CST_Nas_Projet_Path}\"\ndef VAR_CST_DSTAGE_Environnement=\"${p:environment\/CST_DSTAGE_Environnement}\"\n\n\/\/ recuperation des variables environnement\ndef VAR_DSTAGE_TargetServerList=\"${p:InitStep\/VAR_DSTAGE_TargetServerList}\"\ndef VAR_DSTAGE_Fichiers_Manuels_Directory=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\"\ndef VAR_DSTAGE_Fichiers_Sortie=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\"\ndef VAR_DSTAGE_Fichiers_Temporaires=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\"\ndef VAR_DSTAGE_Fichiers_Stockage=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\"\ndef VAR_DSTAGE_Fichiers_Sql=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\"\ndef VAR_DSTAGE_Fichiers_Init=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\"\ndef VAR_DSTAGE_Fichiers_Hashcode1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_hashcodes\"\ndef VAR_DSTAGE_Fichiers_Instance_Temporaires1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_temporaires\"\ndef VAR_DSTAGE_Compte_Rendu1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Compte Rendu\"\ndef VAR_DSTAGE_Master1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_TR=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_backupfull_file=\"backupfull_${p:SBM_BckPackage}.txt\"\ndef VAR_DSTAGE_Fichiers_Master=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_Fichiers_TR=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_Workspace=\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\"\ndef VAR_DSTAGE_Nas_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_Nas_Target_Folder}\"\ndef VAR_DSTAGE_LogFileName=\"${p:InitStep\/VAR_DSTAGE_LogFileName}\"\ndef VAR_DSTAGE_M_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_M_Target_Folder}\"\n\n\/\/-------------Chargement des variables\n\/****************\n * STEP : Creation du workspace\n * ************\/\nfileSep=File.separator\n\ndef dPathWorkspaceFile=new File(\"${VAR_DSTAGE_Workspace}\")\n\nlogger(\"INFO\",\"\\n------------\\nGestion initial du workspace:${VAR_DSTAGE_Workspace} \\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\nif(dPathWorkspaceFile.isDirectory()){\n\tlogger(\"INFO\",\"Un workspace ($VAR_DSTAGE_Workspace) existe deja\",\"$VAR_DSTAGE_LogFileName\");\n\tif (new File(\"$VAR_DSTAGE_Workspace${fileSep}tag${fileSep}${VAR_DSTAGE_backupfull_file}\").isFile()){\n\t\tlogger(\"INFO\",\" Le full backfile (tag${fileSep}${VAR_DSTAGE_backupfull_file}) existe deja. Suppression partiel du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\t\tdef pathPkgDir=\"$VAR_DSTAGE_Workspace${fileSep}pkg\"\n\t\tdef dPathPkgDir=new File(\"$VAR_DSTAGE_Workspace${fileSep}pkg\")\n\t\t\n\t\tlogger(\"INFO\",\"Suppression de $pathPkgDir si le repertoire existe\",\"$VAR_DSTAGE_LogFileName\");\n\t\tif(dPathPkgDir.isDirectory()){\n\t\t\tif(!dPathPkgDir.deleteDir()){\n\t\t\t\tlogger(\"ERROR\",\" Impossible de supprimer le repertoire ${pathPkgDir}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tlogger(\"INFO\",\"Le full backfile tag${fileSep}${VAR_DSTAGE_backupfull_file}) n'existe pas. Suppression complet du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\t\tif(!dPathWorkspaceFile.deleteDir()){\n\t\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire ${VAR_DSTAGE_Workspace}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\tSystem.exit(1)\n\t\t}\n\t}\n}\n\nlogger(\"INFO\",\"Creation des sous repertoires du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\/\/ loop sur chaque sous directory a creer\nVAR_CST_DSTAGE_tmp_directories.split(\"\\\\|\").each{ it->\n\tdef String dirName=it.trim()\n\tif (dirName != \"\" ){\n\t\tFile dir=new File(\"${VAR_DSTAGE_Workspace}${fileSep}${dirName}\")\n\t\tif(!dir.isDirectory()){\n\t\t\tif(!dir.mkdirs()){\n\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le sous repertoire :\"+dir.getAbsolutePath(),\"$VAR_DSTAGE_LogFileName\");\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlogger(\"TRACE\",\"Creation du sous repertoire :${dirName}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlogger(\"INFO\",\"Le sous repertoire :${dirName} existe deja\",\"$VAR_DSTAGE_LogFileName\");\n\t\t}\n\t}\n}\n"
                                    },
                                    "type": "plugin",
                                    "name": "CreateWorSpace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "dmsys",
                                        "sshPassword": "pbe{1VRfcrRaGGX8eGNxbk1WUIPhhVEZrMSP}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{73XzWT1h0E9KbxVZak3za1b66t5e0DFC}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/Cst_DIM_SASDepot}\/${p:SBM_BaselineId}\/DATASTAGE\/${p:SBM_Folder}\/${p:SBM_Package}",
                                        "localDestFile": "${p:InitStep\/VAR_DSTAGE_Workspace}\/pkg\/${p:SBM_Package}"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/chargement des libs\n${p:lib_logger}\n\nfileSep=File.separator\n\/\/ recuperation des variables inputs SBM\ndef SBM_Nom_Log=\"${p:SBM_Nom_Log}\"\ndef SBM_BckPackage=\"${p:SBM_BckPackage}\"\ndef SBM_Projet=\"${p:SBM_Projet}\"\ndef SBM_Password=\"${p:SBM_Password}\"\ndef SBM_Folder=\"${p:SBM_Folder}\"\ndef SBM_Package=\"${p:SBM_Package}\"\ndef SBM_BaselineId=\"${p:SBM_BaselineId}\"\ndef SBM_Login=\"${p:SBM_Login}\"\ndef SBM_Target_Server=\"${p:SBM_Target_Server}\"\ndef SBM_Target_Server2=\"${p:SBM_Target_Server2}\"\ndef SBM_Target_Server3=\"${p:SBM_Target_Server3}\"\ndef SBM_Environnement=\"${p:SBM_Environnement}\"\n\n\/\/ recuperation des constantes environnement\ndef VAR_CST_DSTAGE_tmp_directories=\"${p:environment\/CST_DSTAGE_tmp_directories}\"\ndef VAR_CST_DSTAGE_Root_Directory=\"${p:environment\/CST_DSTAGE_Root_Directory}\"\ndef VAR_CST_DSTAGE_ArboDisque_Files=\"${p:environment\/CST_DSTAGE_ArboDisque_Files}\"\n\ndef VAR_CST_DSTAGE_NAS_Folders=\"${p:environment\/CST_DSTAGE_NAS_Folders}\"\ndef VAR_CST_DSTAGE_M_Folders=\"${p:environment\/CST_DSTAGE_M_Folders}\"\ndef VAR_CST_DSTAGE_IsTool_Path=\"${p:environment\/CST_DSTAGE_IsTool_Path}\"\ndef VAR_CST_DSTAGE_Port_Domaine=\"${p:environment\/CST_DSTAGE_Port_Domaine}\"\ndef VAR_CST_DIM_SASDepot=\"${p:environment\/CST_DIM_SASDepot}\"\ndef VAR_CST_Nas_Projet_Path=\"${p:environment\/CST_Nas_Projet_Path}\"\ndef VAR_CST_DSTAGE_Environnement=\"${p:environment\/CST_DSTAGE_Environnement}\"\n\n\/\/ recuperation des variables environnement\ndef VAR_DSTAGE_TargetServerList=\"${p:InitStep\/VAR_DSTAGE_TargetServerList}\"\ndef VAR_DSTAGE_Fichiers_Manuels_Directory=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\"\ndef VAR_DSTAGE_Fichiers_Sortie=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\"\ndef VAR_DSTAGE_Fichiers_Temporaires=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\"\ndef VAR_DSTAGE_Fichiers_Stockage=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\"\ndef VAR_DSTAGE_Fichiers_Sql=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\"\n\/\/ correction cla : ajout de VAR_DSTAGE_DS_Projet\ndef VAR_DSTAGE_DS_Projet=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}\"\ndef VAR_DSTAGE_Fichiers_Init=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\"\ndef VAR_DSTAGE_Fichiers_Hashcode1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_hashcodes\"\ndef VAR_DSTAGE_Fichiers_Instance_Temporaires1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_temporaires\"\ndef VAR_DSTAGE_Racine_Masters=\"Masters\\$${fileSep}${p:SBM_Projet}\"\ndef VAR_DSTAGE_Compte_Rendu1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Compte Rendu\"\ndef VAR_DSTAGE_Master1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_TR=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_backupfull_file=\"backupfull_${p:SBM_BckPackage}.txt\"\ndef VAR_DSTAGE_Fichiers_Master=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_Fichiers_TR=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_Workspace=\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\"\ndef VAR_DSTAGE_Nas_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_Nas_Target_Folder}\"\ndef VAR_DSTAGE_LogFileName=\"${p:InitStep\/VAR_DSTAGE_LogFileName}\"\ndef VAR_DSTAGE_M_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_M_Target_Folder}\"\n\n\/\/-------------Chargement des variables\n\ndef dstage_backup_files=[]\ndef  Dstage_Txt_Files=[]\ndef  dstage_ini_realfiles=[]\n\n\/****************\n  * STEP: decompression et Controle du package \n  ****************\/\n\nlogger(\"INFO\",\"\\n------------\\ndecompression du package\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n logger(\"INFO\",\"Extraction du fichier zip \\\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}\\\"\",\"$VAR_DSTAGE_LogFileName\")\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}\",\n\t\t\t dest:\"${VAR_DSTAGE_Workspace}${fileSep}pkg\",\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur dans l'extraction du fichier zip \\\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}\\\"\",\"$VAR_DSTAGE_LogFileName\")\n\t logger(\"ERROR\", e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t System.exit(1)\n }\n \n \/* modif cla : gestion des projets specifiques INT et REC *\/\n def Boolean flagRECorINT=false\n def recProjet=SBM_Projet\n if (SBM_Environnement==\"Recette\") {\n\tmyRegEx = \/(INT_|REC_)(.*)\/\n\tmatcher = ( SBM_Projet =~ myRegEx )\n\tif (matcher.matches()) {\n\t\tflagRECorINT=true\n\t\trecProjet=matcher[0][2]\n\t\tlogger(\"INFO\",\"Projet de recette ou integration - Nouveau nom : ${recProjet}\",\"$VAR_DSTAGE_LogFileName\")\n\t}\n }\n\n \/************************************************\n  *  Rappel Structure d'un package\n\t\tProjet_Initial_WAP-6037_0\/\n\t\tProjet_Initial_WAP-6037_0\/00-Dossier_Exploitation\n\t\tProjet_Initial_WAP-6037_0\/00-Dossier_Exploitation\/dossier dexploitation Master_Gcons_PDO.doc\n\t\tProjet_Initial_WAP-6037_0\/00-Dossier_Exploitation\/dossier dexploitation Master_Gcons_TEDI.doc\n\t\tProjet_Initial_WAP-6037_0\/00-Dossier_Exploitation\/Echainement Traitements referentiel SPI.xls\n\t\tProjet_Initial_WAP-6037_0\/00-Dossier_Exploitation\/Le referentiel SPI.doc\n\t\tProjet_Initial_WAP-6037_0\/01-Marche_a_suivre\n\t\tProjet_Initial_WAP-6037_0\/01-Marche_a_suivre\/Marche a suivre SERENA.docx\n\t\t\n\t\t\/\/ a copier sur le NAS dans l'arbo projet\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Documentation\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Documentation\/dossier d'exploitation Master_Gprox_TIGRE.doc\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_manuels\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_manuels\/Serena\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_manuels\/Serena\/Fichier_manuel.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_manuels\/Serena\/toto.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_sortie\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_sortie\/Serena\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_sortie\/Serena\/doc1.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_sortie\/Serena\/doc2.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_sortie\/Serena\/doc3.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_sortie\/Serena\/doc4.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_temporaires\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_temporaires\/Serena\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Fichiers_temporaires\/Serena\/Le super fichier de la mort qui tue.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Init\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Init\/ListeDesjobs_Serena_Mensuel.txt\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Init\/Serena.ini\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Sql\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Sql\/Serena\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Sql\/Serena\/Script qui dechire sa race.sql\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Stockage\n\t\tProjet_Initial_WAP-6037_0\/02-NAS\/Stockage\/Serena\n\t\t\n\t\t\/\/ a copier sur les instances (3 servers) dans l'arborescence projet) s: est un disque local\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\/fichiers_hashcodes\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\/fichiers_hashcodes\/Serena\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\/fichiers_hashcodes\/Serena\/toto\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\/fichiers_temporaires\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\/fichiers_temporaires\/Serena\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\/fichiers_temporaires\/Serena\/Fichier_ephemere.txt\n\t\tProjet_Initial_WAP-6037_0\/03-ArboDisques-S\/fichiers_temporaires\/Serena\/titi.txt\n\t\t\n\t\t\/\/ a copier sur les instances (3 servers) dans l'arborescence projet) M: est un disque local\n\t\t\/\/ Yop: il faut reproduire l'arborescence\n\t\t\/\/ pas besoin de sauvegarde des fichiers mais uniquement de l'arborescence\n\t\tProjet_Initial_WAP-6037_0\/05-ArboDisques-M\n\t\tProjet_Initial_WAP-6037_0\/05-ArboDisques-M\/Compte Rendu\n\t\tProjet_Initial_WAP-6037_0\/05-ArboDisques-M\/Compte Rendu\/Serena\n\t\tProjet_Initial_WAP-6037_0\/05-ArboDisques-M\/Suivi\n\t\tProjet_Initial_WAP-6037_0\/05-ArboDisques-M\/Suivi\/Master\n\t\tProjet_Initial_WAP-6037_0\/05-ArboDisques-M\/Suivi\/TR\n\t\tProjet_Initial_WAP-6037_0\/05-ArboDisques-M\/Suivi\/Validation\n\t\t\n\t\t\/\/ pour le backup et l'import datastage\n\t\tProjet_Initial_WAP-6037_0\/istool.log\n\t\tProjet_Initial_WAP-6037_0\/istool_backup.txt\n\t\tProjet_Initial_WAP-6037_0\/istool_backup_full.txt\n\t\tProjet_Initial_WAP-6037_0\/Projet_Initial_REF_INI.xml\n\t\tProjet_Initial_WAP-6037_0\/Projet_Initial_WAP-6037_0.isx\n*************************************************************\/\n  \/\/ Apres decompression on a \n  \/\/ d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\Projet_Initial_WAP-6037_0\n \/\/  d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\Projet_Initial_WAP-6037_0\\00-Dossier_Exploitation\n \/\/  d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\Projet_Initial_WAP-6037_0\\contenu du package\n \/\/  \n \n\/\/  ...\n \/\/ Recuperation du Parent-SubDirectory\n \/\/ dans l'exemple on cherche d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\ le repertoire pkgParentSubDirectory=Projet_Initial_WAP-6037_0\n def String pkgParentSubDirectory=\"\"\n try{\n\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg\").eachDir {\n\t\t def File sdir=it\n\t\t pkgParentSubDirectory=sdir.getName()\n\t\t \/\/ !!!! Parent-SubDirectory trouve : on force l'arret de la boucle!!!!\n\t\t throw new Exception(\"Parent-SubDirectory trouve\")\n\t }\n\t \n }\n catch(Exception e){\n\t \/\/ Parent-SubDirectory trouve\n\t logger(\"DEBUG\",\"pkgParentSubDirectory=$pkgParentSubDirectory\",\"$VAR_DSTAGE_LogFileName\")\n }\n if(pkgParentSubDirectory==\"\"){\n\t logger(\"ERROR\",\"Impossible de trouver un sous repertoire dans${VAR_DSTAGE_Workspace}${fileSep}pkg\",\"$VAR_DSTAGE_LogFileName\")\n\t System.exit(1)\n }\n\n \n \/\/ Force la creation des sous repertoires obligatoires\n logger(\"INFO\",\"Force la creation des sous repertoires obligatoires sous pkg${fileSep}${pkgParentSubDirectory}\",\"$VAR_DSTAGE_LogFileName\")\n def Boolean pkgValidity=true\n VAR_CST_DSTAGE_ArboDisque_Files.split(\"\\\\|\").each{\n\t def String sdir=it.trim()\n\t def File mandatorySubDir=new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${sdir}\")\n\t if(!mandatorySubDir.isDirectory()){\n\t\t if(! mandatorySubDir.mkdirs()){\n\t\t\t logger(\"ERROR\",\"Impossible de creer le sous repertoire \"+mandatorySubDir.getAbsolutePath() +\"\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t } \n\t\t logger(\"TRACE\",\"Creation de pkg${fileSep}${pkgParentSubDirectory}${fileSep}${sdir} \",\"$VAR_DSTAGE_LogFileName\")\n\t }\n\t else{\n\t\t logger(\"TRACE\",\"Le sous repertoire pkg${fileSep}${pkgParentSubDirectory}${fileSep}${sdir}  existe deja. Rien a faire...\",\"$VAR_DSTAGE_LogFileName\")\n\t }\n }\n \/****************\n  * STEP: decompression et Controle du package\n  ****************\/\n \n \n \n \n \n \n \n \n \/****************\n  * STEP: Backup Partiel\n  ****************\/\n \/\/VARIABLES\n fileSep=File.separator\n \n \n \n \n logger(\"INFO\",\"\\n------------\\nLancement du backup Partiel\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n VAR_DSTAGE_TargetServerList.split(\"\\\\|\").each{\n\t def String targetServerInst=it.trim()\n\t \n\t \/\/ Debut Step Creation rep de backup\n\t \/\/ Creation du sous repertoire de backup ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${targetServerInst}\n\t \/\/ ici dans l'exemple for each Server_target {mkdir -p  d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\bck\\${targetServerInst} }\n\t \n\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\").isDirectory()){\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\")){\n\t\t\t logger(\"ERROR\",\"Impossible de creer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t else{\n\t\t\t logger(\"INFO\",\"Creation du sous repertoire bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t }\n\t }\n\t else{\n\t\t \n\t\t logger(\"WARN\",\"Le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst} existe deja.Suppression et re creation de ce dernier...\",\"$VAR_DSTAGE_LogFileName\")\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\").deleteDir()){\n\t\t\t logger(\"ERROR\",\"Impossible de supprimer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\").mkdirs()){\n\t\t\t logger(\"ERROR\",\"Impossible de creer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t \n\t }\n\t \n\t \/\/ Reproduction de l'arborescense de sous repertoires contenu dans le package pour le sous repertoires de bck du target server $targetServerInst\n\t \/\/ ex: reproduction des sous rep de d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\Projet_Initial_WAP-6037_0\\ d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\bck\\${targetServerInst}\n\t logger(\"INFO\",\"Reproduction de l'arborescense de sous repertoires contenu dans le package pour le sous repertoires de bck du target server $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t def baseAbsolutePath=new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\").getAbsolutePath()\n\t \n\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\").eachFileRecurse(groovy.io.FileType.DIRECTORIES) {\n\t\t def String dirAbsolutePath=it.getAbsolutePath()\n\t\t def String dirRelativePath=dirAbsolutePath.replace(\"${baseAbsolutePath}${fileSep}\", \"\")\n\n\t\t logger(\"TRACE\",\"Creation de bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${dirRelativePath}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${dirRelativePath}\").mkdirs()){\n\t\t\t logger(\"ERROR\",\"Impossible de creer le sous repertoire ${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${dirRelativePath}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t \n\t }\n\t \/\/ Fin Step Creation rep de backup\n\t \n\t \/\/ Debut Step Backup des fichiers sur M\n\t \/\/ def CST_DSTAGE_M_Folders=\"05-ArboDisques-M\\\\Suivi\\\\Master|05-ArboDisques-M\\\\Suivi\\\\TR|05-ArboDisques-M\\\\Suivi\\\\Validation\"\n     \/\/ VAR_DSTAGE_M_Target_Folder=\"${VAR_DSTAGE_Fichiers_Master}|${VAR_DSTAGE_Fichiers_TR}|${VAR_DSTAGE_Fichiers_Validation}\"\n\t logger(\"INFO\",\"Backup des fichiers sur M - DEBUT\",\"$VAR_DSTAGE_LogFileName\")\n\t def DSTAGE_M_FoldersTab=VAR_CST_DSTAGE_M_Folders.split(\"\\\\|\")\n\t def DSTAGE_M_Target_FolderTab=VAR_DSTAGE_M_Target_Folder.split(\"\\\\|\")\n\n\t def int counter\n\t for (counter=0;counter<DSTAGE_M_FoldersTab.size();counter++){\n\t\t def String Dstage_Folder=DSTAGE_M_FoldersTab[counter]\n\t\t def String Dstage_M_Folder=DSTAGE_M_Target_FolderTab[counter]\n\t\t \n\t\t if(new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\").exists()){\n\t\t logger(\"INFO\",\"Recherche de la liste des fichiers (path relatif) a sauvegarder depuis pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t dstage_backup_files=[]\n\t\t\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\").eachFile() {\n\t\t\t\t dstage_backup_files.add(it.getName())\n\t\t\t\t \/\/println \"dirRelativePath=\"+it.getName()\n\t\t\t }\n\t\t }\n\t\t else {\n\t\t\tlogger(\"WARN\",\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder} n existe pas\",\"$VAR_DSTAGE_LogFileName\")\n\t\t }\n\t\t if (dstage_backup_files){\n\t\t\t logger(\"TRACE\",\"Liste dstage_backup_files \"+dstage_backup_files,\"$VAR_DSTAGE_LogFileName\")\n\t\t\t \n\t\t\t \/\/ Backup des fichiers de l'instance ${targetServerInst}\n\t\t\t \/\/logger(\"INFO\",\"Backup des fichiers de l'instance ${targetServerInst} \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t dstage_backup_files.each{ backupFile->\n\t\t\t\t def sourceTarget=\"${Dstage_M_Folder}${fileSep}${backupFile}\"\n\t\t\t\t def String destTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}${filesep}\"\n\t\t\t\t logger(\"INFO\",\"Backup de ${Dstage_M_Folder}${fileSep}${backupFile} dans bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t \/\/ cas ou ${sourceTarget} existe et est un repertoire\n\t\t\t\t if(new File(\"${sourceTarget}\").isDirectory()){\n\t\t\t\t\t logger(\"TRACE\",\"cp -r ${sourceTarget} ${destTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t\t try {\n\t\t\t\t\t\t\t  ant.copy(verbose: \"true\", todir: \"${destTarget}\", overwrite:'true',includeEmptyDirs:'true') {\n\t\t\t\t\t\t\t\t fileset(dir: \"${sourceTarget}\"){ include(name:\"**\/*\") }\n\t\t\t\t\t\t\t }\n\t\t\t\t\t }\n\t\t\t\t\t catch (Exception e) {\n\t\t\t\t\t\t logger(\"ERROR\",\"cp -rf ${sourceTarget} ${destTarget} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t System.exit(1)\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t \/\/ cas ou ${sourceTarget} existe et est un fichier\n\t\t\t\t else if(new File(\"${sourceTarget}\").isFile()){\n\t\t\t\t\t def sourceTargetBasename= new File(\"${sourceTarget}\").getName()\n\t\t\t\t\t logger(\"TRACE\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t\t try {\n\t\t\t\t\t\t\t  ant.copy(verbose: \"true\",file:\"${sourceTarget}\", tofile: \"${destTarget}${fileSep}${sourceTargetBasename}\", overwrite:'true')\n\t\t\t\t\t\t \n\t\t\t\t\t }\n\t\t\t\t\t catch (Exception e) {\n\t\t\t\t\t\t logger(\"ERROR\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t System.exit(1)\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else{\n\t\t\t\t\t logger(\"TRACE\",\"le fichier ou repertoire ${sourceTarget} n'existe pas. Pas de backup necessaire\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t }\n\t\t\t }\n\t\t }\n\t\t else {\n\t\t\tlogger(\"TRACE\",\"Liste dstage_backup_files \"+dstage_backup_files,\"$VAR_DSTAGE_LogFileName\")\n\t\t }\n\t }\n\t \n\t logger(\"INFO\",\"Backup des fichiers sur M - FIN\",\"$VAR_DSTAGE_LogFileName\")\n\t logger(\"INFO\",\"-------------------------------\",\"$VAR_DSTAGE_LogFileName\")\n\t \/\/ Fin Step Backup des fichiers sur M\n\t \n\t \/\/ Debut Step Backup des fichiers sur NAS\n\t \/\/ Rappel:\n\t \/\/ CST_DSTAGE_NAS_Folders=\"02-NAS\/Fichiers_manuels|02-NAS\/Fichiers_sortie|02-NAS\/Fichiers_temporaires|02-NAS\/Init|02-NAS\/Sql|02-NAS\/Stockage\"\n\t \/\/ VAR_DSTAGE_Nas_Target_Folder=\"${VAR_DSTAGE_Fichiers_Manuels_Directory}|${VAR_DSTAGE_Fichiers_Sortie}|${VAR_DSTAGE_Fichiers_Temporaires}|${VAR_DSTAGE_Fichiers_Init}|${VAR_DSTAGE_Fichiers_Sql}|${VAR_DSTAGE_Fichiers_Stockage}\"\n\t \/\/ VAR_DSTAGE_Fichiers_Manuels_Directory=\"${Cst_Nas_Projet_Path}${fileSep}${SBM_Projet}${fileSep}Fichiers_manuels\"\n\t \/\/ VAR_DSTAGE_Fichiers_Sortie=\"${Cst_Nas_Projet_Path}${SBM_Projet}${fileSep}Fichiers_sortie\"\n\t \/\/ VAR_DSTAGE_Fichiers_Temporaires=\"${Cst_Nas_Projet_Path}${fileSep}${SBM_Projet}${fileSep}Fichiers_temporaires\"\n\t \/\/ VAR_DSTAGE_Fichiers_Stockage=\"${Cst_Nas_Projet_Path}${fileSep}${SBM_Projet}${fileSep}Stockage\"\n\t \/\/ VAR_DSTAGE_Fichiers_Sql=\"${Cst_Nas_Projet_Path}${fileSep}${SBM_Projet}${fileSep}SQL\"\n\t \/\/ VAR_DSTAGE_Fichiers_Init=\"${Cst_Nas_Projet_Path}${fileSep}${SBM_Projet}${fileSep}Init\"\n\t \n\t logger(\"INFO\",\"Backup des fichiers sur NAS - DEBUT\",\"$VAR_DSTAGE_LogFileName\")\n\t def String[] DSTAGE_NAS_FoldersTab\n\t DSTAGE_NAS_FoldersTab=VAR_CST_DSTAGE_NAS_Folders.split(\"\\\\|\")\n\t def String [] VAR_DSTAGE_Nas_Target_FolderTab\n\t VAR_DSTAGE_Nas_Target_FolderTab=VAR_DSTAGE_Nas_Target_Folder.split(\"\\\\|\")\n\t \n\t \n\t for (counter=0;counter<DSTAGE_NAS_FoldersTab.size();counter++){\n\t\t def String Dstage_Folder=DSTAGE_NAS_FoldersTab[counter]\n\t\t def String Dstage_NAS_Folder=VAR_DSTAGE_Nas_Target_FolderTab[counter]\n\t\t \/\/println \"[D] Dstage_Folder=$Dstage_Folder\"\n\t\t \/\/println \"[D] Dstage_NAS_Folder=$Dstage_NAS_Folder\"\n\t\t \n\t\t \/\/ Recherche des fichiers a Backuper\n\t\t if(new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\").exists()){\n\t\t\t logger(\"INFO\",\"Recherche de la liste des fichiers (path relatif) a sauvegarder depuis pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t dstage_backup_files=[]\n\t\t\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\").eachFile() {\n\t\t\t\t dstage_backup_files.add(it.getName())\n\t\t\t\t \/\/println \"dirRelativePath=\"+it.getName()\n\t\t\t }\n\t\t}\n\t\telse {\n\t\t\tlogger(\"WARN\",\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder} n existe pas\",\"$VAR_DSTAGE_LogFileName\")\n\t\t}\n\n\t\t if(dstage_backup_files){\n\t\t \n\t\t\t\tlogger(\"TRACE\",\"Liste dstage_backup_files \"+dstage_backup_files,\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t\t\t\t\/\/ Backup des fichiers de l'instance ${targetServerInst}\n\t\t\t\t\/\/logger(\"INFO\",\"Backup des fichiers de l'instance ${targetServerInst} \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\n\t\t\t dstage_backup_files.each{ backupFile->\n\t\t\t\t def sourceTarget=\"${Dstage_NAS_Folder}${fileSep}${backupFile}\"\n\t\t\t\t def String destTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\"\n\t\t\t\t logger(\"INFO\",\"Backup de ${Dstage_NAS_Folder}${fileSep}${backupFile} dans bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t \/\/ cas ou ${sourceTarget} existe et est un repertoire\n\t\t\t\t if(new File(\"${sourceTarget}\").isDirectory()){\n\t\t\t\t\t logger(\"TRACE\",\"cp -r ${sourceTarget} ${destTarget}${fileSep}${backupFile}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t\t try {\n\/\/\tCorrection cla\n\/\/\t\t\t\t\t\t  ant.copy(verbose: \"true\", todir: \"${destTarget}\", overwrite:'true',includeEmptyDirs:'true') {\n\t\t\t\t\t\t\t  ant.copy(verbose: \"true\", todir: \"${destTarget}${fileSep}${backupFile}\", overwrite:'true',includeEmptyDirs:'true') {\n\t\t\t\t\t\t\t\t fileset(dir: \"${sourceTarget}\"){ include(name:\"**\/*\") }\n\t\t\t\t\t\t\t }\n\t\t\t\t\t }\n\t\t\t\t\t catch (Exception e) {\n\t\t\t\t\t\t logger(\"ERROR\",\"cp -rf ${sourceTarget} ${destTarget}${fileSep}${backupFile} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t System.exit(1)\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t \/\/ cas ou ${sourceTarget} existe et est un fichier\n\t\t\t\t else if(new File(\"${sourceTarget}\").isFile()){\n\/\/ correction cla\n\/\/\t\t\t\t\t def sourceTargetBasename= new File (\"sourceTarget\").getName()\n\t\t\t\t\t def sourceTargetBasename= new File (\"${sourceTarget}\").getName()\n\t\t\t\t\t logger(\"TRACE\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t\t try {\n\t\t\t\t\t\t\t  ant.copy(verbose: \"true\",file:\"${sourceTarget}\", tofile: \"${destTarget}${fileSep}${sourceTargetBasename}\", overwrite:'true')\n\t\t\t\t\t\t \n\t\t\t\t\t }\n\t\t\t\t\t catch (Exception e) {\n\t\t\t\t\t\t logger(\"ERROR\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t System.exit(1)\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else{\n\t\t\t\t\t logger(\"TRACE\",\"le fichier ou repertoire ${sourceTarget} n'existe pas. Pas de backup necessaire\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t } \n\t\t\t }\n\t\t}\n\t\telse {\n\t\t\tlogger(\"TRACE\",\"Liste dstage_backup_files \"+dstage_backup_files,\"$VAR_DSTAGE_LogFileName\")\n\t\t}\n\t\t \n\t }\n\t logger(\"INFO\",\"Backup des fichiers sur NAS - FIN\",\"$VAR_DSTAGE_LogFileName\")\n\t logger(\"INFO\",\"---------------------------------\",\"$VAR_DSTAGE_LogFileName\")\n\t \n\t \n\t \/\/ Test Presence dans le package de ...\/pkg\/$pkgParentSubDirectory\/*.isx\n\t  def pathIsxFile=\"\"\n\ttry{\n\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\").eachFile  {\n\t\t def File f=it\n\t\t if(f.isFile() && f.getName() =~ \"^.*\\\\.isx\\$\"){\n\t\t\t pathIsxFile=f.getName()\n\t\t\tlogger(\"INFO\",\"Au moins un isx trouve : ${pathIsxFile}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t \/\/arret de la loop\n\t\t\t throw new Exception(\"ISX trouve\")\n\t\t }  \n\t }\n\t}\n\t catch(Exception e){\n\t\t \/\/ iSX trouve\n\t }\n\t if(pathIsxFile==\"\"){\n\t\t \/\/ en cas de non presence d'un ISX, il est inutil de backup le projet via export ISX, car ce dernier ne sera donc pas relivre\n\t\t logger(\"WARN\",\"Aucun ISX n'a pas ete localise dans ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\\n=> Pas de lancement de backup du projet via export ISX necessaire\",\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t }\n\t else{\n\t\t \/\/ en cas de presence d'un ISX, on lance la procedure de backup ISX dans le cas ou le projet aurait deja ete deploye prealablement\n\t\t logger(\"INFO\",\"L'ISX a impoter a ete identifie:  pkg${fileSep}${pkgParentSubDirectory}${fileSep}$pathIsxFile\\n=> Lancement du Backup ISX du projet via un export ISX\",\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t \n\t \n\t\t \/\/ copy et formatage du fichier model istool permettant l'export isx\n\t\t \/\/  cp $VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory\/istool_backup.txt $VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory\/istool_backup_$Current_Server.txt\n\t\t logger(\"INFO\",\"Formatage du template istool permettant l'export isx : pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_${targetServerInst}.txt\",\"$VAR_DSTAGE_LogFileName\")\n\t\t def Map transco=[:]\n\t\t transco[\"[HOST]\"]=\"${targetServerInst}\"\n\t\t transco[\"[FICARC]\"]=\"${SBM_BckPackage}\"  \/\/ precise le nom de l'export ISX dans le cadre du backup d'un projet de meme nom deja existant\n\t\t transco[\"[PROJET]\"]=\"${SBM_Projet}\"\n\t\t transco[\"[PWD]\"]=\"${SBM_Password}\"\n\t\t transco[\"[USER]\"]=\"${SBM_Login}\"\n\t\t \n\t\t \n\t\t def File tplIstoolBackup=new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup.txt\")\n\t\t \/\/ test l'existance du template ...\/pkg\/$pkgParentSubDirectory\/istool_backup.txt\n\t\t if(!tplIstoolBackup.isFile()){\n\t\t\t logger(\"ERROR\",\"Le template istools permettant l'export ISX n'ets pas accessible: ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup.txt\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t \/\/ chargement dans la  variable srcTextData du contenu du fichier template ...\/pkg\/$pkgParentSubDirectory\/istool_backup.txt\n\t\t def String srcTextData = tplIstoolBackup.text\n\t\t \n\t\t \/\/ pour chaque couple token,value de la Map, on applique un replace dans la variable srcTextData sur elle meme\n\t\t transco.each {key, value -> \n\t\t\t srcTextData=srcTextData.replace(key, value)\n\t\t }\n\t\t \n\t\t \/\/ Generation du fichier istool_backup_${targetServerInst}.txt specifique a cette targetServerInst\n\t     def destDataInputStream = new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_${targetServerInst}.txt\").newDataOutputStream()\n\t\t destDataInputStream << srcTextData\n\t\t destDataInputStream.close()\n\t\t \n\t\t logger(\"DEBUG\",\"Transco Result :pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_${targetServerInst}.txt:\\n-----------------\\n\"+ new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_${targetServerInst}.txt\").text+\"-----------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t\t \/\/ Test si un backup Full n'a pas deja ete genere\n\t\t if (!new File(\"$VAR_DSTAGE_Workspace${fileSep}tag${fileSep}${VAR_DSTAGE_backupfull_file}\").isFile()){\n\t\t\t \/\/ cas ou il n' y a pas de backup Full\n\t\t\t try{\n\t\t\t\t def command = \"\"\"cmd \/c ${CST_DSTAGE_IsTool_Path} -script ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}istool_backup_${targetServerInst}.txt\"\"\"\/\/ Create the String\n\t\t\t\t logger(\"INFO\",\"Export Partiel des ISX\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t \n\t\t\t\t StringBuffer sbout = new StringBuffer()\n\t\t\t\t StringBuffer sberr = new StringBuffer()\n\t\t\t\t \/\/ lancement de la commandline dans un thread en background\n\t\t\t\t def process = command.execute(null, new File(\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}${targetServerInst}\")) \/\/ Call *execute* on the string\n\t\t\t\t \/\/ Rq: il est preferable d'utiliser des StringBuffer pour ne pas saturer les buffers de sortie du thread en chrage de la cmmande\n\t\t\t\t \/\/ et d'appeler la method consumeProcessOutputStream et consumeProcessErrorStream\n\t\t\t\t def tout = process.consumeProcessOutputStream(sbout)\n\t\t\t\t def terr = process.consumeProcessErrorStream(sberr)\n\t\t\t\t \/\/ attente de termainison du thread\n\t\t\t\t  process.waitFor()                               \/\/ Wait for the command to finish\n\t\t\t\t\/\/ Obtain status and output\n\t\t\t\t  def value = process.exitValue()\n\t\t\n\t\t\t\t  logger(\"TRACE\",\"return code: ${value}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  if(value==0){\n\t\t\t\t\t   logger(\"TRACE\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t   logger(\"TRACE\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t   logger(\"INF0\",\"backup partiel sur $targetServerInst reussie\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  }\n\t\t\t\t  else{\n\t\t\t\t\t  \n\t\t\t\t\t  logger(\"ERROR\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t  logger(\"ERROR\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t  logger(\"ERROR\",\"echec du backup partiel sur $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t  System.exit(1)\n\t\t\t\t  }\n\t\t\t }\n\t\t\t catch (Exception e){\n\t\t\t\t logger(\"ERROR\",e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t System.exit(1)\n\t\t\t }\n\t\t\t  \n\t\t\t\n\t\n\t\t }\n\t\t else{\n\t\t\t logger(\"INFO\",\"Un Backup Full tag${fileSep}${VAR_DSTAGE_backupfull_file}) existe, un export des ISX est inutile, car deja fait...\",\"$VAR_DSTAGE_LogFileName\")\n\t\t }\n\t }\n\t \n\t \/\/\n\t \n }\/\/ end loop for each TargetServer\n logger(\"INFO\",\"-----Fin du backup Partiel----------\\n\\n\",\"$VAR_DSTAGE_LogFileName\")\n \/\/ Fin du backup Partiel\n \n \n \/****************\n  * STEP: Backup Partiel\n  ****************\/\n \n \n \n \n \n \/***************************\n  * STEP\n  ***************************\/\n \n logger(\"INFO\",\"\\n------------\\nDeploiement de l'ISX \\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n \n \/\/ recherche du fichier ISX a importer\n logger(\"INFO\",\"recherche du fichier ISX a importer\",\"$VAR_DSTAGE_LogFileName\")\n \/\/$Dstage_Job=$('find -name $VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory *.isx')\n def pathIsxFile=\"\"\n try{\n\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\").eachFile  {\n\t\t def File f=it\n\t\t if(f.isFile() && f.getName() =~ \"^.*\\\\.isx\\$\"){\n\t\t\t pathIsxFile=f.getName()\n\t\t\t \/\/arret de la loop\n\t\t\t throw new Exception(\"ISX trouve\")\n\t\t }  \n\t}\n }\n catch(Exception e){\n\t \/\/ iSX trouve\n }\n if(pathIsxFile==\"\"){\n\t logger(\"ERROR\",\"Aucun ISX n'a ete localise ds ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}\",\"$VAR_DSTAGE_LogFileName\")\n }\n else{\n\t logger(\"INFO\",\"L'ISX a importer a ete identifie:  pkg${fileSep}${pkgParentSubDirectory}${fileSep}$pathIsxFile\",\"$VAR_DSTAGE_LogFileName\")\n\n\t\/\/ modif cla : traitement de l'isx pour les projets REC et INT\n\tif (flagRECorINT) {\n\t\tlogger(\"INFO\",\"Debut modification du fichier isx pour environnement INT ou REC\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\/\/ creation repertoire temporaire d'unzip\n\t\tdef unzipDir=new File(\"D:${fileSep}Temp${fileSep}isx_repl_${SBM_Projet}\")\n\t\tunzipDir.deleteDir()\n\t\tunzipDir.mkdirs()\n\n\t\t\n\t\t\/\/unzip isx file\n\t\ttry{\n\t\t\tdef ant = new AntBuilder()\/\/ create an antbuilder\n \n\t\t\tant.unzip(  src:\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${pkgParentSubDirectory}.isx\",\n\t\t\t\tdest:\"${unzipDir}\",\n\t\t\t\toverwrite:\"yes\"\n\t\t\t)\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace()\n\t\t\tlogger(\"ERROR\",\"Erreur dans l'extraction du fichier zip ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}.isx\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\tlogger(\"ERROR\", e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\tSystem.exit(1)\n\t\t}\n\t\n\t\tlogger(\"INFO\",\"Debut modification des jobs\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\/\/ boucle sur job\n\t\tnew File(\"${unzipDir}\").traverse(\n\t\t\tnameFilter   : ~\/.*\\.sjb\/\n\t\t) {it ->\n\t\t\tlogger(\"INFO\",\"Modification du job ${it}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\/\/ replace \\\\recProjet par \\\\projet\n\t\t\tfileText = it.text;\n\t\t\tfileText = fileText.replaceAll(\"\\\\\\\\${recProjet}\", \"\\\\\\\\${SBM_Projet}\")\n\t\t\tit.write(fileText);\n\t\t}\n\t\t\n\t\t\/\/ delete zip file\n\t\ttry{\n\t\t\tdef ant = new AntBuilder()\/\/ create an antbuilder\n \n\t\t\tant.zip(destfile: \"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${pkgParentSubDirectory}.isx\", basedir:\"${unzipDir}\",includes:\"*\/**\")\n\t\t\tlogger(\"INFO\",\"Recreation du zip pour environnement INT ou REC\",\"$VAR_DSTAGE_LogFileName\")\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace()\n\t\t\tlogger(\"ERROR\",\"Erreur dans la creation du fichier zip ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_Package}.isx\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\tlogger(\"ERROR\", e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\tSystem.exit(1)\n\t\t}\n\n\t\t\/\/ suppression du repertoire temporaire d'unzip\n\t\tunzipDir.deleteDir()\n\n\t\tlogger(\"INFO\",\"Fin modification du fichier isx pour environnement INT ou REC\",\"$VAR_DSTAGE_LogFileName\")\n\t}\n\t\n\t\/\/ Deploiement\n\tlogger(\"INFO\",\"Lancement du Deploiement\",\"$VAR_DSTAGE_LogFileName\")\n\t \n\tlogger(\"INFO\",\"Deploiement de ISX sur chacune des instances\",\"$VAR_DSTAGE_LogFileName\")\n\tVAR_DSTAGE_TargetServerList.split(\"\\\\|\").each{\n\t\t def String targetServerInst=it.trim()\n\t\t logger(\"INFO\",\"Import ISX et compilation des JOBS sur instance $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t\t try{\n\t\t\t logger(\"INFO\",\"Import ISX sur ${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t command=\"\"\"cmd \/c ${VAR_CST_DSTAGE_IsTool_Path} import -domain ${targetServerInst}:${VAR_CST_DSTAGE_Port_Domaine} -username ${p:SBM_Login} -password ${p:SBM_Password} -verbose -archive \"${VAR_DSTAGE_Workspace}\/pkg\/${pkgParentSubDirectory}\/${pathIsxFile}\" -replace -ds '\"${targetServerInst}:31538\/${SBM_Projet}\"'\"\"\"\t \n\t\t\t StringBuffer sbout = new StringBuffer()\n\t\t\t StringBuffer sberr = new StringBuffer()\n\t\t\t def process = command.execute(null, new File(\"${VAR_DSTAGE_Workspace}\/pkg\/${pkgParentSubDirectory}\")) \/\/ Call *execute* on the string\n\t\t\t def tout = process.consumeProcessOutputStream(sbout)\n\t\t\t def terr = process.consumeProcessErrorStream(sberr)\n\t\t\t \n\t\t\t  process.waitFor()                               \/\/ Wait for the command to finish\n\t\t\t\/\/ Obtain status and output\n\t\t\t  def value = process.exitValue()\n\t\n\t\t\t  logger(\"TRACE\",\"return code: ${value}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  if(value==0){\n\t\t\t\t  logger(\"TRACE\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"TRACE\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"INF0\",\"import ISX ${pathIsxFile} sur $targetServerInst reussie\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  }\n\t\t\t  else{\n\t\t\t\t  \n\t\t\t\t  logger(\"ERROR\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"ERROR\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"ERROR\",\"echec l'import ISX ${pathIsxFile} sur $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  System.exit(1)\n\t\t\t  }\n\t\t }\n\t\t catch (Exception e){\n\t\t\t logger(\"ERROR\",e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t \n\t\t \/\/ compilation job non compiles\n\t\t try{\n\t\t\t logger(\"INFO\",\"compilation des jobs non compiles sur ${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t command=\"\"\"dscc \/d ${targetServerInst}:${CST_DSTAGE_Port_Domaine} \/H ${targetServerInst} \/U ${SBM_Login} \/P ${SBM_Password} ${SBM_Projet} \/J * \/R * \/OUC \"\"\"\n\t\t\t StringBuffer sbout = new StringBuffer()\n\t\t\t StringBuffer sberr = new StringBuffer()\n\t\t\t def process = command.execute(null, new File(\"${CST_DSTAGE_Root_Directory}\")) \/\/ Call *execute* on the string\n\t\t\t def tout = process.consumeProcessOutputStream(sbout)\n\t\t\t def terr = process.consumeProcessErrorStream(sberr)\n\t\t\t \n\t\t\t  process.waitFor()                               \/\/ Wait for the command to finish\n\t\t\t\/\/ Obtain status and output\n\t\t\t  def value = process.exitValue()\n\t\n\t\t\t  logger(\"TRACE\",\"return code: ${value}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  if(value==0){\n\t\t\t\t  \n\t\t\t\t   logger(\"TRACE\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"TRACE\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"TRACE\",\"compilation de tous les jobs non compile reussie sur $targetServerInst \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  }\n\t\t\t  else{\n\t\t\t\t  \n\t\t\t\t  logger(\"ERROR\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"ERROR\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  logger(\"ERROR\",\"echec de la compilation de tous les jobs non compile sur $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t  System.exit(1)\n\t\t\t  }\n\t\t }\n\t\t catch (Exception e){\n\t\t\t logger(\"ERROR\",e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t }\n}\n\n\n \/***************************\n  * STEP\n  ***************************\/\n\n \n def int transfertToNas(def String sourceTarget,def String destTarget,def String bckTarget,def String VAR_DSTAGE_LogFileName ){\n\t def String fileSep=File.separator\n\t println \"DEBUG:sourceTarget=$sourceTarget\"\n\t println \"DEBUG:destTarget=$destTarget\"\n\t println \"DEBUG:bckTarget=$bckTarget\"\n\t \/\/ source is directory\n\t if(new File(sourceTarget).isDirectory()){\n\t\t\/\/ dest doesnt exist directory -> create dest directory\n\t\t if(!new File(\"${destTarget}\").isDirectory()){\n\t\t\t logger(\"WARN\",\"Le repertoire destination ${destTarget} n'existe pas \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t if(!new File(\"${destTarget}\").mkdirs()){\n\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire destination ${destTarget} \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\treturn 1\n\t\t\t }\n\t\t }\n\t\t logger(\"INFO\",\"Deploiement des donnees de ${destTarget}: \",\"$VAR_DSTAGE_LogFileName\")\n\t\t logger(\"TRACE\",\"cp -r ${sourceTarget} ${destTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t def ant = new AntBuilder()\n\t\t try {\n\t\t\t\t ant.copy(verbose: \"true\", todir: \"${destTarget}\", overwrite:'true',includeEmptyDirs:'true') {\n\t\t\t\t\t fileset(dir: \"${sourceTarget}\"){ include(name:\"**\/*\") }\n\t\t\t\t }\n\t\t }\n\t\t catch (Exception e) {\n\t\t\t logger(\"ERROR\",\"cp -rf ${sourceTarget} ${destTarget} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t return 1\n\t\t }\n\n\t\t \/\/ bck doesnt exist directory -> create bck directory\n\t\t if(bckTarget != \"\"){\n\t\t\t if(!new File(\"${bckTarget}\").isDirectory()){\n\t\t\t\t logger(\"WARN\",\"Le repertoire de backup ${bckTarget} n'existe pas \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t if(!new File(\"${bckTarget}\").mkdirs()){\n\t\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le repertoire backup ${bckTarget} \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t }\n\t\t\t logger(\"INFO\",\"Backup des donnees dans ${bckTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t logger(\"TRACE\",\"cp -r ${sourceTarget} ${bckTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t try {\n\t\t\t\t  ant.copy(verbose: \"true\", todir: \"${bckTarget}\", overwrite:'true',includeEmptyDirs:'true') {\n\t\t\t\t\t fileset(dir: \"${sourceTarget}\"){ include(name:\"**\/*\") }\n\t\t\t\t }\n\t\t\t }\n\t\t\t catch (Exception e) {\n\t\t\t\t logger(\"ERROR\",\"cp -rf ${sourceTarget} ${bckTarget}  failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t return 1\n\t\t\t }\n\t\t }\n\t }\n\t \/\/ source is a file\n\t else if(new File(sourceTarget).isFile()){\n\t\t def sourceTargetBasename= new File (\"${sourceTarget}\").getName()\n\t\t if(new File(\"${destTarget}\").isDirectory()){\n\t\t\t \/\/ cas ou destTarget represente le full path du repertoire distant ou doit etre copie le fichier source => ajout du basename du fichier source au destTarget\n\t\t\t destTarget=\"${destTarget}${fileSep}${sourceTargetBasename}\"\n\t\t }\n\t\t else{\n\t\t\t \/\/ cas ou destTarget represente le full path du fichier distant\n\t\t\t \/\/ => Controle que le repertoire parent du fichier distant existe sinon creation\n\t\t\t def File destParentDirectory=new File(\"${destTarget}\").getParentFile()\n\t\t\t if(!destParentDirectory.isDirectory()){\n\t\t\t\t logger(\"WARN\",\"Le repertoire de  ${destParentDirectory} n'existe pas \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t if(! destParentDirectory.mkdirs()){\n\t\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le sous repertoire \"+destParentDirectory.absolutePath+\"\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\tSystem.exit(1)\n\t\t\t\t}\n\t\t\t }\n\t\t }\n\t\t \n\t\t logger(\"INFO\",\"Transfert de fichier vers le NAS de ${sourceTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t logger(\"TRACE\",\"cp -f ${sourceTarget} ${destTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t\t def ant = new AntBuilder()\n\t\t \n\t\t try {\n\t\t\t\t ant.copy(verbose: \"true\",file:\"${sourceTarget}\", tofile: \"${destTarget}\", overwrite:'true',includeEmptyDirs:'true') \n\t\t }\n\t\t catch (Exception e) {\n\t\t\t logger(\"ERROR\",\"cp -f ${sourceTarget} ${destTarget} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t return 1\n\t\t }\n\t\t \n\n\t\t \/\/ cas ou bckTarget represente le full path du fichier distant\n\t\t \/\/ => Controle que le repertoire parent du fichier distant existe sinon creation\n\t\t if(new File(\"${bckTarget}\").isDirectory()){\n\t\t\t \/\/ cas ou bckTarget represente le full path du repertoire distant ou doit etre copie le fichier source => ajout du basename du fichier source au bckTarget\n\t\t\t bckTarget=\"${bckTarget}${fileSep}${sourceTargetBasename}\"\n\t\t }\n\t\t else{\n\t\t\t \/\/ cas ou bckTarget represente le full path du fichier distant\n\t\t\t \/\/ => Controle que le repertoire parent du fichier distant existe sinon creation\n\t\t\t def File destParentDirectory=new File(\"${bckTarget}\").getParentFile()\n\t\t\t if(!destParentDirectory.isDirectory()){\n\t\t\t\t logger(\"WARN\",\"Le repertoire de  ${destParentDirectory} n'existe pas \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t if(! destParentDirectory.mkdirs()){\n\t\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le sous repertoire \"+destParentDirectory.absolutePath+\"\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\tSystem.exit(1)\n\t\t\t\t}\n\t\t\t }\n\t\t }\t \n\t\t logger(\"INFO\",\"Backup des donnees dans ${bckTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t logger(\"TRACE\",\"cp -f ${sourceTarget} ${bckTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t try {\n\t\t\t  ant.copy(verbose: \"true\", file:\"${sourceTarget}\", tofile: \"${bckTarget}\", overwrite:'true',includeEmptyDirs:'true') \n\t\t }\n\t\t catch (Exception e) {\n\t\t\t logger(\"ERROR\",\"cp -f ${sourceTarget} ${bckTarget}  failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t return 1\n\t\t }\n\t }\n\t else{\n\t\t logger(\"INFO\",\"Le repertoire ${sourceTarget} n'existe pas. => Pas de Transfert vers le NAS...\",\"$VAR_DSTAGE_LogFileName\")\n\t }\n\t return 0\n }\n \n \/\/ Livraison des données sur le NAS\n logger(\"INFO\",\"\\n------------\\nDeploiement des données sur le NAS \\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n \n\n def String sourceTarget\n def String destTarget\n def String bckTarget\n def int cr\n sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Fichiers_manuels\"\n destTarget=\"${VAR_DSTAGE_Fichiers_Manuels_Directory}\"\n bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n cr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n if(cr!= 0) { System.exit(1)}\n \n sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Fichiers_sortie\"\n destTarget=\"${VAR_DSTAGE_Fichiers_Sortie}\"\n bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n cr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n if(cr!= 0) { System.exit(1)}\n \n sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Fichiers_temporaires\"\n destTarget=\"${VAR_DSTAGE_Fichiers_Temporaires}\"\n bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n cr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n if(cr!= 0) { System.exit(1)}\n \n sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Sql\"\n destTarget=\"${VAR_DSTAGE_Fichiers_Sql}\"\n bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n cr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n if(cr!= 0) { System.exit(1)}\n \n sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Stockage\"\n destTarget=\"${VAR_DSTAGE_Fichiers_Stockage}\"\n bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n cr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n if(cr!= 0) { System.exit(1)}\n \n \n \n \/\/_REF_INI.xml\n \n \/***************************\n  * STEP\n  ***************************\/\n import javax.xml.namespace.QName;\n import javax.xml.xpath.*;\n import org.w3c.dom.NodeList;\n import org.xml.sax.InputSource;\n def Map xpath_execute(def String xPathQuery,def String xmlFilePath){\n\t Map map=[:]\n\t map.put(\"count\", 0)\n\t map.put(\"firstElement\",\"\")\n\t map.put(\"firstElement\",\"\")\n\t map.put(\"allElements\", null)\n\t map.put(\"errorMessage\",null)\n\t \n\t def NodeList result;\n\t try{\n\t\t \/\/ create xml source\n\t\t InputSource source = new InputSource(new FileInputStream(xmlFilePath));\n\t\t\n\t\t \/\/ create xpath engine\n\t\t XPathFactory fabrique = XPathFactory.newInstance();\n\t\t XPath xpath = fabrique.newXPath();\n\t\t \n\t\t \/\/ xpath query eval\n\t\t XPathExpression exp = xpath.compile(xPathQuery);\n\t\t result = (NodeList)exp.evaluate(source, XPathConstants.NODESET);\n\t\t \n\t\t if (result.getLength() >= 1) {\n\t\t\t map.put(\"count\", result.getLength())\n\t\t\t map.put(\"firstElement\", result.item(0).getTextContent())\n\t\t\t map.put(\"lastElement\", result.item(result.getLength()-1).getTextContent())\n\t\t\t def tabElement=[]\n\t\t\t for (int i = 0; i < result.getLength(); i++) {\n\t\t\t\t tabElement[i]=result.item(i).getTextContent();\n\t\t\t }\n\t\t\t map.put(\"allElements\", tabElement)\n\t\t\t map.put(\"errorMessage\",\"\")\n\t\t\t \n\t\t }\n\t\t else {\n\t\t\t map.put(\"count\", 0)\n\t\t\t map.put(\"firstElement\", result.item(0).getTextContent())\n\t\t\t map.put(\"lastElement\",result.item(0).getTextContent())\n\t\t\t map.put(\"allElements\", null)\n\t\t\t map.put(\"errorMessage\",\"\")\n\t\t }\n\t\t \n\t\t map.put(\"length\", null)\n\t }\n\t catch (FileNotFoundException fe){\n\t\t map.put(\"errorMessage\", \"[E] FileNotFoundException: \"+fe.getMessage())\n\t }\n\t catch (XPathExpressionException xe){\n\t\t map.put(\"errorMessage\", \"[E] XPathExpressionException: \"+xe.getMessage())\n\t }\n\t \n\t catch(Exception e){\n\t\t map.put(\"errorMessage\", \"[E] Exception: \"+e.getMessage())\n\t }\n\t return map\n }\n \n \/*\n  * \n  * STEP\n  *\/\n \nimport org.ini4j.Wini\n \n \n\n \nlogger(\"INFO\",\"\\n------------\\nGestion du parametrage INI et TXT \\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n\/\/ modif cla : nom fichier xml = nom du projet sans REC & INT si present + _REF_INI.xml\ndef String projectRefIni=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${recProjet}_REF_INI.xml\"\nif (! new File(projectRefIni).isFile()){\n\t logger(\"ERROR\",\"Le fichier ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}${recProjet}_REF_INI.xml n'est pas present...\",\"$VAR_DSTAGE_LogFileName\")\n\n}\nelse{\n\t logger(\"INFO\",\"Le fichier ${recProjet}_REF_INI.xml est present...\",\"$VAR_DSTAGE_LogFileName\")\n\t \n\t \/\/  Recuperation de la liste de fichier INI definis  dans le fichier ${recProjet}_REF_INI.xml  au format \"init\\file.ini\"\n\t logger(\"INFO\",\"Recuperation de la liste de fichier INI definis  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t def Map mapR=xpath_execute(\"\/IniFiles\/file\/@name\",projectRefIni)\n\t if (mapR[\"errorMessage\"] != \"\"){\n\t\t logger(\"ERROR\", \"Impossible de recuperer les noms de INI  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t\t logger(\"ERROR\",mapR[\"errorMessage\"],\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t def dstage_ini_files=mapR[\"allElements\"]\n\t logger(\"TRACE\",\"dstage_ini_files reference dans le XML =\"+dstage_ini_files,\"$VAR_DSTAGE_LogFileName\")\n }\n\t \/\/  Recuperation de la liste de fichier TXT et INI presents dans ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Init\n\t def pathIniFile=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Init\"\n\t Dstage_Txt_Files=[]\n\t dstage_ini_recursefiles=[]\n\t dstage_ini_realfiles=[]\n\t logger(\"INFO\",\"Recuperation de la liste de fichiers TXT et INI presents dans le repertoire pathIniFile\",\"$VAR_DSTAGE_LogFileName\")\n\t if (new File(pathIniFile).exists()){\n\t\t new File(pathIniFile).eachFile{\n\t\t\t def File f=it\n\t\t\t if(f.isFile() && f.getName() =~ \"^.*\\\\.[tT][xX][tT]\\$\"){\n\t\t\t\t Dstage_Txt_Files.add(f.getName())\n\t\t\t }\n\t\t }\n\t\t new File(pathIniFile).eachFileRecurse{\n\t\t\t def File f=it\n\t\t\t if(f.isFile() && f.getName() =~ \"^.*\\\\.[iI][nN][iI]\\$\"){\n\t\t\t\t dstage_ini_recursefiles.add(\"Init${fileSep}\"+f.getName())\n\t\t\t }\n\t\t }\n\t} \n\telse {\n\t\tlogger(\"WARN\",\"le dossier \"+pathIniFile+\" n existe pas\",\"$VAR_DSTAGE_LogFileName\")\n\t}\n\t def File listeInit=new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}listeini.txt\")\n\/\/ correction CLA\n\/\/\t if(new File(\"${sourceTarget}\").isFile()){\n\t if(new File(\"${listeInit}\").isFile()){\n\t\t listeInit.eachLine { line ->\n\t\t\tdstage_ini_realfiles.add(line)\n\t\t}\n\t}\n\telse {\n\t\tlogger(\"WARN\",\"le fichier \"+listeInit+\" n existe pas\",\"$VAR_DSTAGE_LogFileName\")\n\t\tdstage_ini_realfiles=[]\n\t}\n\t logger(\"TRACE\",\"Dstage Txt Files=\"+Dstage_Txt_Files,\"$VAR_DSTAGE_LogFileName\")\n\t logger(\"TRACE\",\"dstage ini files in path=\"+dstage_ini_recursefiles,\"$VAR_DSTAGE_LogFileName\")\n\t logger(\"TRACE\",\"dstage ini files in listeini.txt=\"+dstage_ini_realfiles,\"$VAR_DSTAGE_LogFileName\")\n\n\t \n\t \n\t \n\t \/\/ Recuperation du nom de l'environnement au bon format\n\t logger(\"INFO\",\"Recuperation du nom de l'environnement au bon format\",\"$VAR_DSTAGE_LogFileName\")\n\t def String VAR_Environnement=\"\"\n\t switch(SBM_Environnement){\n\t\t case \"Production\" :VAR_Environnement=\"PRODUCTION\";break;\n\t\t case \"Pre-Production\" :VAR_Environnement=\"PREPRODUCTION\";break;\n\t\t case \"Recette\" :VAR_Environnement=\"RECETTE\";break;\n\t\t default: break;\n\t\n\t }\n\t logger(\"TRACE\",\"Environnement:${SBM_Environnement}->${VAR_Environnement} \",\"$VAR_DSTAGE_LogFileName\")\n\t if(VAR_Environnement == \"\"){\n\t\t logger(\"ERROR\", \"La valeur de l'environnement $SBM_Environnement n'est pas prise en charge. Seule les valeurs Production|Pre-Production|Recette son prise en compte\",\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t \n\t \/\/ ReCopie des fichiers TXT\n\t logger(\"INFO\",\"Traitement des fichiers .txt du répertoire Init \",\"$VAR_DSTAGE_LogFileName\")\n\t destTarget=\"${VAR_DSTAGE_Fichiers_Init}\"\n\t bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\t if (Dstage_Txt_Files){\n\t\t Dstage_Txt_Files.each {  it->\n\t\t\t sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Init${fileSep}\"+it.trim()\n\t\t\t destTarget=\"${VAR_DSTAGE_Fichiers_Init}${fileSep}\"+it.trim()\n\t\t\t bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck${fileSep}\"+it.trim()\n\t\t\t cr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\t\t\t if(cr!= 0) { System.exit(1)}\n\t\t }\n\t}\n\t \/\/ Valorisation des fichiers INI\n\t logger(\"INFO\",\"Valorisation des fichiers INI presents sous pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}Init${fileSep}\",\"$VAR_DSTAGE_LogFileName\")\n\t dstage_ini_realfiles.each{it->\n\t\t def String iniFile=it.trim()\n\t\t sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS${fileSep}${iniFile}\"\n\t\t destTarget=\"${VAR_DSTAGE_Workspace}${fileSep}tmp${fileSep}${iniFile}\"\n\t\t \/* remarque 1: le sous repertoire destination tmp\/Init a ete cree pendant le formatage du workspace*\/\n\t\t \/* remarque 2: la liste des fichiers contenus dans $dstage_ini_files (extrait du fichier ${recProjet}_REF_INI.xml ) sont de la forme init\\file.ini *\/\n\t\t \/* remarque 3: la liste des fichiers contenus dans $dstage_ini_realfiles (correspond aux ini reellement present dans le package) sont de la forme init\\file.ini *\/\n\t\t logger(\"INFO\",\"Traitement du fichier INI:tmp${fileSep}${iniFile}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t\t \/\/ Recopie du fichier INI dans un tmp\n\t\t def ant = new AntBuilder()\n\t\t try {\n\t\t\t\t ant.copy(verbose: \"true\",file:\"${sourceTarget}\", tofile: \"${destTarget}\", overwrite:'true',includeEmptyDirs:'true')\n\t\t }\n\t\t catch (Exception e) {\n\t\t\t logger(\"ERROR\",\"cp -f ${sourceTarget} ${destTarget} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t \n\t\t \/\/ instantiation d'une instance Wini pointant sur le fichier INI ${destTarget} permettant la manipulation des donnees via une api INI_WINDOWS\n\t\t def tmpIniFile=destTarget\n\t\t def winiFile = new Wini(new File(\"${tmpIniFile}\"))\n\t\t \/\/fgu creation liste des sections vides pour ajout en fin de ini\n\t\t def emptySection=[]\n\t\t \n\t\t iniFile=iniFile.toLowerCase()\n\t\t try{\n\t\t\t logger(\"TRACE\",\"Recuperation de la liste de section INI definies pour le fichier $iniFile  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t println \"DEBUG:query=\/IniFiles\/file[@name=\\\"${iniFile}\\\"]\/section\/@name\"\n\t\t\t println \"projectRefIni=$projectRefIni\"\n\t\t\t \n\t\t\t def Map mapSection=xpath_execute(\"\/IniFiles\/file[@name=\\\"${iniFile}\\\"]\/section\/@name\",projectRefIni)\n\t\t\t if (mapSection[\"errorMessage\"] != \"\"){\n\t\t\t\t logger(\"ERROR\", \"Impossible de recuperer la liste de section INI definies pour le fichier $iniFile  dans le fichier ${projectRefIni}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t logger(\"ERROR\",mapSection[\"errorMessage\"],\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t System.exit(1)\n\t\t\t }\n\t\t\t def Dstage_ini_Sections=mapSection[\"allElements\"]\n\t\t\t logger(\"TRACE\",\"Dstage_ini_Sections=\"+Dstage_ini_Sections,\"$VAR_DSTAGE_LogFileName\")\n\t\t\t \n\t\t\t\/* For each $Dstage_Ini_Section in $Dstage_ini_Sections\n\t\t\t xmlfile=$VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory\/$Projet_REF_INI.xml\n\t\t\t xmlquery=\/InitFiles\/file[@name=\"$Dstage_IniFile\"]\/section[@name=\"$Dstage_Ini_Section\"]\/key\/@name\n\t\t\t Output=$Dstage_ini_Keys*\/\n\t\t\t \n\t\t\t Dstage_ini_Sections.each{ section->\n\t\t\t\t section=section.trim()\n\t\t\t\t logger(\"TRACE\",\"Recuperation de la liste de key definies pour la section [${section}] pour le fichier $iniFile  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t def Map mapkey=xpath_execute(\"\/IniFiles\/file[@name=\\\"${iniFile}\\\"]\/section[@name=\\\"$section\\\"]\/key\/@name\",projectRefIni)\n\t\t\t\t\/\/fgu : gestion des sections vides\n\t\t\t\t if (mapkey[\"errorMessage\"] != \"\"){\n\t\t\t\t\t logger(\"WARN\", \"Impossible de recuperer la liste de key definies pour la section [${section}] pour le fichier $iniFile  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t logger(\"WARN\",mapkey[\"errorMessage\"],\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\/\/fgu : ajout de la section dans le WiniFile même si vide - syntaxe normale : winiFile.put(section, key, value)\n\t\t\t\t\t emptySection.add(section)\n\t\t\t\t }\n\t\t\t\t \n\t\t\t\t def Dstage_ini_Keys=mapkey[\"allElements\"]\n\t\t\t\t logger(\"TRACE\",\"Dstage_ini_Keys=\"+Dstage_ini_Keys,\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t \n\t\t\t\t \/*\n\t\t\t\t  *For each $Dstage_IniKey in $Dstage_ini_Keys\n\t\t\t\t\t\t\txmlfile=$VAR_DSTAGE_Workspace\/pkg\/$Dstage_SubDirectory\/$Projet_REF_INI.xml\n\t\t\t\t\t\t\txmlquery=\/InitFiles\/file[@name=\"$Dstage_IniFile\"]\/section[@name=\"$Dstage_Ini_Section\"]\/key[@name=\"$Dstage_IniKey\"]\/env[@name\"Dstage_Environnement\"]\/@value\n\t\t\t\t\t\t\tOutput=$Dstage_ini_Value\n\t\t\t\t\t\t\n\t\t\t\t  *\/\n\t\t\t\t \n\t\t\t\t \/***************\n\t\t\t\t  *  default value dans le XML : pas utiliser voir commentaire plus bas.\n\t\t\t\t  *\n\t\t\t\t  **\/\n\t\t\t\t  \n\t\t\t\t Dstage_ini_Keys.each { key->\n\t\t\t\t\t key=key.trim()\n\t\t\t\t\t def String value\n\t\t\t\t\t logger(\"TRACE\",\"Recuperation de la valeur associee a la  key $key definies pour la section $section pour le fichier $iniFile  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t logger(\"TRACE\",\"query: \/IniFiles\/file[@name=\\\"${iniFile}\\\"]\/section[@name=\\\"${section}\\\"]\/key[@name=\\\"${key}\\\"]\/env[@name=\\\"${VAR_Environnement}\\\"]\/@value\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t def Map mapvalue=xpath_execute(\"\/IniFiles\/file[@name=\\\"${iniFile}\\\"]\/section[@name=\\\"${section}\\\"]\/key[@name=\\\"${key}\\\"]\/env[@name=\\\"${VAR_Environnement}\\\"]\/@value\",projectRefIni)\n\t\t\t\t\t \/**\n\t\t\t\t\t --------- Commentaire du bloc : on ne set pas la valeur par defaut. si @value n'existe pas on est en erreur. Le else associé est plus bas\n\t\t\t\t\t if (mapvalue[\"count\"] == 0){\n\t\t\t\t\t\t logger(\"TRACE\",\"Recuperation de la valeur associee a la  key $key definies pour la section $section pour le fichier $iniFile  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t logger(\"TRACE\",\"query: \/IniFiles\/file[@name=\\\"${iniFile}\\\"]\/section[@name=\\\"${section}\\\"]\/key[@name=\\\"${key}\\\"]\/@default\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t mapvalue=xpath_execute(\"\/IniFiles\/file[@name=\\\"${iniFile}\\\"]\/section[@name=\\\"${section}\\\"]\/key[@name=\\\"${key}\\\"]\/@default\",projectRefIni)\n\t\t\t\t\t**\/\n\t\t\t\t\t\t if (mapvalue[\"count\"] == 0){\n\t\t\t\t\t\t\t logger(\"WARN\", \"Impossible de recuperer la valeur associee a la  key $key definies pour la section $section pour le fichier $iniFile  dans le fichier ${recProjet}_REF_INI.xml\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t\t logger(\"WARN\",mapvalue[\"errorMessage\"],\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t\t logger(\"WARN\", \"la valeur associee a la  key $key definies pour la section $section pour le fichier $iniFile n'est pas substituée\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t }\n\t\t\t\t\t\t else{\n\t\t\t\t\t\t\t value=mapvalue[\"firstElement\"]\n\t\t\t\t\t\t\t logger(\"TRACE\",\"Valorisation pour tmp${fileSep}${iniFile} : section=$section, key=$key, value=$value\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t\t winiFile.put(section, key, value)\n\t\t\t\t\t\t }\n\t\t\t\t\t\/**\n\t\t\t\t\t }\n\t\t\t\t\t else{\n\t\t\t\t\t\t  value=mapvalue[\"firstElement\"]\n\t\t\t\t\t }\n\t\t\t\t\t **\/\n\t\t\t\t\t \n\n\t\t\t\t\t \n\t\t\t\t }\n\t\t\t }\n\t\t\t \n\t\t\t \/\/ Application des mise a jours dans le fichier INI\n\t\t\t logger(\"TRACE\",\"Application du parametrage pour tmp${fileSep}${iniFile}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t winiFile.store()\n\t\t\t \/\/ fgu : ajout des sections vide en fin de fichier INI\n\t\t\t logger(\"TRACE\",\"emptySection:\"+emptySection,\"$VAR_DSTAGE_LogFileName\")\n\t\t\t emptySection.each{ sectionit ->\n\t\t\t tmpIniFile<< \"\\n[${sectionit}]\\n\"\n\t\t\t}\n\t\t }\n\t\t catch (Exception e) {\n\t\t\t logger(\"ERROR\", \"Error durant l'application du parametrage du fichier tmp${fileSep}${iniFile}:\\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t \n\t\t \/\/ Purge des espace entre le signe '=' (seperateur du couple (token,valeur). ex token = value => token=value\n\t\t \/\/ modif cla : + modification des repertoires pour les projets REC et INT\n\t\t logger(\"TRACE\", \"Purge des espace entre le signe '=' pour tmp${fileSep}${iniFile}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t try{\n\t\t \n\t\t\t def String iniData = new File(\"${tmpIniFile}\").text\n\t\t\t logger(\"TRACE\", \"avant purge\\n^${iniData}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t def String iniDataNew=iniData.replaceAll(\" *= *\", \"=\")\n\t\t\t if (flagRECorINT) { \/\/ modif cla\n\t\t\t\tlogger(\"INFO\", \"Remplacement du nom projet pour REC et INT tmp${fileSep}${iniFile}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\tdef String iniDataNew2=iniDataNew.replaceAll(\"\\\\${recProjet}\\\\\", \"\\\\${SBM_Projet}\\\\\")\n\t\t\t }\n\t\t\t def destDataInputStream=new File(\"${tmpIniFile}\").newDataOutputStream()\n\t\t\t destDataInputStream << iniDataNew\n\t\t\t destDataInputStream.close()\n\t\t\t iniData = new File(\"${tmpIniFile}\").text\n\t\t\t logger(\"TRACE\", \"apres purge\\n^${iniData}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t }\n\t\t catch(Exception e){\n\t\t\t logger(\"ERROR\", \"Error durant la substitution de ' *= *' par '=' sur le fichier ${tmpIniFile}:\\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t System.exit(1)\n\t\t }\n\t\t \n\n\n\t\t \n\t\t \/\/ Deploiement du fichier INI\n\t\t logger(\"TRACE\", \"Deploiement du fichier INI dans le package depuis tmp${fileSep}${iniFile}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t sourceTarget1=\"${tmpIniFile}\"\n\/\/ correction CLA\n\/\/\t\t destTarget2=\"${VAR_DSTAGE_Fichiers_Init}\"\n\t\t destTarget2=\"${VAR_DSTAGE_DS_Projet}${fileSep}${iniFile}\"\n\n\t\t bckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\t\t cr=transfertToNas(sourceTarget1,destTarget2,bckTarget,VAR_DSTAGE_LogFileName )\n\t\t if(cr!= 0) { System.exit(1)}\n\t\t \n\t\t \/\/ Fin de traitement du fichier INI\n\t\t \n\t\t \n\t } \/\/ Fin de traitement de l'ensemble des fichiers INI\n\t \n\n \n\n \n \n \n \/*\n  *\n  * STEP\n  *\/\n \n \/\/ Deploiement des donnees a distribuer sur les differents serveurs\nlogger(\"INFO\",\"\\n------------\\nDeploiement des donnees a distribuer sur les differents serveurs\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n \nVAR_DSTAGE_TargetServerList.split(\"\\\\|\").each{\n\n\tdef String targetServerInst=it.trim()\n\tlogger(\"INFO\",\"--- Debut du transfert vers le serveur ${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\t\n\tsourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}03-ArboDisques-S${fileSep}fichiers_hashcodes\"\n\tdestTarget=\"\\\\\\\\${targetServerInst}${fileSep}${VAR_DSTAGE_Fichiers_Hashcode1}\"\n\tbckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\tcr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\tif(cr!= 0) { System.exit(1)}\n\t\n\tsourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}03-ArboDisques-S${fileSep}fichiers_temporaires\"\n\tdestTarget=\"\\\\\\\\${targetServerInst}${fileSep}${VAR_DSTAGE_Fichiers_Instance_Temporaires1}\"\n\tbckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\tcr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\tif(cr!= 0) { System.exit(1)}\n\n\t\/\/ debut modif CLA\n\/* Suppression copie de Suivi et Compte Rendu car effectuee par la boucle sur les sous-repertoires de 05-ArboDisques-M \n\tsourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}05-ArboDisques-M${fileSep}Compte Rendu\"\n\tdestTarget=\"\\\\\\\\${targetServerInst}${fileSep}${VAR_DSTAGE_Compte_Rendu1}\"\n\tbckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\tcr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\tif(cr!= 0) { System.exit(1)}\n\n\tsourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}05-ArboDisques-M${fileSep}Suivi${fileSep}Master\"\n\tdestTarget=\"\\\\\\\\${targetServerInst}${fileSep}${VAR_DSTAGE_Master1}\"\n\tbckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\tcr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\tif(cr!= 0) { System.exit(1)}\n\t\n\tsourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}05-ArboDisques-M${fileSep}Suivi${fileSep}TR\"\n\tdestTarget=\"\\\\\\\\${targetServerInst}${fileSep}${VAR_DSTAGE_TR}\"\n\tbckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\tcr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\tif(cr!= 0) { System.exit(1)}\n\n\tsourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}05-ArboDisques-M${fileSep}Suivi${fileSep}Validation\"\n\tdestTarget=\"\\\\\\\\${targetServerInst}${fileSep}${VAR_DSTAGE_Fichiers_Validation1}\"\n\tbckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\tcr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\tif(cr!= 0) { System.exit(1)}\n*\/\n\t\/* boucle sur les sous-repertoires de 05-ArboDisques-M pour tous les copier *\/\n\tnew File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${pkgParentSubDirectory}${fileSep}05-ArboDisques-M\").eachDir() { dir ->  \n\t    def subDir=dir.getName()\n\t\tsourceTarget=dir\n\t\tdestTarget=\"\\\\\\\\${targetServerInst}${fileSep}${VAR_DSTAGE_Racine_Masters}${fileSep}${subDir}\"\n\t\tbckTarget=\"${VAR_DSTAGE_Workspace}${fileSep}bck\"\n\t\tcr=transfertToNas(sourceTarget,destTarget,bckTarget,VAR_DSTAGE_LogFileName )\n\t\tif(cr!= 0) { System.exit(1)}\n\t\tlogger(\"INFO\",\"- \",\"$VAR_DSTAGE_LogFileName\")\n\t} \n\n\tlogger(\"INFO\",\"--- Fin du transfert vers le serveur ${targetServerInst} : \",\"$VAR_DSTAGE_LogFileName\")\n\t\/\/ fin modif CLA\n\t\n}\n\n\/\/ Generation d'un package de backup\nlogger(\"INFO\",\"\\n------------\\nGeneration d'un package de backup tmp${fileSep}${SBM_BckPackage}.zip de bck${fileSep}\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\ndef String zipName=\"${VAR_DSTAGE_Workspace}${fileSep}tmp${fileSep}${SBM_BckPackage}.zip\"\ndef String basedir=\"${VAR_DSTAGE_Workspace}\"\ntry {\n\tant = new AntBuilder()\n\tant.zip(destfile: zipName, basedir:basedir,includes:\"bck\/**\")\n}\ncatch (Exception e) {\n\tlogger(\"ERROR\", \"Error durant la creation du package de backup tmp${fileSep}${SBM_BckPackage}.zip:\\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\tSystem.exit(1)\n}\n\nSystem.exit(0)"
                                    },
                                    "type": "plugin",
                                    "name": "DeployPackage",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/ --------------- InitStep\n\n\/\/chargement des libs\n${p:lib_logger}\n\n\/\/ pas de $LogFileName - le fichier peut ne pas exister\nfileSep=File.separator\n\n\/\/ input SBM\nlogger(\"TRACE\",\"Chargement des inputs SBM\")\n\n\n\n\/\/  Env. Cst \nlogger(\"TRACE\",\"Chargement constantes d'environnement\")\n\n\n\n\/\/ VARIABLES\nlogger(\"TRACE\",\"Chargement variables\")\n\/\/ definition des variables necessaires au calcul des OutProps\ndef VarL_DSTAGE_Fichiers_Manuels_Directory=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\"\ndef VarL_DSTAGE_Fichiers_Sortie=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\"\ndef VarL_DSTAGE_Fichiers_Temporaires=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\"\ndef VarL_DSTAGE_Fichiers_Stockage=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\"\ndef VarL_DSTAGE_Fichiers_Sql=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\"\ndef VarL_DSTAGE_Fichiers_Init=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\"\ndef VarL_DSTAGE_Fichiers_Master=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VarL_DSTAGE_Fichiers_TR=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR}\"\ndef VarL_DSTAGE_Fichiers_Validation=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VarL_DSTAGE_Workspace=\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\"\n\n\/\/ variable en OutProps\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Manuels_Directory\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Sortie\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Temporaires\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Stockage\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Sql\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Init\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Hashcode1\",\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_hashcodes\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Instance_Temporaires1\",\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_temporaires\")\noutProps.setProperty(\"VAR_DSTAGE_Compte_Rendu1\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Compte Rendu\")\noutProps.setProperty(\"VAR_DSTAGE_Master1\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\")\noutProps.setProperty(\"VAR_DSTAGE_TR\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Validation1\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\")\noutProps.setProperty(\"VAR_DSTAGE_backupfull_file\",\"backupfull_${p:SBM_BckPackage}.txt\")\noutProps.setProperty(\"VAR_DSTAGE_Nas_Target_Folder\",\"${VarL_DSTAGE_Fichiers_Manuels_Directory}|${VarL_DSTAGE_Fichiers_Sortie}|${VarL_DSTAGE_Fichiers_Temporaires}|${VarL_DSTAGE_Fichiers_Init}|${VarL_DSTAGE_Fichiers_Sql}|${VarL_DSTAGE_Fichiers_Stockage}\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Master\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_TR\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Validation\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\")\noutProps.setProperty(\"VAR_DSTAGE_M_Target_Folder\",\"${VarL_DSTAGE_Fichiers_Master}|${VarL_DSTAGE_Fichiers_TR}|${VarL_DSTAGE_Fichiers_Validation}\")\noutProps.setProperty(\"VAR_DSTAGE_Workspace\",\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\")\noutProps.setProperty(\"VAR_DSTAGE_LogFileName\",\"${VarL_DSTAGE_Workspace}${fileSep}${fileSep}log${fileSep}${fileSep}${p:SBM_Nom_Log}\")\n\t\n\/\/ liste des serveurs cibles\n\/\/ Combien de SBM_Target_Server necessaire? \nlogger(\"INFO\",\"Calcul dynamique de la liste des Targets serveurs\")\ndef VarL_DSTAGE_TargetServerTab=[]\nif(\"${p:SBM_Target_Server}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server} \")\n\t\n}\nif(\"${p:SBM_Target_Server2}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server2}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server2} \")\n\t\n}\nif(\"${p:SBM_Target_Server3}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server3}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server3} \")\n}\n\ndef VarL_DSTAGE_TargetServerList=\"\"\nVarL_DSTAGE_TargetServerTab.each{\n\tif(VarL_DSTAGE_TargetServerList == \"\"){ VarL_DSTAGE_TargetServerList=it.trim()}else{VarL_DSTAGE_TargetServerList=VarL_DSTAGE_TargetServerList+'|'+it.trim()}\n}\n\n\/\/ out Properties target server list\noutProps.setProperty(\"VAR_DSTAGE_TargetServerList\",\"${VarL_DSTAGE_TargetServerList}\")"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-PutOneFileIntoRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                        "sshPassword": "pbe{4GETUiJXQVZVdDtc2FHqWmQi3jpAcSBxN6QbkwOj9ZXGOY67n9eT3FadxkudvR8RNItYZsORZ8Q=}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{L3JNeHVL92OSSpdczk82TNISI59DTw0b}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "false",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "localFileStr": "${p:InitStep\/VAR_DSTAGE_Workspace}\/tmp\/${p:SBM_BckPackage}.zip",
                                        "remoteFileStr": "\/products\/serena\/depot\/DATASTAGE\/${p:SBM_Folder}\/${p:SBM_BckPackage}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "BckPackageSCPtoDimSrv",
                                    "children": []
                                }
                            ]
                        }
                    },
                    {
                        "name": "DEPLOYBACKUP",
                        "description": "",
                        "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                        "takesVersion": false,
                        "status": "",
                        "active": true,
                        "propDefs": [
                            {
                                "name": "SBM_BaselineId",
                                "label": "SBM_BaselineId",
                                "type": "TEXT",
                                "value": "BaselineId",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Package",
                                "label": "SBM_Package",
                                "type": "TEXT",
                                "value": "Package",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Folder",
                                "label": "SBM_Folder",
                                "type": "TEXT",
                                "value": "Folder",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Nom_Log",
                                "label": "SBM_Nom_Log",
                                "type": "TEXT",
                                "value": "Nom_Log",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Projet",
                                "label": "SBM_Projet",
                                "type": "TEXT",
                                "value": "DOLLARU",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_BckPackage",
                                "label": "SBM_BckPackage",
                                "type": "TEXT",
                                "value": "BckPackage",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Password",
                                "label": "SBM_Password",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Login",
                                "label": "SBM_Login",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server",
                                "label": "SBM_Target_Server",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server2",
                                "label": "SBM_Target_Server2",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Target_Server3",
                                "label": "SBM_Target_Server3",
                                "type": "TEXT",
                                "required": false,
                                "description": ""
                            },
                            {
                                "name": "SBM_Environnement",
                                "label": "SBM_Environnement",
                                "type": "TEXT",
                                "required": true,
                                "description": ""
                            }
                        ],
                        "rootActivity": {
                            "edges": [
                                {
                                    "to": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "from": "DeployPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "from": "InitStep",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DownloadPackage",
                                    "from": "CreateWorSpace",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "DeployPackage",
                                    "from": "DownloadPackage",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "CreateWorSpace",
                                    "from": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "type": "SUCCESS",
                                    "value": ""
                                },
                                {
                                    "to": "InitStep",
                                    "type": "ALWAYS",
                                    "value": ""
                                }
                            ],
                            "offsets": [
                                {
                                    "name": "DownloadPackage",
                                    "x": 55.5,
                                    "y": 280
                                },
                                {
                                    "name": "DeployPackage",
                                    "x": -282.5,
                                    "y": 330
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "x": -282.5,
                                    "y": 180
                                },
                                {
                                    "name": "InitStep",
                                    "x": -254.5,
                                    "y": 70
                                },
                                {
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "x": 65.5,
                                    "y": 126
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "x": 0,
                                    "y": 420
                                }
                            ],
                            "sizes": [
                                {
                                    "name": "DeployPackage",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "width": 80,
                                    "height": 50
                                },
                                {
                                    "name": "DownloadPackage",
                                    "width": 310,
                                    "height": 60
                                },
                                {
                                    "name": "InitStep",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "CreateWorSpace",
                                    "width": 260,
                                    "height": 60
                                },
                                {
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "width": 150,
                                    "height": 40
                                }
                            ],
                            "type": "graph",
                            "name": "78c44f92-e3e2-49d1-b2e0-36f151a60cc4",
                            "children": [
                                {
                                    "type": "finish",
                                    "name": "ab2b6fea46c8d9a5b139002bb0122f",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/-------------------------------------- Bloc DeployBackup SRA\n\/\/-------------Chargement des variables\n\n\/\/chargement des libs\n${p:lib_logger}\n\nfileSep=File.separator\n\/\/ recuperation des variables inputs SBM\ndef SBM_Nom_Log=\"${p:SBM_Nom_Log}\"\ndef SBM_BckPackage=\"${p:SBM_BckPackage}\"\ndef SBM_Projet=\"${p:SBM_Projet}\"\ndef SBM_Password=\"${p:SBM_Password}\"\ndef SBM_Folder=\"${p:SBM_Folder}\"\ndef SBM_Package=\"${p:SBM_Package}\"\ndef SBM_BaselineId=\"${p:SBM_BaselineId}\"\ndef SBM_Login=\"${p:SBM_Login}\"\ndef SBM_Target_Server=\"${p:SBM_Target_Server}\"\ndef SBM_Target_Server2=\"${p:SBM_Target_Server2}\"\ndef SBM_Target_Server3=\"${p:SBM_Target_Server3}\"\ndef SBM_Environnement=\"${p:SBM_Environnement}\"\n\n\/\/ recuperation des constantes environnement\ndef VAR_CST_DSTAGE_tmp_directories=\"${p:environment\/CST_DSTAGE_tmp_directories}\"\ndef VAR_CST_DSTAGE_Root_Directory=\"${p:environment\/CST_DSTAGE_Root_Directory}\"\ndef VAR_CST_DSTAGE_ArboDisque_Files=\"${p:environment\/CST_DSTAGE_ArboDisque_Files}\"\ndef VAR_CST_DSTAGE_NAS_Folders=\"${p:environment\/CST_DSTAGE_NAS_Folders}\"\ndef VAR_CST_DSTAGE_M_Folders=\"${p:environment\/CST_DSTAGE_M_Folders}\"\ndef VAR_CST_DSTAGE_IsTool_Path=\"${p:environment\/CST_DSTAGE_IsTool_Path}\"\ndef VAR_CST_DSTAGE_Port_Domaine=\"${p:environment\/CST_DSTAGE_Port_Domaine}\"\ndef VAR_CST_DIM_SASDepot=\"${p:environment\/CST_DIM_SASDepot}\"\ndef VAR_CST_Nas_Projet_Path=\"${p:environment\/CST_Nas_Projet_Path}\"\ndef VAR_CST_DSTAGE_Environnement=\"${p:environment\/CST_DSTAGE_Environnement}\"\n\n\/\/ recuperation des variables environnement\n\/\/ recuperation des variables environnement\ndef VAR_DSTAGE_TargetServerList=\"${p:InitStep\/VAR_DSTAGE_TargetServerList}\"\ndef VAR_DSTAGE_Fichiers_Manuels_Directory=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\"\ndef VAR_DSTAGE_Fichiers_Sortie=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\"\ndef VAR_DSTAGE_Fichiers_Temporaires=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\"\ndef VAR_DSTAGE_Fichiers_Stockage=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\"\ndef VAR_DSTAGE_Fichiers_Sql=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\"\ndef VAR_DSTAGE_Fichiers_Init=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\"\ndef VAR_DSTAGE_Fichiers_Hashcode1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_hashcodes\"\ndef VAR_DSTAGE_Fichiers_Instance_Temporaires1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_temporaires\"\ndef VAR_DSTAGE_Compte_Rendu1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Compte Rendu\"\ndef VAR_DSTAGE_Master1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_TR=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_backupfull_file=\"backupfull_${p:SBM_BckPackage}.txt\"\ndef VAR_DSTAGE_Nas_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_Nas_Target_Folder}\"\ndef VAR_DSTAGE_Fichiers_Master=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_Fichiers_TR=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_M_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_M_Target_Folder}\"\ndef VAR_DSTAGE_Workspace=\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\"\ndef VAR_DSTAGE_LogFileName=\"${p:InitStep\/VAR_DSTAGE_LogFileName}\"\n\n\/\/-------------Chargement des variables\n \n\n\n\/****************\n * STEP : Creation du workspace\n * ************\/\n\n\ndef dPathWorkspaceFile=new File(VAR_DSTAGE_Workspace)\n\nlogger(\"INFO\",\"\\n------------\\nGestion initial du workspace:${VAR_DSTAGE_Workspace} \\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\nif(dPathWorkspaceFile.isDirectory()){\n\tlogger(\"INFO\",\"Un workspace ($VAR_DSTAGE_Workspace) existe deja\",\"$VAR_DSTAGE_LogFileName\");\n\tif (new File(\"$VAR_DSTAGE_Workspace${fileSep}tag${fileSep}${VAR_DSTAGE_backupfull_file}\").isFile()){\n\t\tlogger(\"INFO\",\" Le full backfile (tag${fileSep}${VAR_DSTAGE_backupfull_file}) existe deja. Suppression partiel du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\t\tdef pathPkgDir=\"$VAR_DSTAGE_Workspace${fileSep}pkg\"\n\t\tdef dPathPkgDir=new File(\"$VAR_DSTAGE_Workspace${fileSep}pkg\")\n\t\t\n\t\tlogger(\"INFO\",\"Suppression de $pathPkgDir si le repertoire existe\",\"$VAR_DSTAGE_LogFileName\");\n\t\tif(dPathPkgDir.isDirectory()){\n\t\t\tif(!dPathPkgDir.deleteDir()){\n\t\t\t\tlogger(\"ERROR\",\" Impossible de supprimer le repertoire ${pathPkgDir}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tlogger(\"INFO\",\"Le full backfile tag${fileSep}${VAR_DSTAGE_backupfull_file}) n'existe pas. Suppression complet du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\t\tif(!dPathWorkspaceFile.deleteDir()){\n\t\t\tlogger(\"ERROR\",\"Impossible de supprimer le repertoire ${VAR_DSTAGE_Workspace}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\tSystem.exit(1)\n\t\t}\n\t\t\n\t\t\n\t}\n}\n\nlogger(\"INFO\",\"Creation des sous repertoires du workspace\",\"$VAR_DSTAGE_LogFileName\");\n\/\/ loop sur chaque sous directory a creer\nVAR_CST_DSTAGE_tmp_directories.split(\"\\\\|\").each{ it->\n\tdef String dirName=it.trim()\n\tif (dirName != \"\" ){\n\t\tFile dir=new File(\"${VAR_DSTAGE_Workspace}${fileSep}${dirName}\")\n\t\tif(!dir.isDirectory()){\n\t\t\tif(!dir.mkdirs()){\n\t\t\t\tlogger(\"ERROR\",\"Impossible de creer le sous repertoire :\"+dir.getAbsolutePath(),\"$VAR_DSTAGE_LogFileName\");\n\t\t\t\tSystem.exit(1)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlogger(\"TRACE\",\"Creation du sous repertoire :${dirName}\",\"$VAR_DSTAGE_LogFileName\");\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlogger(\"INFO\",\"Le sous repertoire :${dirName} existe deja\",\"$VAR_DSTAGE_LogFileName\");\n\t\t}\n\t}\n}\n"
                                    },
                                    "type": "plugin",
                                    "name": "CreateWorSpace",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                    "pluginName": "SCP",
                                    "pluginVersion": 1,
                                    "properties": {
                                        "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                        "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                        "sshUser": "dmsys",
                                        "sshPassword": "pbe{OHoSebZie0tYemFIcE0BXeweozSCfwhG}",
                                        "sshKeyfile": "",
                                        "sshPassphrase": "pbe{JW+eT4J0vWjFdJRzQXZEYCb4DTASyAz8}",
                                        "sshTrust": "true",
                                        "sshKnownhosts": "",
                                        "sshVerbose": "true",
                                        "sshSftp": "false",
                                        "sshPreserveLastModified": "false",
                                        "remoteSrcFile": "${p:environment\/CST_DIM_SASDepot}\/${p:SBM_BckPackage}\/DATASTAGE\/${p:SBM_Folder}\/${p:SBM_BckPackage}.zip",
                                        "localDestFile": "${p:InitStep\/VAR_DSTAGE_Workspace}\\\\pkg\\\\${p:SBM_BckPackage}.zip"
                                    },
                                    "type": "plugin",
                                    "name": "DownloadPackage",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/-------------------------------------- Bloc DeployBackup SRA\n\/\/-------------Chargement des variables\n\/\/chargement des libs\n${p:lib_logger}\n\nfileSep=File.separator\n\/\/ recuperation des variables inputs SBM\ndef SBM_Nom_Log=\"${p:SBM_Nom_Log}\"\ndef SBM_BckPackage=\"${p:SBM_BckPackage}\"\ndef SBM_Projet=\"${p:SBM_Projet}\"\ndef SBM_Password=\"${p:SBM_Password}\"\ndef SBM_Folder=\"${p:SBM_Folder}\"\ndef SBM_Package=\"${p:SBM_Package}\"\ndef SBM_BaselineId=\"${p:SBM_BaselineId}\"\ndef SBM_Login=\"${p:SBM_Login}\"\ndef SBM_Target_Server=\"${p:SBM_Target_Server}\"\ndef SBM_Target_Server2=\"${p:SBM_Target_Server2}\"\ndef SBM_Target_Server3=\"${p:SBM_Target_Server3}\"\ndef SBM_Environnement=\"${p:SBM_Environnement}\"\n\n\/\/ recuperation des constantes environnement\ndef VAR_CST_DSTAGE_tmp_directories=\"${p:environment\/CST_DSTAGE_tmp_directories}\"\ndef VAR_CST_DSTAGE_Root_Directory=\"${p:environment\/CST_DSTAGE_Root_Directory}\"\ndef VAR_CST_DSTAGE_ArboDisque_Files=\"${p:environment\/CST_DSTAGE_ArboDisque_Files}\"\ndef VAR_CST_DSTAGE_NAS_Folders=\"${p:environment\/CST_DSTAGE_NAS_Folders}\"\ndef VAR_CST_DSTAGE_M_Folders=\"${p:environment\/CST_DSTAGE_M_Folders}\"\ndef VAR_CST_DSTAGE_IsTool_Path=\"${p:environment\/CST_DSTAGE_IsTool_Path}\"\ndef VAR_CST_DSTAGE_Port_Domaine=\"${p:environment\/CST_DSTAGE_Port_Domaine}\"\ndef VAR_CST_DIM_SASDepot=\"${p:environment\/CST_DIM_SASDepot}\"\ndef VAR_CST_Nas_Projet_Path=\"${p:environment\/CST_Nas_Projet_Path}\"\ndef VAR_CST_DSTAGE_Environnement=\"${p:environment\/CST_DSTAGE_Environnement}\"\n\n\/\/ recuperation des variables environnement\ndef VAR_DSTAGE_TargetServerList=\"${p:InitStep\/VAR_DSTAGE_TargetServerList}\"\ndef VAR_DSTAGE_Fichiers_Manuels_Directory=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\"\ndef VAR_DSTAGE_Fichiers_Sortie=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\"\ndef VAR_DSTAGE_Fichiers_Temporaires=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\"\ndef VAR_DSTAGE_Fichiers_Stockage=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\"\ndef VAR_DSTAGE_Fichiers_Sql=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\"\ndef VAR_DSTAGE_Fichiers_Init=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\"\ndef VAR_DSTAGE_Fichiers_Hashcode1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_hashcodes\"\ndef VAR_DSTAGE_Fichiers_Instance_Temporaires1=\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_temporaires\"\ndef VAR_DSTAGE_Compte_Rendu1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Compte Rendu\"\ndef VAR_DSTAGE_Master1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_TR=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation1=\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_backupfull_file=\"backupfull_${p:SBM_BckPackage}.txt\"\ndef VAR_DSTAGE_Nas_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_Nas_Target_Folder}\"\ndef VAR_DSTAGE_Fichiers_Master=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VAR_DSTAGE_Fichiers_TR=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\"\ndef VAR_DSTAGE_Fichiers_Validation=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VAR_DSTAGE_M_Target_Folder=\"${p:InitStep\/VAR_DSTAGE_M_Target_Folder}\"\ndef VAR_DSTAGE_Workspace=\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\"\ndef VAR_DSTAGE_LogFileName=\"${p:InitStep\/VAR_DSTAGE_LogFileName}\"\n\n\/\/-------------Chargement des variables\n \n\n \/****************\n  * STEP: decompression et Controle du package \n  ****************\/\n\n \n \n \n\nlogger(\"INFO\",\"\\n------------\\ndecompression du package\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n logger(\"INFO\",\"Extraction du fichier zip \\\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_BckPackage}.zip\\\"\",\"$VAR_DSTAGE_LogFileName\")\n try{\n\t def ant = new AntBuilder()\/\/ create an antbuilder\n \n\t ant.unzip(  src:\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_BckPackage}.zip\",\n\t\t\t dest:\"${VAR_DSTAGE_Workspace}${fileSep}pkg\",\n\t\t\t overwrite:\"false\"\n\t )\n\t \n\t \n }\n catch (Exception e) {\n\t e.printStackTrace()\n\t logger(\"ERROR\",\"Erreur dans l'extraction du fichier zip \\\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${SBM_BckPackage}.zip\\\"\",\"$VAR_DSTAGE_LogFileName\")\n\t logger(\"ERROR\", e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t System.exit(1)\n }\n\n\n \n \n\n \/****************\n  * STEP: \n  ****************\/\n \/\/VARIABLES\n fileSep=File.separator\n \n\n \n \n logger(\"INFO\",\"\\n------------\\nLancement du retour arriere pour chaque server NAS\\n------------\\n\",\"$VAR_DSTAGE_LogFileName\")\n VAR_DSTAGE_TargetServerList.split(\"\\\\|\").each{\n\t def String targetServerInst=it.trim()\n\t \n\t logger(\"INFO\",\"Restauration des fichiers sur NAS pour $targetServerInst  \",\"$VAR_DSTAGE_LogFileName\")\n\t \/\/  ...\n\t \/\/ Recuperation du Parent-SubDirectory\n\t \/\/ dans l'exemple on cherche d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\ le repertoire pkgParentSubDirectory=Projet_Initial_WAP-6037_0\n\t def String pkgParentSubDirectory=\"\"\n\t try{\n\t\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}\").eachDir {\n\t\t\t def File sdir=it\n\t\t\t pkgParentSubDirectory=sdir.getName()\n\t\t\t \/\/ !!!! Parent-SubDirectory trouve : on force l'arret de la boucle!!!!\n\t\t\t throw new Exception(\"Parent-SubDirectory trouve\")\n\t\t }\n\t\t \n\t }\n\t catch(Exception e){\n\t\t \/\/ Parent-SubDirectory trouve\n\t\t logger(\"DEBUG\",\"pkgParentSubDirectory=$pkgParentSubDirectory\",\"$VAR_DSTAGE_LogFileName\")\n\t }\n\t if(pkgParentSubDirectory==\"\"){\n\t\t logger(\"ERROR\",\"Impossible de trouver un sous repertoire dans${VAR_DSTAGE_Workspace}${fileSep}pkg\",\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t \n\t \n\t \n\t \/\/ Test existence dans le package de backup dur repertoire ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS\n\t \/\/ Debut Step Creation rep de backup\n\t \/\/ Creation du sous repertoire de backup ${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}${targetServerInst}\n\t \/\/ ici dans l'exemple for each Server_target {mkdir -p  d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\bck\\${targetServerInst} }\n\t \n\t if(!new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS\").isDirectory()){\n\n\t\tlogger(\"WARN\",\"Pas de répertoire bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\n\t }\n\t else{\n\t\t \n\t\t logger(\"WARN\",\"Restauration des fichiers sur le NAS: bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}02-NAS\",\"$VAR_DSTAGE_LogFileName\")\n\t\t def String[] DSTAGE_NAS_FoldersTab\n\t\t DSTAGE_NAS_FoldersTab=VAR_CST_DSTAGE_NAS_Folders.split(\"\\\\|\")\n\t\t def String [] VAR_DSTAGE_Nas_Target_FolderTab\n\t\t VAR_DSTAGE_Nas_Target_FolderTab=VAR_DSTAGE_Nas_Target_Folder.split(\"\\\\|\")\n\t \n\t \n\t\t for (counter=0;counter<DSTAGE_NAS_FoldersTab.size();counter++){\n\t\t\t def String Dstage_Folder=DSTAGE_NAS_FoldersTab[counter]\n\t\t\t def String Dstage_NAS_Folder=VAR_DSTAGE_Nas_Target_FolderTab[counter]\n\t\t\t \/\/println \"[D] Dstage_Folder=$Dstage_Folder\"\n\t\t\t \/\/println \"[D] Dstage_NAS_Folder=$Dstage_NAS_Folder\"\n\t\t\t \n\t\t\t \/\/ Recherche des fichiers a Backuper\n\t\t\t logger(\"INFO\",\"Recherche de la liste des fichiers (path relatif) a restaurer depuis bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t def dstage_backup_files=[]\n\t\t\t if(new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\").exists()) {\n\t\t\t\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\").eachFile() {\n\t\t\t\t\t dstage_backup_files.add(it.getName())\n\t\t\t\t\t \/\/println \"dirRelativePath=\"+it.getName()\n\t\t\t\t }\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlogger(\"WARN\",\"le dossier n'existe pas bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t}\n\t\t\tlogger(\"TRACE\",\"Liste dstage_backup_files \"+dstage_backup_files,\"$VAR_DSTAGE_LogFileName\")\n\t\t\t \n\t\t\t \/\/ Restauration des fichiers ou repertoires sur l'instance ${targetServerInst}\n\t\t\t \/\/logger(\"INFO\",\"Backup des fichiers de l'instance ${targetServerInst} \",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t dstage_backup_files.each{ backupFile->\n\t\t\t\t def  destTarget=\"${Dstage_NAS_Folder}\"\n\t\t\t\t def String sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}${fileSep}${backupFile}\"\n\t\t\t\t logger(\"INFO\",\"Restauration de bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}${fileSep}${backupFile} dans ${Dstage_NAS_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t \/\/ cas ou ${sourceTarget} existe et est un repertoire\n\t\t\t\t if(new File(\"${sourceTarget}\").isDirectory()){\n\t\t\t\t\t logger(\"TRACE\",\"cp -r ${sourceTarget} ${destTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t\t try {\n\t\t\t\t\t\t\t  ant.copy(verbose: \"true\", todir: \"${destTarget}\", overwrite:'true',includeEmptyDirs:'true') {\n\t\t\t\t\t\t\t\t fileset(dir: \"${sourceTarget}\"){ include(name:\"**\/*\") }\n\t\t\t\t\t\t\t }\n\t\t\t\t\t }\n\t\t\t\t\t catch (Exception e) {\n\t\t\t\t\t\t logger(\"ERROR\",\"cp -rf ${sourceTarget} ${destTarget} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t System.exit(1)\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t \/\/ cas ou ${sourceTarget} existe et est un fichier\n\t\t\t\t else if(new File(\"${sourceTarget}\").isFile()){\n\t\t\t\t\t def sourceTargetBasename= new File (\"sourceTarget\").getName()\n\t\t\t\t\t logger(\"TRACE\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t\t try {\n\t\t\t\t\t\t\t  ant.copy(verbose: \"true\",file:\"${sourceTarget}\", tofile: \"${destTarget}${fileSep}${sourceTargetBasename}\", overwrite:'true')\n\t\t\t\t\t\t \n\t\t\t\t\t }\n\t\t\t\t\t catch (Exception e) {\n\t\t\t\t\t\t logger(\"ERROR\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t\t System.exit(1)\n\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t else{\n\t\t\t\t\t logger(\"TRACE\",\"le fichier ou repertoire ${sourceTarget} n'existe pas. Pas de backup necessaire\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t } \n\t\t\t }\n\t\t\t \n\t\t }\n\t\t \n\t }\n\t \n }\t \n\n logger(\"INFO\",\"Restauration des fichiers sur M \",\"$VAR_DSTAGE_LogFileName\")\n VAR_DSTAGE_TargetServerList.split(\"\\\\|\").each{\n\t def String targetServerInst=it.trim()\n\t \n\t \/\/ Recuperation du Parent-SubDirectory\n\t \/\/ dans l'exemple on cherche d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\ le repertoire pkgParentSubDirectory=Projet_Initial_WAP-6037_0\n\t def String pkgParentSubDirectory=\"\"\n\t try{\n\t\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}\").eachDir {\n\t\t\t def File sdir=it\n\t\t\t pkgParentSubDirectory=sdir.getName()\n\t\t\t \/\/ !!!! Parent-SubDirectory trouve : on force l'arret de la boucle!!!!\n\t\t\t throw new Exception(\"Parent-SubDirectory trouve\")\n\t\t }\n\t\t \n\t }\n\t catch(Exception e){\n\t\t \/\/ Parent-SubDirectory trouve\n\t\t logger(\"DEBUG\",\"pkgParentSubDirectory=$pkgParentSubDirectory\",\"$VAR_DSTAGE_LogFileName\")\n\t }\n\t if(pkgParentSubDirectory==\"\"){\n\t\t logger(\"ERROR\",\"Impossible de trouver un sous repertoire dans${VAR_DSTAGE_Workspace}${fileSep}pkg\",\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t \n\t \/\/ Debut Step Restauration des fichiers sur M\n\t \/\/ def CST_DSTAGE_M_Folders=\"05-ArboDisques-M\\\\Suivi\\\\Master|05-ArboDisques-M\\\\Suivi\\\\TR|05-ArboDisques-M\\\\Suivi\\\\Validation\"\n     \/\/ VAR_DSTAGE_M_Target_Folder=\"${VAR_DSTAGE_Fichiers_Master}|${VAR_DSTAGE_Fichiers_TR}|${VAR_DSTAGE_Fichiers_Validation}\"\n\t logger(\"INFO\",\"Restauration des fichiers sur M sur $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t def DSTAGE_M_FoldersTab=VAR_CST_DSTAGE_M_Folders.split(\"\\\\|\")\n\t def DSTAGE_M_Target_FolderTab=VAR_DSTAGE_M_Target_Folder.split(\"\\\\|\")\n\t def int counter\n\t for (counter=0;counter<DSTAGE_M_FoldersTab.size();counter++){\n\t\t def String Dstage_Folder=DSTAGE_M_FoldersTab[counter]\n\t\t def String Dstage_M_Folder=DSTAGE_M_Target_FolderTab[counter]\n\t\t \n\t\t logger(\"INFO\",\"Recherche de la liste des fichiers (path relatif) a sauvegarder depuis bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t def dstage_backup_files=[]\n\t\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}\").eachFile() {\n\t\t\t dstage_backup_files.add(it.getName())\n\t\t\t \/\/println \"dirRelativePath=\"+it.getName()\n\t\t }\n\t\t logger(\"TRACE\",\"Liste dstage_backup_files \"+dstage_backup_files,\"$VAR_DSTAGE_LogFileName\")\n\t\t \n\t\t \/\/ Backup des fichiers de l'instance ${targetServerInst}\n\t\t \/\/logger(\"INFO\",\"Backup des fichiers de l'instance ${targetServerInst} \",\"$VAR_DSTAGE_LogFileName\")\n\t\t dstage_backup_files.each{ backupFile->\n\t\t\t def destTarget=\"${Dstage_M_Folder}\"\n\t\t\t def String  sourceTarget=\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}${fileSep}${backupFile}\"\n\t\t\t logger(\"INFO\",\"Restauration de  bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${Dstage_Folder}${fileSep}${backupFile}  dans ${Dstage_M_Folder}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t \/\/ cas ou ${sourceTarget} existe et est un repertoire\n\t\t\t if(new File(\"${sourceTarget}\").isDirectory()){\n\t\t\t\t logger(\"TRACE\",\"cp -r ${sourceTarget} ${destTarget}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t try {\n\t\t\t\t\t\t  ant.copy(verbose: \"true\", todir: \"${destTarget}\", overwrite:'true',includeEmptyDirs:'true') {\n\t\t\t\t\t\t\t fileset(dir: \"${sourceTarget}\"){ include(name:\"**\/*\") }\n\t\t\t\t\t\t }\n\t\t\t\t }\n\t\t\t\t catch (Exception e) {\n\t\t\t\t\t logger(\"ERROR\",\"cp -rf ${sourceTarget} ${destTarget} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t System.exit(1)\n\t\t\t\t }\n\t\t\t }\n\t\t\t \/\/ cas ou ${sourceTarget} existe et est un fichier\n\t\t\t else if(new File(\"${sourceTarget}\").isFile()){\n\t\t\t\t def sourceTargetBasename= new File (\"sourceTarget\").getName()\n\t\t\t\t logger(\"TRACE\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t def ant = new AntBuilder()\n\t\t\t\t try {\n\t\t\t\t\t\t  ant.copy(verbose: \"true\",file:\"${sourceTarget}\", tofile: \"${destTarget}${fileSep}${sourceTargetBasename}\", overwrite:'true')\n\t\t\t\t\t \n\t\t\t\t }\n\t\t\t\t catch (Exception e) {\n\t\t\t\t\t logger(\"ERROR\",\"cp -f ${sourceTarget} ${destTarget}${fileSep}${sourceTargetBasename} failed... \\n ${e.message}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t\t\t System.exit(1)\n\t\t\t\t }\n\t\t\t }\n\t\t\t else{\n\t\t\t\t logger(\"TRACE\",\"le fichier ou repertoire ${sourceTarget} n'existe pas. Pas de restauration necessaire\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t }\n\t\t }\n\t\t \n\t }\n }\n\/\/ Fin Step Backup des fichiers sur M\n\n \/\/ restauration ISX\n logger(\"INFO\",\"Restauration de l'ISX \",\"$VAR_DSTAGE_LogFileName\")\n \n VAR_DSTAGE_TargetServerList.split(\"\\\\|\").each{\n\t def String targetServerInst=it.trim()\n\t \n\n\t \/\/ Recuperation du Parent-SubDirectory\n\t \/\/ dans l'exemple on cherche d:\\Deploy\\Serena\\BL_PROJET_INITIAL_30.10.2013_15.21.51_9470\\pkg\\ le repertoire pkgParentSubDirectory=Projet_Initial_WAP-6037_0\n\t def String pkgParentSubDirectory=\"\"\n\t try{\n\t\t new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}\").eachDir {\n\t\t\t def File sdir=it\n\t\t\t pkgParentSubDirectory=sdir.getName()\n\t\t\t \/\/ !!!! Parent-SubDirectory trouve : on force l'arret de la boucle!!!!\n\t\t\t throw new Exception(\"Parent-SubDirectory trouve\")\n\t\t }\n\t\t \n\t }\n\t catch(Exception e){\n\t\t \/\/ Parent-SubDirectory trouve\n\t\t logger(\"DEBUG\",\"pkgParentSubDirectory=$pkgParentSubDirectory\",\"$VAR_DSTAGE_LogFileName\")\n\t }\n\t if(pkgParentSubDirectory==\"\"){\n\t\t logger(\"ERROR\",\"Impossible de trouver un sous repertoire dans${VAR_DSTAGE_Workspace}${fileSep}pkg\",\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t \n\t \n\t\n\t logger(\"INFO\",\"Restauration de l'ISX sur $targetServerInst \",\"$VAR_DSTAGE_LogFileName\")\n\t try{\n\t\t def command = \"\"\"cmd \/c ${VAR_CST_DSTAGE_IsTool_Path} \n           import -domain ${targetServerInst}:9080 -username ${SBM_Login} -password ${SBM_Password} -verbose -archive \"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}${fileSep}${SBM_BckPackage}.zip\" -replace -ds '\"${targetServerInst}:31538\/${SBM_Projet}\"'  \"\"\" \n\n\t\t logger(\"INFO\",\"Import ISX\",\"$VAR_DSTAGE_LogFileName\")\n\n\t\t \n\t\t StringBuffer sbout = new StringBuffer()\n\t\t StringBuffer sberr = new StringBuffer()\n\t\t \/\/ lancement de la commandline dans un thread en background\n\t\t def process = command.execute(null, new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}\")) \/\/ Call *execute* on the string\n\t\t \/\/ Rq: il est preferable d'utiliser des StringBuffer pour ne pas saturer les buffers de sortie du thread en chrage de la cmmande\n\t\t \/\/ et d'appeler la method consumeProcessOutputStream et consumeProcessErrorStream\n\t\t def tout = process.consumeProcessOutputStream(sbout)\n\t\t def terr = process.consumeProcessErrorStream(sberr)\n\t\t \/\/ attente de termainison du thread\n\t\t  process.waitFor()                               \/\/ Wait for the command to finish\n\t\t\/\/ Obtain status and output\n\t\t  def value = process.exitValue()\n\n\t\t  logger(\"TRACE\",\"return code: ${value}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t  if(value==0){\n\t\t\t   logger(\"TRACE\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t   logger(\"TRACE\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t   logger(\"INF0\",\"Import sur $targetServerInst reussie\",\"$VAR_DSTAGE_LogFileName\")\n\t\t  }\n\t\t  else{\n\t\t\t  \n\t\t\t  logger(\"ERROR\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  logger(\"ERROR\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  logger(\"ERROR\",\"echec de l'import sur $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  System.exit(1)\n\t\t  }\n\t }\n\t catch (Exception e){\n\t\t logger(\"ERROR\",e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n\t \n\t logger(\"INFO\",\"Complilation de l'ISX sur $targetServerInst \",\"$VAR_DSTAGE_LogFileName\")\n\t try{\n\t\t command=\"\"\"dscc \/d ${targetServerInst}:${VAR_CST_DSTAGE_Port_Domaine} \/H ${targetServerInst} \/U ${SBM_Login} \/P ${SBM_Password} ${SBM_Projet} \/J * \/R * \/OUC \"\"\"\n\n\n\t\t logger(\"INFO\",\"compilation des jobs non compiles sur ${targetServerInst}\",\"$VAR_DSTAGE_LogFileName\")\n\n\t\t \n\t\t StringBuffer sbout = new StringBuffer()\n\t\t StringBuffer sberr = new StringBuffer()\n\t\t \/\/ lancement de la commandline dans un thread en background\n\t\t def process = command.execute(null, new File(\"${VAR_DSTAGE_Workspace}${fileSep}pkg${fileSep}bck${fileSep}${targetServerInst}${fileSep}${pkgParentSubDirectory}\")) \/\/ Call *execute* on the string\n\t\t \/\/ Rq: il est preferable d'utiliser des StringBuffer pour ne pas saturer les buffers de sortie du thread en chrage de la cmmande\n\t\t \/\/ et d'appeler la method consumeProcessOutputStream et consumeProcessErrorStream\n\t\t def tout = process.consumeProcessOutputStream(sbout)\n\t\t def terr = process.consumeProcessErrorStream(sberr)\n\t\t \/\/ attente de termainison du thread\n\t\t  process.waitFor()                               \/\/ Wait for the command to finish\n\t\t\/\/ Obtain status and output\n\t\t  def value = process.exitValue()\n\n\t\t  logger(\"TRACE\",\"return code: ${value}\",\"$VAR_DSTAGE_LogFileName\")\n\t\t  if(value==0){\n\t\t\t   logger(\"TRACE\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t   logger(\"TRACE\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t   logger(\"INF0\",\"Import sur $targetServerInst reussie\",\"$VAR_DSTAGE_LogFileName\")\n\t\t  }\n\t\t  else{\n\t\t\t  \n\t\t\t  logger(\"ERROR\",'std err: ' +sberr.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  logger(\"ERROR\",'std out: ' +sbout.toString(),\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  logger(\"ERROR\",\"echec de l'import sur $targetServerInst\",\"$VAR_DSTAGE_LogFileName\")\n\t\t\t  System.exit(1)\n\t\t  }\n\t }\n\t catch (Exception e){\n\t\t logger(\"ERROR\",e.getMessage(),\"$VAR_DSTAGE_LogFileName\")\n\t\t System.exit(1)\n\t }\n }\/\/ end loop for each TargetServer\n \n logger(\"INFO\",\"Restauration OK \",\"$VAR_DSTAGE_LogFileName\")\n System.exit(0)"
                                    },
                                    "type": "plugin",
                                    "name": "DeployPackage",
                                    "children": []
                                },
                                {
                                    "sleepTime": "1",
                                    "type": "processSleep",
                                    "name": "f77ccef860a3a1d0b1ccb660e26d32",
                                    "children": []
                                },
                                {
                                    "allowFailure": false,
                                    "useImpersonation": false,
                                    "showHidden": false,
                                    "impersonationUseSudo": false,
                                    "impersonationUseSsh": false,
                                    "commandName": "Run Groovy Advance Script",
                                    "pluginName": "GroovyAdvance",
                                    "pluginVersion": 2,
                                    "properties": {
                                        "externalLibJARList": "",
                                        "externalDirList": "",
                                        "scriptBody": "\/\/chargement des libs\n${p:lib_logger}\n\n\/\/ pas de $LogFileName - le fichier peut ne pas exister\nfileSep=File.separator\n\n\/\/ input SBM\nlogger(\"TRACE\",\"Chargement des inputs SBM\")\n\n\n\n\/\/  Env. Cst\nlogger(\"TRACE\",\"Chargement constantes d'environnement\")\n\n\n\n\/\/ VARIABLES\nlogger(\"TRACE\",\"Chargement variables\")\n\/\/ definition des variables necessaires au calcul des OutProps\ndef VarL_DSTAGE_Fichiers_Manuels_Directory=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\"\ndef VarL_DSTAGE_Fichiers_Sortie=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\"\ndef VarL_DSTAGE_Fichiers_Temporaires=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\"\ndef VarL_DSTAGE_Fichiers_Stockage=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\"\ndef VarL_DSTAGE_Fichiers_Sql=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\"\ndef VarL_DSTAGE_Fichiers_Init=\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\"\ndef VarL_DSTAGE_Fichiers_Master=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\"\ndef VarL_DSTAGE_Fichiers_TR=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR}\"\ndef VarL_DSTAGE_Fichiers_Validation=\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\"\ndef VarL_DSTAGE_Workspace=\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\"\n\n\/\/ variable en OutProps\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Manuels_Directory\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_manuels\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Sortie\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_sortie\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Temporaires\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Fichiers_temporaires\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Stockage\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Stockage\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Sql\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}SQL\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Init\",\"${p:environment\/CST_Nas_Projet_Path}${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Init\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Hashcode1\",\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_hashcodes\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Instance_Temporaires1\",\"DS\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}fichiers_temporaires\")\noutProps.setProperty(\"VAR_DSTAGE_Compte_Rendu1\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Compte Rendu\")\noutProps.setProperty(\"VAR_DSTAGE_Master1\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\")\noutProps.setProperty(\"VAR_DSTAGE_TR\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Validation1\",\"Masters\\$${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\")\noutProps.setProperty(\"VAR_DSTAGE_backupfull_file\",\"backupfull_${p:SBM_BckPackage}.txt\")\noutProps.setProperty(\"VAR_DSTAGE_Nas_Target_Folder\",\"${VarL_DSTAGE_Fichiers_Manuels_Directory}|${VarL_DSTAGE_Fichiers_Sortie}|${VarL_DSTAGE_Fichiers_Temporaires}|${VarL_DSTAGE_Fichiers_Init}|${VarL_DSTAGE_Fichiers_Sql}|${VarL_DSTAGE_Fichiers_Stockage}\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Master\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Master\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_TR\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}TR\")\noutProps.setProperty(\"VAR_DSTAGE_Fichiers_Validation\",\"M:${fileSep}${fileSep}MASTERS${fileSep}${fileSep}${p:SBM_Projet}${fileSep}${fileSep}Suivi${fileSep}${fileSep}Validation\")\noutProps.setProperty(\"VAR_DSTAGE_M_Target_Folder\",\"${VarL_DSTAGE_Fichiers_Master}|${VarL_DSTAGE_Fichiers_TR}|${VarL_DSTAGE_Fichiers_Validation}\")\noutProps.setProperty(\"VAR_DSTAGE_Workspace\",\"${p:environment\/CST_DSTAGE_Root_Directory}${fileSep}${fileSep}${p:SBM_BaselineId}\")\noutProps.setProperty(\"VAR_DSTAGE_LogFileName\",\"${VarL_DSTAGE_Workspace}${fileSep}${fileSep}log${fileSep}${fileSep}${p:SBM_Nom_Log}\")\n\t\n\/\/ liste des serveurs cibles\n\/\/ Combien de SBM_Target_Server necessaire?\nlogger(\"INFO\",\"Calcul dynamique de la liste des Targets serveurs\")\ndef VarL_DSTAGE_TargetServerTab=[]\nif(\"${p:SBM_Target_Server}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server} \")\n\t\n}\nif(\"${p:SBM_Target_Server2}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server2}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server2} \")\n\t\n}\nif(\"${p:SBM_Target_Server3}\" != \"\"){VarL_DSTAGE_TargetServerTab.add(\"${p:SBM_Target_Server3}\".trim())\n\tlogger(\"INFO\",\"Targets serveur:${p:SBM_Target_Server3} \")\n}\n\ndef VarL_DSTAGE_TargetServerList=\"\"\nVarL_DSTAGE_TargetServerTab.each{\n\tif(VarL_DSTAGE_TargetServerList == \"\"){ VarL_DSTAGE_TargetServerList=it.trim()}else{VarL_DSTAGE_TargetServerList=VarL_DSTAGE_TargetServerList+'|'+it.trim()}\n}\n\n\/\/ out Properties target server list\noutProps.setProperty(\"VAR_DSTAGE_TargetServerList\",\"${VarL_DSTAGE_TargetServerList}\")\n\n\n\n\n"
                                    },
                                    "type": "plugin",
                                    "name": "InitStep",
                                    "children": []
                                }
                            ]
                        }
                    }
                ]
            },
            "envPropDefs": [
                {
                    "name": "Cst_DIM_SSHHost",
                    "label": "Cst_DIM_SSHHost",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPort",
                    "label": "Cst_DIM_SSHPort",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHUser",
                    "label": "Cst_DIM_SSHUser",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassword",
                    "label": "Cst_DIM_SSHPassword",
                    "type": "TEXT",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPrivateKey",
                    "label": "Cst_DIM_SSHPrivateKey",
                    "type": "TEXT",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SASDepot",
                    "label": "Cst_DIM_SASDepot",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassPhrase",
                    "label": "Cst_DIM_SSHPassPhrase",
                    "type": "TEXT",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHTrust",
                    "label": "Cst_DIM_SSHTrust",
                    "type": "CHECKBOX",
                    "value": "true",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_tmp_directories",
                    "label": "CST_DSTAGE_tmp_directories",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_Root_Directory",
                    "label": "CST_DSTAGE_Root_Directory",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_ArboDisque_Files",
                    "label": "CST_DSTAGE_ArboDisque_Files",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_NAS_Folders",
                    "label": "CST_DSTAGE_NAS_Folders",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_M_Folders",
                    "label": "CST_DSTAGE_M_Folders",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_IsTool_Path",
                    "label": "CST_DSTAGE_IsTool_Path",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_Port_Domaine",
                    "label": "CST_DSTAGE_Port_Domaine",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_Nas_Projet_Path",
                    "label": "CST_Nas_Projet_Path",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "CST_DSTAGE_Environnement",
                    "label": "CST_DSTAGE_Environnement",
                    "type": "TEXT",
                    "required": true,
                    "description": ""
                }
            ],
            "versionPropDefs": [],
            "propSheetGroup": {"propSheets": [
                {
                    "name": "code_station",
                    "properties": [{
                        "name": "repository",
                        "value": "f854f2ae-ad9c-402c-9419-4886d35f651d",
                        "description": "",
                        "secure": false
                    }]
                },
                {
                    "name": "template",
                    "properties": []
                },
                {
                    "name": "custom",
                    "properties": []
                }
            ]},
            "processes": [
                {
                    "name": "BCK - D2U",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BckPackage",
                            "label": "SBM_BckPackage",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "ae9bfabf9bb3531790f37abfd9be40",
                                "from": "Transfert Bck Package to Unix Dest",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "Transfert Bck Package to Unix Dest",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "Transfert Bck Package to Unix Dest",
                                "x": -21,
                                "y": 191
                            },
                            {
                                "name": "ae9bfabf9bb3531790f37abfd9be40",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [],
                        "type": "graph",
                        "name": "5a6c9005-cde4-4ebd-a500-e7ac675f5f92",
                        "children": [
                            {
                                "type": "finish",
                                "name": "ae9bfabf9bb3531790f37abfd9be40",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-PutOneFileIntoRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                    "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                    "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                    "sshPassword": "pbe{NXNEUvJdEGW\/W+BLu1sBXEZXKcGbbPBAhoVeuS6O6xId0oxnoSA27c\/VEmCoM+6vOwIW5nn6r0E=}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{Xmf9eBRW33PHS2V3YWHBVqnU0AfwzdDa}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "localFileStr": "${p:environment\/CST_DSTAGE_Root_Directory}\\\\${p:SBM_BaselineId}\\\\tmp\\\\${p:SBM_BckPackage}.zip",
                                    "remoteFileStr": "\/tmp\/${p:SBM_BckPackage}.zip"
                                },
                                "type": "plugin",
                                "name": "Transfert Bck Package to Unix Dest",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "LOG - D2U",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert Log to Unix Dest",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "ae9bfabf9bb3531790f37abfd9be40",
                                "from": "Transfert Log to Unix Dest",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "Transfert Log to Unix Dest",
                                "x": -21,
                                "y": 191
                            },
                            {
                                "name": "ae9bfabf9bb3531790f37abfd9be40",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [
                            {
                                "name": "Transfert Log to Unix Dest",
                                "width": 310,
                                "height": 60
                            },
                            {
                                "name": "ae9bfabf9bb3531790f37abfd9be40",
                                "width": 80,
                                "height": 50
                            }
                        ],
                        "type": "graph",
                        "name": "7b39556c-37e9-4ef6-84f6-1b3673a6857f",
                        "children": [
                            {
                                "type": "finish",
                                "name": "ae9bfabf9bb3531790f37abfd9be40",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-PutOneFileIntoRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                    "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                    "sshUser": "${p:environment\/Cst_DIM_SSHUser}",
                                    "sshPassword": "pbe{pG60SipR1G9UUWNkh2sVWOsJ0OfgLLNL199U+4pYvPqG0XCrvDtU2zyfcVAJyc\/C89hDHkBuC0s=}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{mE+CSmtYM3QvYpdsel+BUFK4YGDyKibp}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "localFileStr": "${p:environment\/CST_DSTAGE_Root_Directory}\\\\${p:SBM_BaselineId}\\\\log\\\\${p:SBM_Nom_Log}",
                                    "remoteFileStr": "\/tmp\/${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "Transfert Log to Unix Dest",
                                "children": []
                            }
                        ]
                    }
                }
            ],
            "taskDefs": [],
            "configTemplates": []
        },
        {
            "entityType": "Component",
            "name": "SBM_LOGS",
            "created": 1395933002869,
            "importAutomatically": false,
            "useVfs": true,
            "active": true,
            "deleted": false,
            "defaultVersionType": "FULL",
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "envPropDefs": [
                {
                    "name": "Cst_DIM_SSHHost",
                    "label": "Cst_DIM_SSHHost",
                    "type": "TEXT",
                    "value": "lr2te614.groupe.generali.fr",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPort",
                    "label": "Cst_DIM_SSHPort",
                    "type": "TEXT",
                    "value": "22",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHUser",
                    "label": "Cst_DIM_SSHUser",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassword",
                    "label": "Cst_DIM_SSHPassword",
                    "type": "TEXT",
                    "value": "dmsys",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPrivateKey",
                    "label": "Cst_DIM_SSHPrivateKey",
                    "type": "TEXT",
                    "value": "~\/.ssh\/id_rsa",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHPassPhrase",
                    "label": "Cst_DIM_SSHPassPhrase",
                    "type": "TEXT",
                    "value": " ",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "Cst_DIM_SSHTrust",
                    "label": "Cst_DIM_SSHTrust",
                    "type": "CHECKBOX",
                    "value": "true",
                    "required": true,
                    "description": ""
                }
            ],
            "versionPropDefs": [],
            "propSheetGroup": {"propSheets": [
                {
                    "name": "code_station",
                    "properties": [{
                        "name": "repository",
                        "value": "83d40597-352b-47f3-b308-715a73c58f93",
                        "description": "",
                        "secure": false
                    }]
                },
                {
                    "name": "template",
                    "properties": []
                },
                {
                    "name": "custom",
                    "properties": [
                        {
                            "name": "Cst_Agent_Pwd",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Agent_User",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_SBM_LogDir",
                            "value": "D:\\\\\\\\products\\\\\\\\LOG_NOLIO\\\\\\\\",
                            "description": "",
                            "secure": false
                        }
                    ]
                }
            ]},
            "processes": [
                {
                    "name": "DOLLARU_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "TransfertLog",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "70f775e4bd8de0d86b5be902f6f89e",
                                "from": "TransfertLog",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "70f775e4bd8de0d86b5be902f6f89e",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "TransfertLog",
                                "x": -53,
                                "y": 199
                            }
                        ],
                        "sizes": [
                            {
                                "name": "70f775e4bd8de0d86b5be902f6f89e",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "TransfertLog",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "0628afd3-c940-4da2-9816-2febab67c491",
                        "children": [
                            {
                                "type": "finish",
                                "name": "70f775e4bd8de0d86b5be902f6f89e",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "deploy",
                                    "sshPassword": "pbe{Mlw9WCdxxExlcHNS\/GbyUGNLnMg7qVv8}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{HnkFTzFew3fWS95UFl3jbJkVgL8sQiXK}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "true",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:SBM_BaselineId}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "TransfertLog",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "DSTAGE_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [{
                        "name": "SBM_Nom_Log",
                        "label": "SBM_Nom_Log",
                        "type": "TEXT",
                        "required": true,
                        "description": ""
                    }],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "from": "Log Transfert Unix to LogNolio",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "Log Transfert Unix to LogNolio",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "x": 0,
                                "y": 430
                            },
                            {
                                "name": "Log Transfert Unix to LogNolio",
                                "x": -120,
                                "y": 180
                            }
                        ],
                        "sizes": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Log Transfert Unix to LogNolio",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "df37a9df-de81-476f-94ff-9032b00a49c9",
                        "children": [
                            {
                                "type": "finish",
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                    "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                    "sshUser": "${p:component\/Cst_Agent_User}",
                                    "sshPassword": "pbe{dmwkWrRlmVkpYAlMjFOBbN9HGlGmw1lp9+NkrUv4uAi98DLXaRlPRr3V8u2mPKB6}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{X1EvTg9XC1SgTGp6rnIEVx+5pGlFRVh6}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "\/tmp\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "Log Transfert Unix to LogNolio",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "DSTAGE_LOGS_BCK",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [{
                        "name": "SBM_BckPackage",
                        "label": "SBM_BckPackage",
                        "type": "TEXT",
                        "required": true,
                        "description": ""
                    }],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert BCK to LogNolio",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "from": "Transfert BCK to LogNolio",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "x": 0,
                                "y": 430
                            },
                            {
                                "name": "Transfert BCK to LogNolio",
                                "x": -120,
                                "y": 290
                            }
                        ],
                        "sizes": [
                            {
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert BCK to LogNolio",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "e4ed5ecc-18ef-45c2-a057-4ed4390e4580",
                        "children": [
                            {
                                "type": "finish",
                                "name": "b196e0505dba33b0dfe3ae2dbfea8c",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:environment\/Cst_DIM_SSHHost}",
                                    "sshPort": "${p:environment\/Cst_DIM_SSHPort}",
                                    "sshUser": "${p:component\/Cst_Agent_User}",
                                    "sshPassword": "pbe{zFqOYYhnbl9ocQJJFmhFaglXSwEY8968Zs6LBXPRe1nzboObamKHY26AsjEFDTii}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{jnBHd8hvcG40TFlwA1EXZBHxmokPjzL\/}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "\/tmp\/${p:SBM_BckPackage}.zip",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_BckPackage}.zip"
                                },
                                "type": "plugin",
                                "name": "Transfert BCK to LogNolio",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "EAIV8_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "EAI_TempBaseDir",
                            "label": "EAI_TempBaseDir",
                            "type": "TEXT",
                            "value": "\/tmp\/serena",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "RemoveLog",
                                "from": "GetLogFile",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "GetReportFromEAIV8",
                                "from": "GetReportName",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "RemoveLog",
                                "from": "GetReportFromEAIV8",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "GetReportName",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "be1abfb5a8aa5c6399ee624490c78a",
                                "from": "RemoveLog",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "GetLogFile",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "be1abfb5a8aa5c6399ee624490c78a",
                                "x": 0,
                                "y": 650
                            },
                            {
                                "name": "GetReportFromEAIV8",
                                "x": 150,
                                "y": 360
                            },
                            {
                                "name": "GetLogFile",
                                "x": -370.5,
                                "y": 160
                            },
                            {
                                "name": "RemoveLog",
                                "x": -100,
                                "y": 540
                            },
                            {
                                "name": "GetReportName",
                                "x": 180,
                                "y": 210
                            }
                        ],
                        "sizes": [
                            {
                                "name": "RemoveLog",
                                "width": 280,
                                "height": 60
                            },
                            {
                                "name": "GetLogFile",
                                "width": 310,
                                "height": 60
                            },
                            {
                                "name": "GetReportName",
                                "width": 280,
                                "height": 60
                            },
                            {
                                "name": "GetReportFromEAIV8",
                                "width": 310,
                                "height": 60
                            },
                            {
                                "name": "be1abfb5a8aa5c6399ee624490c78a",
                                "width": 80,
                                "height": 50
                            }
                        ],
                        "type": "graph",
                        "name": "3b4e6773-8a89-4b4a-b838-af057c34eb4a",
                        "children": [
                            {
                                "type": "finish",
                                "name": "be1abfb5a8aa5c6399ee624490c78a",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{bFN3Sx5XMW+SYP9yPGzKdH\/8aSJRUhO1\/z\/BTnvk7VOBU48L2X+HFg==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{PGl0bgNpnXf7Vtl1jV4QTAooh4Ygyq6N}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:EAI_TempBaseDir}\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "GetLogFile",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "postProcessingScript": "a3ce6558-98b7-4202-b3db-76af3558be94",
                                "commandName": "SSH-RemoteCmdLineExecution",
                                "pluginName": "SSH",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{VlIaWbxyZVqrXC5z2FRgW2S65RxZ8MXvN4Z2r2KEtGBcPIfBkR\/X6A==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{onFEeaBcvmdZVg1PnV99Y3rsdDrP9hvt}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshTimeout": "0",
                                    "sshUsepty": "false",
                                    "cmdline": "LogFileName=\"${p:EAI_TempBaseDir}\/${p:SBM_Nom_Log}\"\necho \"LogFileName:${LogFileName}\"\n\n#EAI_WEBMETHOD_LOG=$(cat ${LogFileName} | awk '\/Deploy Deployment Candidate\\]\/,\/.xml\/' | grep -v 'Deploy Deployment Candidate' | grep -v 'INFO' | sed -e 's\/^.*:\/\/g' -e 's\/ \/\/g' | awk '{print $0}')\n#if [[ -z $EAI_WEBMETHOD_LOG ]] ; then  \n#\tEAI_WEBMETHOD_LOG=$(cat ${LogFileName} | awk '\/Simulate Deployment Candidate\\]\/,\/.xml\/' | grep -v 'Simulate Deployment Candidate' | grep -v 'INFO' | sed -e 's\/^.*:\/\/g' -e 's\/ \/\/g' | awk '{print $0}')\n#fi\n\nEAI_WEBMETHOD_LOG=$(grep -i '.*report.*.xml' ${LogFileName} | tr -d ' ' )\necho \"EAI_WEBMETHOD_LOG=$EAI_WEBMETHOD_LOG\"",
                                    "sshSuccesReturnCodeStr": "0",
                                    "sshOutput": "",
                                    "sshAppend": "false",
                                    "sshVerbose": "false",
                                    "silenceMode": "false",
                                    "optionStoreOutProp": "false"
                                },
                                "type": "plugin",
                                "name": "GetReportName",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{zmHnYFpvp1UKY91J8l+oV2\/olf6xOTLWx5gXsGLloe0NNtSCeeY6sw==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{jUu7Sr1aCmC3b6JqR2GNTAXZOnzMuWxw}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:GetReportName\/Var_EAI_WEBMETHOD_LOG}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}.html"
                                },
                                "type": "plugin",
                                "name": "GetReportFromEAIV8",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SSH-RemoteCmdLineExecution",
                                "pluginName": "SSH",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:component\/Cst_Agent_User}",
                                    "sshPassword": "pbe{1XHldfFp426aSft5Y1HcZ3XO45lWsgZ5OGTKystTkjBT9+AA3ndKw56bBrc0Piy5}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{umIzcWl6Rl35dRBmeEg4a6BlnwbN4Psm}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshTimeout": "0",
                                    "sshUsepty": "false",
                                    "cmdline": "rm  ${p:EAI_TempBaseDir}\/${p:SBM_Nom_Log} 2>\/dev\/null",
                                    "sshSuccesReturnCodeStr": "0",
                                    "sshOutput": "",
                                    "sshAppend": "false",
                                    "sshVerbose": "false",
                                    "silenceMode": "false",
                                    "optionStoreOutProp": "false"
                                },
                                "type": "plugin",
                                "name": "RemoveLog",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "JND_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "GetLogsFromJnd",
                                "from": "InitStep",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "2ccdb601284a1b118164565ed7a31e",
                                "from": "GetLogsFromJnd",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "InitStep",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "GetLogsFromJnd",
                                "x": -97.5,
                                "y": 300
                            },
                            {
                                "name": "InitStep",
                                "x": -71.5,
                                "y": 119
                            },
                            {
                                "name": "2ccdb601284a1b118164565ed7a31e",
                                "x": 0,
                                "y": 445
                            }
                        ],
                        "sizes": [
                            {
                                "name": "2ccdb601284a1b118164565ed7a31e",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "InitStep",
                                "width": 210,
                                "height": 60
                            },
                            {
                                "name": "GetLogsFromJnd",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "618f7107-cbc1-41f2-a636-b24b0fe04213",
                        "children": [
                            {
                                "type": "finish",
                                "name": "2ccdb601284a1b118164565ed7a31e",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{7FHvV8J0W2vVcm5Jc04zW1jzZcij68EA995RihBRinq9LLfASRmdDg==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{nWKzYa5lHmnZczVt9lgpXK4poGatnO4h}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:InitStep\/Nom_Projet}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "GetLogsFromJnd",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "Run Groovy Script",
                                "pluginName": "GroovyAdvance",
                                "pluginVersion": 2,
                                "properties": {"scriptBody": "def myRegEx = \/(.*)-$\/\ndef String tmpSBM_Projet=\"${p:SBM_Projet}\"\nmatcher = ( tmpSBM_Projet =~ myRegEx )\nif (matcher.matches()) {\n\ttmpSBM_Projet=matcher[0][1]\n}\noutProps.setProperty(\"Nom_Projet\",\"${tmpSBM_Projet}\")\n"},
                                "type": "plugin",
                                "name": "InitStep",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "ORA_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            },
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [],
                        "type": "graph",
                        "name": "f8a3d03b-076c-4f7b-ab02-94c064c50866",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{4GFgXXh6jF1ETIl6ingRaWobRRRoVx4ACmROvKbnnVshTS2LG7GwnQ==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{OUw5d5VsoGhXdDFzbHlyWMMqub9YNAvj}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:SBM_Projet}\/${p:SBM_BaselineId}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "ORA_LOGS_SQL",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            }
                        ],
                        "sizes": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert Logs",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "db00e652-0e05-4a8e-bdb2-9a539f8a52d2",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{6GJ7VLhelUhVahFU4XQBXcHQ4M4JiNdp\/1X9oXtThP07onaFLkcugA==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{pWjYUd9dm15lUZV2Xl9lerKeQn95lDsv}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_Depot}\/${p:SBM_Projet}\/${p:SBM_BaselineId}\/log\/${p:SBM_Nom_Log}.zip",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}.zip"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "SYB_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SybLogFileName",
                            "label": "SybLogFileName",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            },
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            }
                        ],
                        "sizes": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert Logs",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "c9b94cde-cfbc-47ad-bfcc-8bc813398dbc",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{N2OKUkROnXOsWhx4nlYGXQs7sZaO\/3d2dFJM7sCWM\/POWL6EkSKAIQ==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{NFriWThMEknFeNlsnW2dV+6wJjy14KSB}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SybLogFileName}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "SYB_LOGS_SQL",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_Depot",
                            "label": "SBM_Depot",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BaselineId",
                            "label": "SBM_BaselineId",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Server",
                            "label": "SBM_Server",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Login",
                            "label": "SBM_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Password",
                            "label": "SBM_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SybLogFileName",
                            "label": "SybLogFileName",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "Transfert Logs",
                                "type": "ALWAYS",
                                "value": ""
                            },
                            {
                                "to": "cbc388adb1e74e19c3fb646bc720b3",
                                "from": "Transfert Logs",
                                "type": "SUCCESS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "Transfert Logs",
                                "x": -265,
                                "y": 180
                            },
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [
                            {
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "Transfert Logs",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "3ced2c08-16d0-4d41-b762-4f7ee1e93585",
                        "children": [
                            {
                                "type": "finish",
                                "name": "cbc388adb1e74e19c3fb646bc720b3",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_Server}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_Login}",
                                    "sshPassword": "pbe{9XPHaBh4cWggd15SL09zbDrfKD1LOhFmBiVwyoNFvZmUJIQ7PMTpbA==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{NnKJVXtycXe0deJQqE+lbwd65eWf1aFc}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "false",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SybLogFileName}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}.zip"
                                },
                                "type": "plugin",
                                "name": "Transfert Logs",
                                "children": []
                            }
                        ]
                    }
                },
                {
                    "name": "WSTOOLS_LOGS",
                    "description": "",
                    "defaultWorkingDir": "${p:resource\/work.dir}\/${p:component.name}",
                    "takesVersion": false,
                    "status": "",
                    "active": true,
                    "propDefs": [
                        {
                            "name": "SBM_BATCH_RemoteServer",
                            "label": "SBM_BATCH_RemoteServer",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BATCH_Login",
                            "label": "SBM_BATCH_Login",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_BATCH_Password",
                            "label": "SBM_BATCH_Password",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Projet",
                            "label": "SBM_Projet",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        },
                        {
                            "name": "SBM_Nom_Log",
                            "label": "SBM_Nom_Log",
                            "type": "TEXT",
                            "required": true,
                            "description": ""
                        }
                    ],
                    "rootActivity": {
                        "edges": [
                            {
                                "to": "ef05e3d27b0b003bcb10aac3083df5",
                                "from": "TransfertLog",
                                "type": "SUCCESS",
                                "value": ""
                            },
                            {
                                "to": "TransfertLog",
                                "type": "ALWAYS",
                                "value": ""
                            }
                        ],
                        "offsets": [
                            {
                                "name": "TransfertLog",
                                "x": -22,
                                "y": 192
                            },
                            {
                                "name": "ef05e3d27b0b003bcb10aac3083df5",
                                "x": 0,
                                "y": 420
                            }
                        ],
                        "sizes": [
                            {
                                "name": "ef05e3d27b0b003bcb10aac3083df5",
                                "width": 80,
                                "height": 50
                            },
                            {
                                "name": "TransfertLog",
                                "width": 310,
                                "height": 60
                            }
                        ],
                        "type": "graph",
                        "name": "edd5fc4b-eb64-4dc3-8416-16e11f1fadeb",
                        "children": [
                            {
                                "type": "finish",
                                "name": "ef05e3d27b0b003bcb10aac3083df5",
                                "children": []
                            },
                            {
                                "allowFailure": false,
                                "useImpersonation": false,
                                "showHidden": false,
                                "impersonationUseSudo": false,
                                "impersonationUseSsh": false,
                                "commandName": "SCP-GetOneFileFromRemoteDirectory",
                                "pluginName": "SCP",
                                "pluginVersion": 1,
                                "properties": {
                                    "sshHost": "${p:SBM_BATCH_RemoteServer}",
                                    "sshPort": "22",
                                    "sshUser": "${p:SBM_BATCH_Login}",
                                    "sshPassword": "pbe{KWx8bSdrjnhbYUdZe0qSY0XLCkqKXWqbCI\/6EXjxxnduuP3YYlZTiQ==}",
                                    "sshKeyfile": "",
                                    "sshPassphrase": "pbe{g13NZwdaQ2Imd0VWEnXeejg65aacXgGD}",
                                    "sshTrust": "true",
                                    "sshKnownhosts": "",
                                    "sshVerbose": "true",
                                    "sshSftp": "false",
                                    "sshPreserveLastModified": "false",
                                    "remoteSrcFile": "${p:SBM_BATCH_BatchRoot}\/${p:SBM_Projet}\/log\/${p:SBM_Nom_Log}",
                                    "localDestFile": "${p:component\/Cst_SBM_LogDir}\\\\${p:SBM_Nom_Log}"
                                },
                                "type": "plugin",
                                "name": "TransfertLog",
                                "children": []
                            }
                        ]
                    }
                }
            ],
            "taskDefs": [],
            "configTemplates": []
        }
    ],
    "environments": [
        {
            "name": "DSTAGE-REC",
            "color": "#da70d6",
            "requireApprovals": false,
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "order": 1,
            "active": true,
            "propSheet": {"properties": []},
            "componentEnvironmentMappings": [
                {
                    "componentName": "DSTAGE",
                    "resource": "dsi-w7014appv0"
                },
                {
                    "componentName": "DIMENSION",
                    "resource": "lr2te614"
                },
                {
                    "componentName": "SBM_LOGS",
                    "resource": "dsi-w2358appv0"
                }
            ],
            "componentPropSheets": [
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_NETWORK_NODE",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_basedir",
                            "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dbname",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dsn",
                            "value": "INSSRAP0",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_exe",
                            "value": "dmcli",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_pass",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_profile",
                            "value": "dmprofile",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_tmpdir",
                            "value": "\/tmp\/serena",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_user",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_agent_node_depot",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_pass",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_user",
                            "value": "root",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_sas_depot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DIMENSION"
                },
                {
                    "properties": [
                        {
                            "name": "CST_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_ArboDisque_Files",
                            "value": "03-ArboDisques-S\\\\\\\\fichiers_hashcodes| 03-ArboDisques-S\\\\\\\\fichiers_temporaires| 05-ArboDisques-M\\\\\\\\Compte Rendu| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Master| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\TR| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Validation",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Environnement",
                            "value": "Recette|Production|Pre-Production",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_IsTool_Path",
                            "value": "D:\\\\\\\\IS\\\\\\\\Clients\\\\\\\\istools\\\\\\\\cli\\\\\\\\istool.exe",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_M_Folders",
                            "value": "05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Master|05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\TR|05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Validation",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_NAS_Folders",
                            "value": "02-NAS\\\\\\\\Fichiers_manuels|02-NAS\\\\\\\\Fichiers_sortie|02-NAS\\\\\\\\Fichiers_temporaires|02-NAS\\\\\\\\Init|02-NAS\\\\\\\\Sql|02-NAS\\\\\\\\Stockage",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Port_Domaine",
                            "value": "9080",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Root_Directory",
                            "value": "D:\\\\\\\\Deploy\\\\\\\\Serena\\\\\\\\",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_tmp_directories",
                            "value": "tmp|tag|bck|log|tmp\/init|pkg",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_Nas_Projet_Path",
                            "value": "N:\\\\\\\\DS",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "deploy",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DSTAGE"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": "  ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "SBM_LOGS"
                }
            ]
        },
        {
            "name": "DSTAGE-PPROD",
            "color": "#9932cc",
            "requireApprovals": false,
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "order": 2,
            "active": true,
            "propSheet": {"properties": []},
            "componentEnvironmentMappings": [
                {
                    "componentName": "DIMENSION",
                    "resource": "lr2te614"
                },
                {
                    "componentName": "DSTAGE",
                    "resource": "dsi-w7014appv0"
                },
                {
                    "componentName": "SBM_LOGS",
                    "resource": "dsi-w2358appv0"
                }
            ],
            "componentPropSheets": [
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_basedir",
                            "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dbname",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dsn",
                            "value": "INSSRAR0",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_exe",
                            "value": "dmcli",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_pass",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_profile",
                            "value": "dmprofile",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_tmpdir",
                            "value": "\/tmp\/serena",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_user",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_pass",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_user",
                            "value": "root",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DIMENSION"
                },
                {
                    "properties": [
                        {
                            "name": "CST_DSTAGE_ArboDisque_Files",
                            "value": "03-ArboDisques-S\\\\\\\\fichiers_hashcodes| 03-ArboDisques-S\\\\\\\\fichiers_temporaires| 05-ArboDisques-M\\\\\\\\Compte Rendu| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Master| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\TR| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Validation",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Environnement",
                            "value": "Recette|Production|Pre-Production",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_IsTool_Path",
                            "value": "D:\\\\\\\\IS\\\\\\\\Clients\\\\\\\\istools\\\\\\\\cli\\\\\\\\istool.exe",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_M_Folders",
                            "value": "05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Master|05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\TR|05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Validation",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_NAS_Folders",
                            "value": "02-NAS\\\\\\\\Fichiers_manuels|02-NAS\\\\\\\\Fichiers_sortie|02-NAS\\\\\\\\Fichiers_temporaires|02-NAS\\\\\\\\Init|02-NAS\\\\\\\\Sql|02-NAS\\\\\\\\Stockage",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Port_Domaine",
                            "value": "9080",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Root_Directory",
                            "value": "D:\\\\\\\\Deploy\\\\\\\\Serena\\\\\\\\",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_tmp_directories",
                            "value": "tmp|tag|bck|log|tmp\/init|pkg",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_Nas_Projet_Path",
                            "value": "N:\\\\\\\\DS",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DSTAGE"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": "  ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "SBM_LOGS"
                }
            ]
        },
        {
            "name": "DSTAGE-PROD",
            "color": "#800080",
            "requireApprovals": false,
            "cleanupDaysToKeep": 0,
            "cleanupCountToKeep": 0,
            "order": 3,
            "active": true,
            "propSheet": {"properties": []},
            "componentEnvironmentMappings": [
                {
                    "componentName": "SBM_LOGS",
                    "resource": "dsi-w2358appv0"
                },
                {
                    "componentName": "DIMENSION",
                    "resource": "lr2te614"
                },
                {
                    "componentName": "DSTAGE",
                    "resource": "dsi-w2069appv0"
                }
            ],
            "componentPropSheets": [
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_basedir",
                            "value": "\/products\/serena\/dimensions_cm\/server\/cm",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dbname",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_dsn",
                            "value": "INSSRAR0",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_exe",
                            "value": "dmcli",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_pass",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_profile",
                            "value": "dmprofile",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_tmpdir",
                            "value": "\/tmp\/serena",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_dmcli_user",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_pass",
                            "value": "generali",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_Dim_app_user",
                            "value": "root",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DIMENSION"
                },
                {
                    "properties": [
                        {
                            "name": "CST_DSTAGE_ArboDisque_Files",
                            "value": "03-ArboDisques-S\\\\\\\\fichiers_hashcodes| 03-ArboDisques-S\\\\\\\\fichiers_temporaires| 05-ArboDisques-M\\\\\\\\Compte Rendu| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Master| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\TR| 05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Validation",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Environnement",
                            "value": "Recette|Production|Pre-Production",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_IsTool_Path",
                            "value": "D:\\\\\\\\IS\\\\\\\\Clients\\\\\\\\istools\\\\\\\\cli\\\\\\\\istool.exe",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_M_Folders",
                            "value": "05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Master|05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\TR|05-ArboDisques-M\\\\\\\\Suivi\\\\\\\\Validation",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_NAS_Folders",
                            "value": "02-NAS\\\\\\\\Fichiers_manuels|02-NAS\\\\\\\\Fichiers_sortie|02-NAS\\\\\\\\Fichiers_temporaires|02-NAS\\\\\\\\Init|02-NAS\\\\\\\\Sql|02-NAS\\\\\\\\Stockage",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Port_Domaine",
                            "value": "9080",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_Root_Directory",
                            "value": "D:\\\\\\\\Deploy\\\\\\\\Serena\\\\\\\\",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_DSTAGE_tmp_directories",
                            "value": "tmp|tag|bck|log|tmp\/init|pkg",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "CST_Nas_Projet_Path",
                            "value": "N:\\\\\\\\DS",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SASDepot",
                            "value": "\/products\/serena\/sas",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "DSTAGE"
                },
                {
                    "properties": [
                        {
                            "name": "Cst_DIM_SSHHost",
                            "value": "lr2te614.groupe.generali.fr",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassPhrase",
                            "value": "  ",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPassword",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPort",
                            "value": "22",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHPrivateKey",
                            "value": "~\/.ssh\/id_rsa",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHTrust",
                            "value": "true",
                            "description": "",
                            "secure": false
                        },
                        {
                            "name": "Cst_DIM_SSHUser",
                            "value": "dmsys",
                            "description": "",
                            "secure": false
                        }
                    ],
                    "componentName": "SBM_LOGS"
                }
            ]
        }
    ],
    "processes": [
        {
            "name": "LOG",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "7eacdbfbf42347477a6018e3175ad4",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "46ea9677eaccda2151243b301a11ff",
                        "from": "d1bb88970707fe227fb124c2a7c0d0",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "d1bb88970707fe227fb124c2a7c0d0",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "38c169cf951b661601937902a1f57b",
                        "from": "46ea9677eaccda2151243b301a11ff",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "245389c21a3626659a8d5caf5bddb1",
                        "from": "7eacdbfbf42347477a6018e3175ad4",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "38c169cf951b661601937902a1f57b",
                        "from": "245389c21a3626659a8d5caf5bddb1",
                        "type": "SUCCESS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "d1bb88970707fe227fb124c2a7c0d0",
                        "x": 145,
                        "y": 169
                    },
                    {
                        "name": "38c169cf951b661601937902a1f57b",
                        "x": 0,
                        "y": 550
                    },
                    {
                        "name": "245389c21a3626659a8d5caf5bddb1",
                        "x": -275,
                        "y": 387
                    },
                    {
                        "name": "7eacdbfbf42347477a6018e3175ad4",
                        "x": -245,
                        "y": 174
                    },
                    {
                        "name": "46ea9677eaccda2151243b301a11ff",
                        "x": 235,
                        "y": 380
                    }
                ],
                "sizes": [],
                "type": "graph",
                "name": "a7992a55-7283-4033-9889-f456fe3d0ebb",
                "children": [
                    {
                        "type": "finish",
                        "name": "38c169cf951b661601937902a1f57b",
                        "children": []
                    },
                    {
                        "componentName": "DSTAGE",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "7eacdbfbf42347477a6018e3175ad4",
                        "children": [{
                            "componentName": "DSTAGE",
                            "componentProcessName": "LOG - D2U",
                            "allowFailure": false,
                            "properties": {
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}"
                            },
                            "type": "componentProcess",
                            "name": "Transfert Log To Unix",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DSTAGE",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "d1bb88970707fe227fb124c2a7c0d0",
                        "children": [{
                            "componentName": "DSTAGE",
                            "componentProcessName": "BCK - D2U",
                            "allowFailure": false,
                            "properties": {
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}"
                            },
                            "type": "componentProcess",
                            "name": "Transfert BckPackage To Unix",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "SBM_LOGS",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "245389c21a3626659a8d5caf5bddb1",
                        "children": [{
                            "componentName": "SBM_LOGS",
                            "componentProcessName": "DSTAGE_LOGS",
                            "allowFailure": false,
                            "properties": {"SBM_Nom_Log": "${p:SBM_Nom_Log}"},
                            "type": "componentProcess",
                            "name": "Transfert Log to LogNolio",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "SBM_LOGS",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "46ea9677eaccda2151243b301a11ff",
                        "children": [{
                            "componentName": "SBM_LOGS",
                            "componentProcessName": "DSTAGE_LOGS_BCK",
                            "allowFailure": false,
                            "properties": {"SBM_BckPackage": "${p:SBM_BckPackage}"},
                            "type": "componentProcess",
                            "name": "Transfert BckPackage to LogNolio",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": []
        },
        {
            "name": "DEPLOY",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "92f01e170b0dcf940c6ca4c3386698",
                        "from": "ef045a0dd99b381b577702bd9ad464",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "c3f33a95372cfa402491d27d61f3d7",
                        "from": "92f01e170b0dcf940c6ca4c3386698",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "ef045a0dd99b381b577702bd9ad464",
                        "from": "8243a9373e7d28de90723f7de64160",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "8243a9373e7d28de90723f7de64160",
                        "type": "ALWAYS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "ef045a0dd99b381b577702bd9ad464",
                        "x": 230,
                        "y": 284
                    },
                    {
                        "name": "92f01e170b0dcf940c6ca4c3386698",
                        "x": -40,
                        "y": 370
                    },
                    {
                        "name": "c3f33a95372cfa402491d27d61f3d7",
                        "x": 15,
                        "y": 510
                    },
                    {
                        "name": "8243a9373e7d28de90723f7de64160",
                        "x": -27,
                        "y": 203
                    }
                ],
                "sizes": [],
                "type": "graph",
                "name": "82debc71-4046-40fb-8941-e77119f7ee19",
                "children": [
                    {
                        "type": "finish",
                        "name": "c3f33a95372cfa402491d27d61f3d7",
                        "children": []
                    },
                    {
                        "componentName": "DSTAGE",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "8243a9373e7d28de90723f7de64160",
                        "children": [{
                            "componentName": "DSTAGE",
                            "componentProcessName": "DEPLOY",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Environnement": "${p:SBM_Environnement}",
                                "SBM_Login": "${p:SBM_Login}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Password": "${p:SBM_Password}",
                                "SBM_Target_Server3": "${p:SBM_Target_Server3}",
                                "SBM_Target_Server": "${p:SBM_Target_Server}",
                                "SBM_Target_Server2": "${p:SBM_Target_Server2}",
                                "SBM_Package": "${p:SBM_Package}"
                            },
                            "type": "componentProcess",
                            "name": "DStage-Deploy",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "92f01e170b0dcf940c6ca4c3386698",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "IMP_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "Var_change_doc_ids": "ARM_LIVRAISON",
                                "var_pkgname": "${p:SBM_BckPackage}",
                                "var_blname": "${p:SBM_BckPackage}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "Var_directory": "DATASTAGE",
                                "var_rlname": "${p:SBM_BckPackage}"
                            },
                            "type": "componentProcess",
                            "name": "ImportPackage",
                            "children": []
                        }]
                    },
                    {
                        "sleepTime": "1",
                        "type": "processSleep",
                        "name": "ef045a0dd99b381b577702bd9ad464",
                        "children": []
                    }
                ]
            },
            "propDefs": [
                {
                    "name": "SBM_BaselineId",
                    "label": "SBM_BaselineId",
                    "type": "TEXT",
                    "value": "BL_PROJET_INITIAL_30.12.2013_12.07.30_11042",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Package",
                    "label": "SBM_Package",
                    "type": "TEXT",
                    "value": "Projet_Initial_WAP-6037_0.zip",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Folder",
                    "label": "SBM_Folder",
                    "type": "TEXT",
                    "value": "PROJET_INITIAL",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Nom_Log",
                    "label": "SBM_Nom_Log",
                    "type": "TEXT",
                    "value": "BL_PROJET_INITIAL_30.12.2013_12.07.30_11042_033939.txt",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BckPackage",
                    "label": "SBM_BckPackage",
                    "type": "TEXT",
                    "value": "BCK_PROJET_INITIAL_30.12.2013_12.07.30_11044_REC",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Projet",
                    "label": "SBM_Projet",
                    "type": "TEXT",
                    "value": "Projet_Initial",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Password",
                    "label": "SBM_Password",
                    "type": "TEXT",
                    "value": "ds\\$iad",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Login",
                    "label": "SBM_Login",
                    "type": "TEXT",
                    "value": "iad",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server",
                    "label": "SBM_Target_Server",
                    "type": "TEXT",
                    "value": "dsi-w7004app0",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server2",
                    "label": "SBM_Target_Server2",
                    "type": "TEXT",
                    "value": "dsi-w7005app0",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server3",
                    "label": "SBM_Target_Server3",
                    "type": "TEXT",
                    "value": "dsi-w7006app0",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "SBM_Environnement",
                    "label": "SBM_Environnement",
                    "type": "TEXT",
                    "value": "Recette",
                    "required": true,
                    "description": ""
                }
            ]
        },
        {
            "name": "BACKUP",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "28d4d85f6507b838565be46113a2db",
                        "from": "e1835462c57de52bd9d9514755cae4",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "c22463608421a740a05e8d7239943d",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "e1835462c57de52bd9d9514755cae4",
                        "from": "c22463608421a740a05e8d7239943d",
                        "type": "SUCCESS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "e1835462c57de52bd9d9514755cae4",
                        "x": -266.5,
                        "y": 270
                    },
                    {
                        "name": "28d4d85f6507b838565be46113a2db",
                        "x": 0,
                        "y": 420
                    },
                    {
                        "name": "c22463608421a740a05e8d7239943d",
                        "x": -83,
                        "y": 173
                    }
                ],
                "sizes": [],
                "type": "graph",
                "name": "3d58a0d8-1098-4ca7-a257-9862c5f47174",
                "children": [
                    {
                        "type": "finish",
                        "name": "28d4d85f6507b838565be46113a2db",
                        "children": []
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "e1835462c57de52bd9d9514755cae4",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "IMP_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "Var_change_doc_ids": "ARM_LIVRAISON",
                                "var_pkgname": "${p:SBM_BckPackage}",
                                "var_blname": "${p:SBM_BckPackage}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "Var_directory": "DATASTAGE",
                                "var_rlname": "${p:SBM_BckPackage}"
                            },
                            "type": "componentProcess",
                            "name": "ImportPackage",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DSTAGE",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "c22463608421a740a05e8d7239943d",
                        "children": [{
                            "componentName": "DSTAGE",
                            "componentProcessName": "BACKUPFULL",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Environnement": "${p:SBM_Environnement}",
                                "SBM_Login": "${p:SBM_Login}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Password": "${p:SBM_Password}",
                                "SBM_Target_Server3": "${p:SBM_Target_Server3}",
                                "SBM_Target_Server": "${p:SBM_Target_Server}",
                                "SBM_Target_Server2": "${p:SBM_Target_Server2}",
                                "SBM_Package": "${p:SBM_Package}"
                            },
                            "type": "componentProcess",
                            "name": "BackUpFull",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": [
                {
                    "name": "SBM_BaselineId",
                    "label": "SBM_BaselineId",
                    "type": "TEXT",
                    "value": "BL_PROJET_INITIAL_30.12.2013_12.07.30_11042",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Package",
                    "label": "SBM_Package",
                    "type": "TEXT",
                    "value": "Projet_Initial_WAP-6037_0.zip",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Folder",
                    "label": "SBM_Folder",
                    "type": "TEXT",
                    "value": "PROJET_INITIAL",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Nom_Log",
                    "label": "SBM_Nom_Log",
                    "type": "TEXT",
                    "value": "BL_PROJET_INITIAL_30.12.2013_12.07.30_11042_033939.txt",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BckPackage",
                    "label": "SBM_BckPackage",
                    "type": "TEXT",
                    "value": "BCK_PROJET_INITIAL_30.12.2013_12.07.30_11044_REC",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Projet",
                    "label": "SBM_Projet",
                    "type": "TEXT",
                    "value": "Projet_Initial",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Password",
                    "label": "SBM_Password",
                    "type": "TEXT",
                    "value": "ds\\$iad",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Login",
                    "label": "SBM_Login",
                    "type": "TEXT",
                    "value": "iad",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server",
                    "label": "SBM_Target_Server",
                    "type": "TEXT",
                    "value": "dsi-w7004app0",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server2",
                    "label": "SBM_Target_Server2",
                    "type": "TEXT",
                    "value": "dsi-w7005app0",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server3",
                    "label": "SBM_Target_Server3",
                    "type": "TEXT",
                    "value": "dsi-w7006app0",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "SBM_Environnement",
                    "label": "SBM_Environnement",
                    "type": "TEXT",
                    "value": "Recette",
                    "required": true,
                    "description": ""
                }
            ]
        },
        {
            "name": "DEPLOY_BACKUP",
            "description": "",
            "inventoryManagementType": "AUTOMATIC",
            "offlineAgentHandling": "PRE_EXECUTION_CHECK",
            "rootActivity": {
                "edges": [
                    {
                        "to": "ffd66de243fcd13510e293a6bf820c",
                        "type": "ALWAYS",
                        "value": ""
                    },
                    {
                        "to": "5f916307a4167d1e518ed338099027",
                        "from": "afefe950bde703cf9af6ad245e7f11",
                        "type": "SUCCESS",
                        "value": ""
                    },
                    {
                        "to": "afefe950bde703cf9af6ad245e7f11",
                        "from": "ffd66de243fcd13510e293a6bf820c",
                        "type": "SUCCESS",
                        "value": ""
                    }
                ],
                "offsets": [
                    {
                        "name": "5f916307a4167d1e518ed338099027",
                        "x": -17.5,
                        "y": 530
                    },
                    {
                        "name": "ffd66de243fcd13510e293a6bf820c",
                        "x": -245,
                        "y": 140
                    },
                    {
                        "name": "afefe950bde703cf9af6ad245e7f11",
                        "x": -155,
                        "y": 260
                    }
                ],
                "sizes": [
                    {
                        "name": "ffd66de243fcd13510e293a6bf820c",
                        "width": 180,
                        "height": 60
                    },
                    {
                        "name": "5f916307a4167d1e518ed338099027",
                        "width": 80,
                        "height": 50
                    },
                    {
                        "name": "afefe950bde703cf9af6ad245e7f11",
                        "width": 150,
                        "height": 60
                    }
                ],
                "type": "graph",
                "name": "e966ea1b-24a4-46f1-b67f-73eb7c941caf",
                "children": [
                    {
                        "type": "finish",
                        "name": "5f916307a4167d1e518ed338099027",
                        "children": []
                    },
                    {
                        "componentName": "DSTAGE",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "afefe950bde703cf9af6ad245e7f11",
                        "children": [{
                            "componentName": "DSTAGE",
                            "componentProcessName": "DEPLOYBACKUP",
                            "allowFailure": false,
                            "properties": {
                                "SBM_Environnement": "${p:SBM_Environnement}",
                                "SBM_Login": "${p:SBM_Login}",
                                "SBM_BckPackage": "${p:SBM_BckPackage}",
                                "SBM_BaselineId": "${p:SBM_BaselineId}",
                                "SBM_Folder": "${p:SBM_Folder}",
                                "SBM_Nom_Log": "${p:SBM_Nom_Log}",
                                "SBM_Projet": "${p:SBM_Projet}",
                                "SBM_Password": "${p:SBM_Password}",
                                "SBM_Target_Server3": "${p:SBM_Target_Server3}",
                                "SBM_Target_Server": "${p:SBM_Target_Server}",
                                "SBM_Target_Server2": "${p:SBM_Target_Server2}",
                                "SBM_Package": "${p:SBM_Package}"
                            },
                            "type": "componentProcess",
                            "name": "DeployBackup",
                            "children": []
                        }]
                    },
                    {
                        "componentName": "DIMENSION",
                        "properties": [
                            {
                                "name": "failFast",
                                "value": "false"
                            },
                            {
                                "name": "runOnlyOnFirst",
                                "value": "false"
                            },
                            {
                                "name": "maxIteration",
                                "value": "-1"
                            }
                        ],
                        "type": "componentEnvironmentIterator",
                        "name": "ffd66de243fcd13510e293a6bf820c",
                        "children": [{
                            "componentName": "DIMENSION",
                            "componentProcessName": "GET_PKG_WITH_BL",
                            "allowFailure": false,
                            "properties": {
                                "var_pkgname": "${p:SBM_BckPackage}",
                                "var_blname": "${p:SBM_BckPackage}"
                            },
                            "type": "componentProcess",
                            "name": "GetPackageWithBL",
                            "children": []
                        }]
                    }
                ]
            },
            "propDefs": [
                {
                    "name": "SBM_BaselineId",
                    "label": "SBM_BaselineId",
                    "type": "TEXT",
                    "value": "BL_PROJET_INITIAL_30.12.2013_12.07.30_11042",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Package",
                    "label": "SBM_Package",
                    "type": "TEXT",
                    "value": "Projet_Initial_WAP-6037_0.zip",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Folder",
                    "label": "SBM_Folder",
                    "type": "TEXT",
                    "value": "PROJET_INITIAL",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Nom_Log",
                    "label": "SBM_Nom_Log",
                    "type": "TEXT",
                    "value": "BL_PROJET_INITIAL_30.12.2013_12.07.30_11042_033939.txt",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_BckPackage",
                    "label": "SBM_BckPackage",
                    "type": "TEXT",
                    "value": "BCK_PROJET_INITIAL_30.12.2013_12.07.30_11044_REC",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Projet",
                    "label": "SBM_Projet",
                    "type": "TEXT",
                    "value": "Projet_Initial",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Password",
                    "label": "SBM_Password",
                    "type": "TEXT",
                    "value": "ds\\$iad",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Login",
                    "label": "SBM_Login",
                    "type": "TEXT",
                    "value": "iad",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server",
                    "label": "SBM_Target_Server",
                    "type": "TEXT",
                    "value": "dsi-w7004app0",
                    "required": true,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server2",
                    "label": "SBM_Target_Server2",
                    "type": "TEXT",
                    "value": "dsi-w7005app0",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "SBM_Target_Server3",
                    "label": "SBM_Target_Server3",
                    "type": "TEXT",
                    "value": "dsi-w7006app0",
                    "required": false,
                    "description": ""
                },
                {
                    "name": "SBM_Environnement",
                    "label": "SBM_Environnement",
                    "type": "TEXT",
                    "value": "Recette",
                    "required": true,
                    "description": ""
                }
            ]
        }
    ],
    "taskDefs": []
}